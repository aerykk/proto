// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace custom.protocol.rpc {
  
  public static partial class Rpc {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_custom_protocol_rpc_Packet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::custom.protocol.rpc.Packet, global::custom.protocol.rpc.Packet.Builder> internal__static_custom_protocol_rpc_Packet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_custom_protocol_rpc_Varint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::custom.protocol.rpc.Varint, global::custom.protocol.rpc.Varint.Builder> internal__static_custom_protocol_rpc_Varint__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Rpc() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Ch1jdXN0b20vcHJvdG9jb2wvcnBjL3JwYy5wcm90bxITY3VzdG9tLnByb3Rv" + 
          "Y29sLnJwYyIkCgZQYWNrZXQSDAoEc2l6ZRgBIAEoDRIMCgRkYXRhGAIgASgM" + 
          "IhcKBlZhcmludBINCgV2YWx1ZRgBIAEoDQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_custom_protocol_rpc_Packet__Descriptor = Descriptor.MessageTypes[0];
        internal__static_custom_protocol_rpc_Packet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::custom.protocol.rpc.Packet, global::custom.protocol.rpc.Packet.Builder>(internal__static_custom_protocol_rpc_Packet__Descriptor,
                new string[] { "Size", "Data", });
        internal__static_custom_protocol_rpc_Varint__Descriptor = Descriptor.MessageTypes[1];
        internal__static_custom_protocol_rpc_Varint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::custom.protocol.rpc.Varint, global::custom.protocol.rpc.Varint.Builder>(internal__static_custom_protocol_rpc_Varint__Descriptor,
                new string[] { "Value", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class Packet : pb::GeneratedMessage<Packet, Packet.Builder> {
    private static readonly Packet defaultInstance = new Builder().BuildPartial();
    public static Packet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Packet DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Packet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::custom.protocol.rpc.Rpc.internal__static_custom_protocol_rpc_Packet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Packet, Packet.Builder> InternalFieldAccessors {
      get { return global::custom.protocol.rpc.Rpc.internal__static_custom_protocol_rpc_Packet__FieldAccessorTable; }
    }
    
    public const int SizeFieldNumber = 1;
    private bool hasSize;
    private uint size_ = 0;
    public bool HasSize {
      get { return hasSize; }
    }
    public uint Size {
      get { return size_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasSize) {
        output.WriteUInt32(1, Size);
      }
      if (HasData) {
        output.WriteBytes(2, Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasSize) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Size);
        }
        if (HasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Packet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Packet ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Packet prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Packet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Packet result = new Packet();
      
      protected override Packet MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Packet();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::custom.protocol.rpc.Packet.Descriptor; }
      }
      
      public override Packet DefaultInstanceForType {
        get { return global::custom.protocol.rpc.Packet.DefaultInstance; }
      }
      
      public override Packet BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Packet returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Packet) {
          return MergeFrom((Packet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Packet other) {
        if (other == global::custom.protocol.rpc.Packet.DefaultInstance) return this;
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Size = input.ReadUInt32();
              break;
            }
            case 18: {
              Data = input.ReadBytes();
              break;
            }
          }
        }
      }
      
      
      public bool HasSize {
        get { return result.HasSize; }
      }
      public uint Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      public Builder SetSize(uint value) {
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasData {
        get { return result.HasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Packet() {
      object.ReferenceEquals(global::custom.protocol.rpc.Rpc.Descriptor, null);
    }
  }
  
  public sealed partial class Varint : pb::GeneratedMessage<Varint, Varint.Builder> {
    private static readonly Varint defaultInstance = new Builder().BuildPartial();
    public static Varint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Varint DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Varint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::custom.protocol.rpc.Rpc.internal__static_custom_protocol_rpc_Varint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Varint, Varint.Builder> InternalFieldAccessors {
      get { return global::custom.protocol.rpc.Rpc.internal__static_custom_protocol_rpc_Varint__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private uint value_ = 0;
    public bool HasValue {
      get { return hasValue; }
    }
    public uint Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasValue) {
        output.WriteUInt32(1, Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasValue) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Varint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Varint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Varint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Varint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Varint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Varint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Varint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Varint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Varint ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Varint ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Varint prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Varint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Varint result = new Varint();
      
      protected override Varint MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Varint();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::custom.protocol.rpc.Varint.Descriptor; }
      }
      
      public override Varint DefaultInstanceForType {
        get { return global::custom.protocol.rpc.Varint.DefaultInstance; }
      }
      
      public override Varint BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Varint returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Varint) {
          return MergeFrom((Varint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Varint other) {
        if (other == global::custom.protocol.rpc.Varint.DefaultInstance) return this;
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Value = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasValue {
        get { return result.HasValue; }
      }
      public uint Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(uint value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
    }
    static Varint() {
      object.ReferenceEquals(global::custom.protocol.rpc.Rpc.Descriptor, null);
    }
  }
  
  #endregion
  
}
