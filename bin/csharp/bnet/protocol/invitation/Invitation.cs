// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.invitation {
  
  namespace Proto {
    
    public static partial class Invitation {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Invitation__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder> internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Suggestion__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder> internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder> internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder> internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_GenericRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder> internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Invitation() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Ch1saWIvcHJvdG9jb2wvaW52aXRhdGlvbi5wcm90bxIYYm5ldC5wcm90b2Nv" + 
            "bC5pbnZpdGF0aW9uGhxsaWIvcHJvdG9jb2wvYXR0cmlidXRlLnByb3RvGhls" + 
            "aWIvcHJvdG9jb2wvZW50aXR5LnByb3RvIv0BCgpJbnZpdGF0aW9uEgoKAmlk" + 
            "GAEgAigGEjEKEGludml0ZXJfaWRlbnRpdHkYAiACKAsyFy5ibmV0LnByb3Rv" + 
            "Y29sLklkZW50aXR5EjEKEGludml0ZWVfaWRlbnRpdHkYAyACKAsyFy5ibmV0" + 
            "LnByb3RvY29sLklkZW50aXR5EhQKDGludml0ZXJfbmFtZRgEIAEoCRIUCgxp" + 
            "bnZpdGVlX25hbWUYBSABKAkSGgoSaW52aXRhdGlvbl9tZXNzYWdlGAYgASgJ" + 
            "EhUKDWNyZWF0aW9uX3RpbWUYByABKAQSFwoPZXhwaXJhdGlvbl90aW1lGAgg" + 
            "ASgEKgUIZBCQTiLHAQoKU3VnZ2VzdGlvbhIrCgpjaGFubmVsX2lkGAEgASgL" + 
            "MhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBItCgxzdWdnZXN0ZXJfaWQYAiAC" + 
            "KAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEi0KDHN1Z2dlc3RlZV9pZBgD" + 
            "IAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSFgoOc3VnZ2VzdGVyX25h" + 
            "bWUYBCABKAkSFgoOc3VnZ2VzdGVlX25hbWUYBSABKAkiswEKFVNlbmRJbnZp" + 
            "dGF0aW9uUmVxdWVzdBIvCg5hZ2VudF9pZGVudGl0eRgBIAEoCzIXLmJuZXQu" + 
            "cHJvdG9jb2wuSWRlbnRpdHkSKgoJdGFyZ2V0X2lkGAIgAigLMhcuYm5ldC5w" + 
            "cm90b2NvbC5FbnRpdHlJZBIaChJpbnZpdGF0aW9uX21lc3NhZ2UYAyABKAkS" + 
            "GgoPZXhwaXJhdGlvbl90aW1lGAQgASgEOgEwKgUIZBCQTiJSChZTZW5kSW52" + 
            "aXRhdGlvblJlc3BvbnNlEjgKCmludml0YXRpb24YAiABKAsyJC5ibmV0LnBy" + 
            "b3RvY29sLmludml0YXRpb24uSW52aXRhdGlvbiJ+Cg5HZW5lcmljUmVxdWVz" + 
            "dBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQS" + 
            "KgoJdGFyZ2V0X2lkGAIgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIV" + 
            "Cg1pbnZpdGF0aW9uX2lkGAMgAigGQg1CC0NJbnZpdGF0aW9u");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_invitation_Invitation__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder>(internal__static_bnet_protocol_invitation_Invitation__Descriptor,
                  new string[] { "Id", "InviterIdentity", "InviteeIdentity", "InviterName", "InviteeName", "InvitationMessage", "CreationTime", "ExpirationTime", });
          internal__static_bnet_protocol_invitation_Suggestion__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder>(internal__static_bnet_protocol_invitation_Suggestion__Descriptor,
                  new string[] { "ChannelId", "SuggesterId", "SuggesteeId", "SuggesterName", "SuggesteeName", });
          internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder>(internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor,
                  new string[] { "AgentIdentity", "TargetId", "InvitationMessage", "ExpirationTime", });
          internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder>(internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor,
                  new string[] { "Invitation", });
          internal__static_bnet_protocol_invitation_GenericRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder>(internal__static_bnet_protocol_invitation_GenericRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "InvitationId", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  public sealed partial class Invitation : pb::ExtendableMessage<Invitation, Invitation.Builder> {
    private static readonly Invitation defaultInstance = new Builder().BuildPartial();
    public static Invitation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Invitation DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Invitation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_Invitation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Invitation, Invitation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int InviterIdentityFieldNumber = 2;
    private bool hasInviterIdentity;
    private global::bnet.protocol.Identity inviterIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
    public bool HasInviterIdentity {
      get { return hasInviterIdentity; }
    }
    public global::bnet.protocol.Identity InviterIdentity {
      get { return inviterIdentity_; }
    }
    
    public const int InviteeIdentityFieldNumber = 3;
    private bool hasInviteeIdentity;
    private global::bnet.protocol.Identity inviteeIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
    public bool HasInviteeIdentity {
      get { return hasInviteeIdentity; }
    }
    public global::bnet.protocol.Identity InviteeIdentity {
      get { return inviteeIdentity_; }
    }
    
    public const int InviterNameFieldNumber = 4;
    private bool hasInviterName;
    private string inviterName_ = "";
    public bool HasInviterName {
      get { return hasInviterName; }
    }
    public string InviterName {
      get { return inviterName_; }
    }
    
    public const int InviteeNameFieldNumber = 5;
    private bool hasInviteeName;
    private string inviteeName_ = "";
    public bool HasInviteeName {
      get { return hasInviteeName; }
    }
    public string InviteeName {
      get { return inviteeName_; }
    }
    
    public const int InvitationMessageFieldNumber = 6;
    private bool hasInvitationMessage;
    private string invitationMessage_ = "";
    public bool HasInvitationMessage {
      get { return hasInvitationMessage; }
    }
    public string InvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int CreationTimeFieldNumber = 7;
    private bool hasCreationTime;
    private ulong creationTime_ = 0UL;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 8;
    private bool hasExpirationTime;
    private ulong expirationTime_ = 0UL;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasInviterIdentity) return false;
        if (!hasInviteeIdentity) return false;
        if (!InviterIdentity.IsInitialized) return false;
        if (!InviteeIdentity.IsInitialized) return false;
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      pb::ExtendableMessage<Invitation, Invitation.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (HasId) {
        output.WriteFixed64(1, Id);
      }
      if (HasInviterIdentity) {
        output.WriteMessage(2, InviterIdentity);
      }
      if (HasInviteeIdentity) {
        output.WriteMessage(3, InviteeIdentity);
      }
      if (HasInviterName) {
        output.WriteString(4, InviterName);
      }
      if (HasInviteeName) {
        output.WriteString(5, InviteeName);
      }
      if (HasInvitationMessage) {
        output.WriteString(6, InvitationMessage);
      }
      if (HasCreationTime) {
        output.WriteUInt64(7, CreationTime);
      }
      if (HasExpirationTime) {
        output.WriteUInt64(8, ExpirationTime);
      }
      extensionWriter.WriteUntil(10000, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, Id);
        }
        if (HasInviterIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, InviterIdentity);
        }
        if (HasInviteeIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, InviteeIdentity);
        }
        if (HasInviterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, InviterName);
        }
        if (HasInviteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, InviteeName);
        }
        if (HasInvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(6, InvitationMessage);
        }
        if (HasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
        }
        if (HasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Invitation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Invitation ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Invitation prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::ExtendableBuilder<Invitation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Invitation result = new Invitation();
      
      protected override Invitation MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Invitation();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Invitation.Descriptor; }
      }
      
      public override Invitation DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Invitation.DefaultInstance; }
      }
      
      public override Invitation BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Invitation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Invitation) {
          return MergeFrom((Invitation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Invitation other) {
        if (other == global::bnet.protocol.invitation.Invitation.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasInviterIdentity) {
          MergeInviterIdentity(other.InviterIdentity);
        }
        if (other.HasInviteeIdentity) {
          MergeInviteeIdentity(other.InviteeIdentity);
        }
        if (other.HasInviterName) {
          InviterName = other.InviterName;
        }
        if (other.HasInviteeName) {
          InviteeName = other.InviteeName;
        }
        if (other.HasInvitationMessage) {
          InvitationMessage = other.InvitationMessage;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 9: {
              Id = input.ReadFixed64();
              break;
            }
            case 18: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (HasInviterIdentity) {
                subBuilder.MergeFrom(InviterIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviterIdentity = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (HasInviteeIdentity) {
                subBuilder.MergeFrom(InviteeIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteeIdentity = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              InviterName = input.ReadString();
              break;
            }
            case 42: {
              InviteeName = input.ReadString();
              break;
            }
            case 50: {
              InvitationMessage = input.ReadString();
              break;
            }
            case 56: {
              CreationTime = input.ReadUInt64();
              break;
            }
            case 64: {
              ExpirationTime = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasInviterIdentity {
       get { return result.HasInviterIdentity; }
      }
      public global::bnet.protocol.Identity InviterIdentity {
        get { return result.InviterIdentity; }
        set { SetInviterIdentity(value); }
      }
      public Builder SetInviterIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInviterIdentity = true;
        result.inviterIdentity_ = value;
        return this;
      }
      public Builder SetInviterIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasInviterIdentity = true;
        result.inviterIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviterIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasInviterIdentity &&
            result.inviterIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviterIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviterIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviterIdentity_ = value;
        }
        result.hasInviterIdentity = true;
        return this;
      }
      public Builder ClearInviterIdentity() {
        result.hasInviterIdentity = false;
        result.inviterIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
        return this;
      }
      
      public bool HasInviteeIdentity {
       get { return result.HasInviteeIdentity; }
      }
      public global::bnet.protocol.Identity InviteeIdentity {
        get { return result.InviteeIdentity; }
        set { SetInviteeIdentity(value); }
      }
      public Builder SetInviteeIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInviteeIdentity = true;
        result.inviteeIdentity_ = value;
        return this;
      }
      public Builder SetInviteeIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasInviteeIdentity = true;
        result.inviteeIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteeIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasInviteeIdentity &&
            result.inviteeIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviteeIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviteeIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteeIdentity_ = value;
        }
        result.hasInviteeIdentity = true;
        return this;
      }
      public Builder ClearInviteeIdentity() {
        result.hasInviteeIdentity = false;
        result.inviteeIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
        return this;
      }
      
      public bool HasInviterName {
        get { return result.HasInviterName; }
      }
      public string InviterName {
        get { return result.InviterName; }
        set { SetInviterName(value); }
      }
      public Builder SetInviterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInviterName = true;
        result.inviterName_ = value;
        return this;
      }
      public Builder ClearInviterName() {
        result.hasInviterName = false;
        result.inviterName_ = "";
        return this;
      }
      
      public bool HasInviteeName {
        get { return result.HasInviteeName; }
      }
      public string InviteeName {
        get { return result.InviteeName; }
        set { SetInviteeName(value); }
      }
      public Builder SetInviteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInviteeName = true;
        result.inviteeName_ = value;
        return this;
      }
      public Builder ClearInviteeName() {
        result.hasInviteeName = false;
        result.inviteeName_ = "";
        return this;
      }
      
      public bool HasInvitationMessage {
        get { return result.HasInvitationMessage; }
      }
      public string InvitationMessage {
        get { return result.InvitationMessage; }
        set { SetInvitationMessage(value); }
      }
      public Builder SetInvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearInvitationMessage() {
        result.hasInvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.HasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.HasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static Invitation() {
      object.ReferenceEquals(global::bnet.protocol.invitation.Proto.Invitation.Descriptor, null);
    }
  }
  
  public sealed partial class Suggestion : pb::GeneratedMessage<Suggestion, Suggestion.Builder> {
    private static readonly Suggestion defaultInstance = new Builder().BuildPartial();
    public static Suggestion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Suggestion DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Suggestion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_Suggestion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Suggestion, Suggestion.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable; }
    }
    
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bnet.protocol.EntityId channelId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bnet.protocol.EntityId ChannelId {
      get { return channelId_; }
    }
    
    public const int SuggesterIdFieldNumber = 2;
    private bool hasSuggesterId;
    private global::bnet.protocol.EntityId suggesterId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasSuggesterId {
      get { return hasSuggesterId; }
    }
    public global::bnet.protocol.EntityId SuggesterId {
      get { return suggesterId_; }
    }
    
    public const int SuggesteeIdFieldNumber = 3;
    private bool hasSuggesteeId;
    private global::bnet.protocol.EntityId suggesteeId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasSuggesteeId {
      get { return hasSuggesteeId; }
    }
    public global::bnet.protocol.EntityId SuggesteeId {
      get { return suggesteeId_; }
    }
    
    public const int SuggesterNameFieldNumber = 4;
    private bool hasSuggesterName;
    private string suggesterName_ = "";
    public bool HasSuggesterName {
      get { return hasSuggesterName; }
    }
    public string SuggesterName {
      get { return suggesterName_; }
    }
    
    public const int SuggesteeNameFieldNumber = 5;
    private bool hasSuggesteeName;
    private string suggesteeName_ = "";
    public bool HasSuggesteeName {
      get { return hasSuggesteeName; }
    }
    public string SuggesteeName {
      get { return suggesteeName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuggesterId) return false;
        if (!hasSuggesteeId) return false;
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (!SuggesterId.IsInitialized) return false;
        if (!SuggesteeId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasChannelId) {
        output.WriteMessage(1, ChannelId);
      }
      if (HasSuggesterId) {
        output.WriteMessage(2, SuggesterId);
      }
      if (HasSuggesteeId) {
        output.WriteMessage(3, SuggesteeId);
      }
      if (HasSuggesterName) {
        output.WriteString(4, SuggesterName);
      }
      if (HasSuggesteeName) {
        output.WriteString(5, SuggesteeName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ChannelId);
        }
        if (HasSuggesterId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SuggesterId);
        }
        if (HasSuggesteeId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, SuggesteeId);
        }
        if (HasSuggesterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, SuggesterName);
        }
        if (HasSuggesteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, SuggesteeName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Suggestion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Suggestion prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Suggestion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Suggestion result = new Suggestion();
      
      protected override Suggestion MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Suggestion();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Suggestion.Descriptor; }
      }
      
      public override Suggestion DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Suggestion.DefaultInstance; }
      }
      
      public override Suggestion BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Suggestion returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Suggestion) {
          return MergeFrom((Suggestion) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Suggestion other) {
        if (other == global::bnet.protocol.invitation.Suggestion.DefaultInstance) return this;
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasSuggesterId) {
          MergeSuggesterId(other.SuggesterId);
        }
        if (other.HasSuggesteeId) {
          MergeSuggesteeId(other.SuggesteeId);
        }
        if (other.HasSuggesterName) {
          SuggesterName = other.SuggesterName;
        }
        if (other.HasSuggesteeName) {
          SuggesteeName = other.SuggesteeName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasSuggesterId) {
                subBuilder.MergeFrom(SuggesterId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuggesterId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasSuggesteeId) {
                subBuilder.MergeFrom(SuggesteeId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuggesteeId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              SuggesterName = input.ReadString();
              break;
            }
            case 42: {
              SuggesteeName = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasChannelId {
       get { return result.HasChannelId; }
      }
      public global::bnet.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasChannelId &&
            result.channelId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bnet.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        result.hasChannelId = false;
        result.channelId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasSuggesterId {
       get { return result.HasSuggesterId; }
      }
      public global::bnet.protocol.EntityId SuggesterId {
        get { return result.SuggesterId; }
        set { SetSuggesterId(value); }
      }
      public Builder SetSuggesterId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSuggesterId = true;
        result.suggesterId_ = value;
        return this;
      }
      public Builder SetSuggesterId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasSuggesterId = true;
        result.suggesterId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesterId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasSuggesterId &&
            result.suggesterId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesterId_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesterId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesterId_ = value;
        }
        result.hasSuggesterId = true;
        return this;
      }
      public Builder ClearSuggesterId() {
        result.hasSuggesterId = false;
        result.suggesterId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasSuggesteeId {
       get { return result.HasSuggesteeId; }
      }
      public global::bnet.protocol.EntityId SuggesteeId {
        get { return result.SuggesteeId; }
        set { SetSuggesteeId(value); }
      }
      public Builder SetSuggesteeId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSuggesteeId = true;
        result.suggesteeId_ = value;
        return this;
      }
      public Builder SetSuggesteeId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasSuggesteeId = true;
        result.suggesteeId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesteeId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasSuggesteeId &&
            result.suggesteeId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesteeId_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesteeId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesteeId_ = value;
        }
        result.hasSuggesteeId = true;
        return this;
      }
      public Builder ClearSuggesteeId() {
        result.hasSuggesteeId = false;
        result.suggesteeId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasSuggesterName {
        get { return result.HasSuggesterName; }
      }
      public string SuggesterName {
        get { return result.SuggesterName; }
        set { SetSuggesterName(value); }
      }
      public Builder SetSuggesterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSuggesterName = true;
        result.suggesterName_ = value;
        return this;
      }
      public Builder ClearSuggesterName() {
        result.hasSuggesterName = false;
        result.suggesterName_ = "";
        return this;
      }
      
      public bool HasSuggesteeName {
        get { return result.HasSuggesteeName; }
      }
      public string SuggesteeName {
        get { return result.SuggesteeName; }
        set { SetSuggesteeName(value); }
      }
      public Builder SetSuggesteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasSuggesteeName = true;
        result.suggesteeName_ = value;
        return this;
      }
      public Builder ClearSuggesteeName() {
        result.hasSuggesteeName = false;
        result.suggesteeName_ = "";
        return this;
      }
    }
    static Suggestion() {
      object.ReferenceEquals(global::bnet.protocol.invitation.Proto.Invitation.Descriptor, null);
    }
  }
  
  public sealed partial class SendInvitationRequest : pb::ExtendableMessage<SendInvitationRequest, SendInvitationRequest.Builder> {
    private static readonly SendInvitationRequest defaultInstance = new Builder().BuildPartial();
    public static SendInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SendInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bnet.protocol.Identity agentIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bnet.protocol.Identity AgentIdentity {
      get { return agentIdentity_; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public const int InvitationMessageFieldNumber = 3;
    private bool hasInvitationMessage;
    private string invitationMessage_ = "";
    public bool HasInvitationMessage {
      get { return hasInvitationMessage; }
    }
    public string InvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int ExpirationTimeFieldNumber = 4;
    private bool hasExpirationTime;
    private ulong expirationTime_ = 0UL;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (HasAgentIdentity) {
          if (!AgentIdentity.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      pb::ExtendableMessage<SendInvitationRequest, SendInvitationRequest.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (HasAgentIdentity) {
        output.WriteMessage(1, AgentIdentity);
      }
      if (HasTargetId) {
        output.WriteMessage(2, TargetId);
      }
      if (HasInvitationMessage) {
        output.WriteString(3, InvitationMessage);
      }
      if (HasExpirationTime) {
        output.WriteUInt64(4, ExpirationTime);
      }
      extensionWriter.WriteUntil(10000, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAgentIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentIdentity);
        }
        if (HasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (HasInvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, InvitationMessage);
        }
        if (HasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::ExtendableBuilder<SendInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SendInvitationRequest result = new SendInvitationRequest();
      
      protected override SendInvitationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SendInvitationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.Descriptor; }
      }
      
      public override SendInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance; }
      }
      
      public override SendInvitationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SendInvitationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationRequest) {
          return MergeFrom((SendInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationRequest other) {
        if (other == global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance) return this;
        if (other.HasAgentIdentity) {
          MergeAgentIdentity(other.AgentIdentity);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasInvitationMessage) {
          InvitationMessage = other.InvitationMessage;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (HasAgentIdentity) {
                subBuilder.MergeFrom(AgentIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentIdentity = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              InvitationMessage = input.ReadString();
              break;
            }
            case 32: {
              ExpirationTime = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasAgentIdentity {
       get { return result.HasAgentIdentity; }
      }
      public global::bnet.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAgentIdentity &&
            result.agentIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        result.hasAgentIdentity = false;
        result.agentIdentity_ = global::bnet.protocol.Identity.DefaultInstance;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.HasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasInvitationMessage {
        get { return result.HasInvitationMessage; }
      }
      public string InvitationMessage {
        get { return result.InvitationMessage; }
        set { SetInvitationMessage(value); }
      }
      public Builder SetInvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearInvitationMessage() {
        result.hasInvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.HasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static SendInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.Proto.Invitation.Descriptor, null);
    }
  }
  
  public sealed partial class SendInvitationResponse : pb::GeneratedMessage<SendInvitationResponse, SendInvitationResponse.Builder> {
    private static readonly SendInvitationResponse defaultInstance = new Builder().BuildPartial();
    public static SendInvitationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SendInvitationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationResponse, SendInvitationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 2;
    private bool hasInvitation;
    private global::bnet.protocol.invitation.Invitation invitation_ = global::bnet.protocol.invitation.Invitation.DefaultInstance;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bnet.protocol.invitation.Invitation Invitation {
      get { return invitation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasInvitation) {
        output.WriteMessage(2, Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SendInvitationResponse result = new SendInvitationResponse();
      
      protected override SendInvitationResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SendInvitationResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.Descriptor; }
      }
      
      public override SendInvitationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance; }
      }
      
      public override SendInvitationResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SendInvitationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationResponse) {
          return MergeFrom((SendInvitationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationResponse other) {
        if (other == global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance) return this;
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 18: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (HasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasInvitation {
       get { return result.HasInvitation; }
      }
      public global::bnet.protocol.invitation.Invitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasInvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        result.hasInvitation = false;
        result.invitation_ = global::bnet.protocol.invitation.Invitation.DefaultInstance;
        return this;
      }
    }
    static SendInvitationResponse() {
      object.ReferenceEquals(global::bnet.protocol.invitation.Proto.Invitation.Descriptor, null);
    }
  }
  
  public sealed partial class GenericRequest : pb::GeneratedMessage<GenericRequest, GenericRequest.Builder> {
    private static readonly GenericRequest defaultInstance = new Builder().BuildPartial();
    public static GenericRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenericRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GenericRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_GenericRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenericRequest, GenericRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.Proto.Invitation.internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_ = 0;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitationId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAgentId) {
        output.WriteMessage(1, AgentId);
      }
      if (HasTargetId) {
        output.WriteMessage(2, TargetId);
      }
      if (HasInvitationId) {
        output.WriteFixed64(3, InvitationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (HasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (HasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenericRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenericRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GenericRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GenericRequest result = new GenericRequest();
      
      protected override GenericRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GenericRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.GenericRequest.Descriptor; }
      }
      
      public override GenericRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.GenericRequest.DefaultInstance; }
      }
      
      public override GenericRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GenericRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenericRequest) {
          return MergeFrom((GenericRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenericRequest other) {
        if (other == global::bnet.protocol.invitation.GenericRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              InvitationId = input.ReadFixed64();
              break;
            }
          }
        }
      }
      
      
      public bool HasAgentId {
       get { return result.HasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.HasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.HasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
    }
    static GenericRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.Proto.Invitation.Descriptor, null);
    }
  }
  
  #endregion
  
}
