// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.attribute {
  
  namespace Proto {
    
    public static partial class Attribute {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_attribute_Variant__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.Variant, global::bnet.protocol.attribute.Variant.Builder> internal__static_bnet_protocol_attribute_Variant__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_attribute_Attribute__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.Attribute, global::bnet.protocol.attribute.Attribute.Builder> internal__static_bnet_protocol_attribute_Attribute__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_attribute_AttributeFilter__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.AttributeFilter, global::bnet.protocol.attribute.AttributeFilter.Builder> internal__static_bnet_protocol_attribute_AttributeFilter__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Attribute() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChxsaWIvcHJvdG9jb2wvYXR0cmlidXRlLnByb3RvEhdibmV0LnByb3RvY29s" + 
            "LmF0dHJpYnV0ZSKwAQoHVmFyaWFudBISCgpib29sX3ZhbHVlGAIgASgIEhEK" + 
            "CWludF92YWx1ZRgDIAEoAxITCgtmbG9hdF92YWx1ZRgEIAEoARIUCgxzdHJp" + 
            "bmdfdmFsdWUYBSABKAkSEgoKYmxvYl92YWx1ZRgGIAEoDBIVCg1tZXNzYWdl" + 
            "X3ZhbHVlGAcgASgMEhQKDGZvdXJjY192YWx1ZRgIIAEoCRISCgp1aW50X3Zh" + 
            "bHVlGAkgASgEIkoKCUF0dHJpYnV0ZRIMCgRuYW1lGAEgAigJEi8KBXZhbHVl" + 
            "GAIgAigLMiAuYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUuVmFyaWFudCLgAQoP" + 
            "QXR0cmlidXRlRmlsdGVyEj4KAm9wGAEgAigOMjIuYm5ldC5wcm90b2NvbC5h" + 
            "dHRyaWJ1dGUuQXR0cmlidXRlRmlsdGVyLk9wZXJhdGlvbhI1CglhdHRyaWJ1" + 
            "dGUYAiADKAsyIi5ibmV0LnByb3RvY29sLmF0dHJpYnV0ZS5BdHRyaWJ1dGUi" + 
            "VgoJT3BlcmF0aW9uEg4KCk1BVENIX05PTkUQABINCglNQVRDSF9BTlkQARIN" + 
            "CglNQVRDSF9BTEwQAhIbChdNQVRDSF9BTExfTU9TVF9TUEVDSUZJQxADQgxC" + 
            "CkNBdHRyaWJ1dGU=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_attribute_Variant__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_attribute_Variant__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.Variant, global::bnet.protocol.attribute.Variant.Builder>(internal__static_bnet_protocol_attribute_Variant__Descriptor,
                  new string[] { "BoolValue", "IntValue", "FloatValue", "StringValue", "BlobValue", "MessageValue", "FourccValue", "UintValue", });
          internal__static_bnet_protocol_attribute_Attribute__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_attribute_Attribute__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.Attribute, global::bnet.protocol.attribute.Attribute.Builder>(internal__static_bnet_protocol_attribute_Attribute__Descriptor,
                  new string[] { "Name", "Value", });
          internal__static_bnet_protocol_attribute_AttributeFilter__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_attribute_AttributeFilter__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.attribute.AttributeFilter, global::bnet.protocol.attribute.AttributeFilter.Builder>(internal__static_bnet_protocol_attribute_AttributeFilter__Descriptor,
                  new string[] { "Op", "Attribute", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  public sealed partial class Variant : pb::GeneratedMessage<Variant, Variant.Builder> {
    private static readonly Variant defaultInstance = new Builder().BuildPartial();
    public static Variant DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Variant DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Variant ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_Variant__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Variant, Variant.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_Variant__FieldAccessorTable; }
    }
    
    public const int BoolValueFieldNumber = 2;
    private bool hasBoolValue;
    private bool boolValue_ = false;
    public bool HasBoolValue {
      get { return hasBoolValue; }
    }
    public bool BoolValue {
      get { return boolValue_; }
    }
    
    public const int IntValueFieldNumber = 3;
    private bool hasIntValue;
    private long intValue_ = 0L;
    public bool HasIntValue {
      get { return hasIntValue; }
    }
    public long IntValue {
      get { return intValue_; }
    }
    
    public const int FloatValueFieldNumber = 4;
    private bool hasFloatValue;
    private double floatValue_ = 0D;
    public bool HasFloatValue {
      get { return hasFloatValue; }
    }
    public double FloatValue {
      get { return floatValue_; }
    }
    
    public const int StringValueFieldNumber = 5;
    private bool hasStringValue;
    private string stringValue_ = "";
    public bool HasStringValue {
      get { return hasStringValue; }
    }
    public string StringValue {
      get { return stringValue_; }
    }
    
    public const int BlobValueFieldNumber = 6;
    private bool hasBlobValue;
    private pb::ByteString blobValue_ = pb::ByteString.Empty;
    public bool HasBlobValue {
      get { return hasBlobValue; }
    }
    public pb::ByteString BlobValue {
      get { return blobValue_; }
    }
    
    public const int MessageValueFieldNumber = 7;
    private bool hasMessageValue;
    private pb::ByteString messageValue_ = pb::ByteString.Empty;
    public bool HasMessageValue {
      get { return hasMessageValue; }
    }
    public pb::ByteString MessageValue {
      get { return messageValue_; }
    }
    
    public const int FourccValueFieldNumber = 8;
    private bool hasFourccValue;
    private string fourccValue_ = "";
    public bool HasFourccValue {
      get { return hasFourccValue; }
    }
    public string FourccValue {
      get { return fourccValue_; }
    }
    
    public const int UintValueFieldNumber = 9;
    private bool hasUintValue;
    private ulong uintValue_ = 0UL;
    public bool HasUintValue {
      get { return hasUintValue; }
    }
    [global::System.CLSCompliant(false)]
    public ulong UintValue {
      get { return uintValue_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasBoolValue) {
        output.WriteBool(2, BoolValue);
      }
      if (HasIntValue) {
        output.WriteInt64(3, IntValue);
      }
      if (HasFloatValue) {
        output.WriteDouble(4, FloatValue);
      }
      if (HasStringValue) {
        output.WriteString(5, StringValue);
      }
      if (HasBlobValue) {
        output.WriteBytes(6, BlobValue);
      }
      if (HasMessageValue) {
        output.WriteBytes(7, MessageValue);
      }
      if (HasFourccValue) {
        output.WriteString(8, FourccValue);
      }
      if (HasUintValue) {
        output.WriteUInt64(9, UintValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasBoolValue) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, BoolValue);
        }
        if (HasIntValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, IntValue);
        }
        if (HasFloatValue) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, FloatValue);
        }
        if (HasStringValue) {
          size += pb::CodedOutputStream.ComputeStringSize(5, StringValue);
        }
        if (HasBlobValue) {
          size += pb::CodedOutputStream.ComputeBytesSize(6, BlobValue);
        }
        if (HasMessageValue) {
          size += pb::CodedOutputStream.ComputeBytesSize(7, MessageValue);
        }
        if (HasFourccValue) {
          size += pb::CodedOutputStream.ComputeStringSize(8, FourccValue);
        }
        if (HasUintValue) {
          size += pb::CodedOutputStream.ComputeUInt64Size(9, UintValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Variant ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Variant ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Variant ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Variant ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Variant ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Variant ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Variant ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Variant ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Variant prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Variant, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Variant result = new Variant();
      
      protected override Variant MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Variant();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.attribute.Variant.Descriptor; }
      }
      
      public override Variant DefaultInstanceForType {
        get { return global::bnet.protocol.attribute.Variant.DefaultInstance; }
      }
      
      public override Variant BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Variant returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Variant) {
          return MergeFrom((Variant) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Variant other) {
        if (other == global::bnet.protocol.attribute.Variant.DefaultInstance) return this;
        if (other.HasBoolValue) {
          BoolValue = other.BoolValue;
        }
        if (other.HasIntValue) {
          IntValue = other.IntValue;
        }
        if (other.HasFloatValue) {
          FloatValue = other.FloatValue;
        }
        if (other.HasStringValue) {
          StringValue = other.StringValue;
        }
        if (other.HasBlobValue) {
          BlobValue = other.BlobValue;
        }
        if (other.HasMessageValue) {
          MessageValue = other.MessageValue;
        }
        if (other.HasFourccValue) {
          FourccValue = other.FourccValue;
        }
        if (other.HasUintValue) {
          UintValue = other.UintValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 16: {
              BoolValue = input.ReadBool();
              break;
            }
            case 24: {
              IntValue = input.ReadInt64();
              break;
            }
            case 33: {
              FloatValue = input.ReadDouble();
              break;
            }
            case 42: {
              StringValue = input.ReadString();
              break;
            }
            case 50: {
              BlobValue = input.ReadBytes();
              break;
            }
            case 58: {
              MessageValue = input.ReadBytes();
              break;
            }
            case 66: {
              FourccValue = input.ReadString();
              break;
            }
            case 72: {
              UintValue = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasBoolValue {
        get { return result.HasBoolValue; }
      }
      public bool BoolValue {
        get { return result.BoolValue; }
        set { SetBoolValue(value); }
      }
      public Builder SetBoolValue(bool value) {
        result.hasBoolValue = true;
        result.boolValue_ = value;
        return this;
      }
      public Builder ClearBoolValue() {
        result.hasBoolValue = false;
        result.boolValue_ = false;
        return this;
      }
      
      public bool HasIntValue {
        get { return result.HasIntValue; }
      }
      public long IntValue {
        get { return result.IntValue; }
        set { SetIntValue(value); }
      }
      public Builder SetIntValue(long value) {
        result.hasIntValue = true;
        result.intValue_ = value;
        return this;
      }
      public Builder ClearIntValue() {
        result.hasIntValue = false;
        result.intValue_ = 0L;
        return this;
      }
      
      public bool HasFloatValue {
        get { return result.HasFloatValue; }
      }
      public double FloatValue {
        get { return result.FloatValue; }
        set { SetFloatValue(value); }
      }
      public Builder SetFloatValue(double value) {
        result.hasFloatValue = true;
        result.floatValue_ = value;
        return this;
      }
      public Builder ClearFloatValue() {
        result.hasFloatValue = false;
        result.floatValue_ = 0D;
        return this;
      }
      
      public bool HasStringValue {
        get { return result.HasStringValue; }
      }
      public string StringValue {
        get { return result.StringValue; }
        set { SetStringValue(value); }
      }
      public Builder SetStringValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasStringValue = true;
        result.stringValue_ = value;
        return this;
      }
      public Builder ClearStringValue() {
        result.hasStringValue = false;
        result.stringValue_ = "";
        return this;
      }
      
      public bool HasBlobValue {
        get { return result.HasBlobValue; }
      }
      public pb::ByteString BlobValue {
        get { return result.BlobValue; }
        set { SetBlobValue(value); }
      }
      public Builder SetBlobValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBlobValue = true;
        result.blobValue_ = value;
        return this;
      }
      public Builder ClearBlobValue() {
        result.hasBlobValue = false;
        result.blobValue_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMessageValue {
        get { return result.HasMessageValue; }
      }
      public pb::ByteString MessageValue {
        get { return result.MessageValue; }
        set { SetMessageValue(value); }
      }
      public Builder SetMessageValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessageValue = true;
        result.messageValue_ = value;
        return this;
      }
      public Builder ClearMessageValue() {
        result.hasMessageValue = false;
        result.messageValue_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFourccValue {
        get { return result.HasFourccValue; }
      }
      public string FourccValue {
        get { return result.FourccValue; }
        set { SetFourccValue(value); }
      }
      public Builder SetFourccValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFourccValue = true;
        result.fourccValue_ = value;
        return this;
      }
      public Builder ClearFourccValue() {
        result.hasFourccValue = false;
        result.fourccValue_ = "";
        return this;
      }
      
      public bool HasUintValue {
        get { return result.HasUintValue; }
      }
      [global::System.CLSCompliant(false)]
      public ulong UintValue {
        get { return result.UintValue; }
        set { SetUintValue(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUintValue(ulong value) {
        result.hasUintValue = true;
        result.uintValue_ = value;
        return this;
      }
      public Builder ClearUintValue() {
        result.hasUintValue = false;
        result.uintValue_ = 0UL;
        return this;
      }
    }
    static Variant() {
      object.ReferenceEquals(global::bnet.protocol.attribute.Proto.Attribute.Descriptor, null);
    }
  }
  
  public sealed partial class Attribute : pb::GeneratedMessage<Attribute, Attribute.Builder> {
    private static readonly Attribute defaultInstance = new Builder().BuildPartial();
    public static Attribute DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Attribute DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Attribute ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_Attribute__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Attribute, Attribute.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_Attribute__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::bnet.protocol.attribute.Variant value_ = global::bnet.protocol.attribute.Variant.DefaultInstance;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::bnet.protocol.attribute.Variant Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasName) {
        output.WriteString(1, Name);
      }
      if (HasValue) {
        output.WriteMessage(2, Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (HasValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Attribute ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attribute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attribute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attribute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Attribute ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Attribute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Attribute ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attribute ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Attribute prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Attribute, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Attribute result = new Attribute();
      
      protected override Attribute MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Attribute();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.attribute.Attribute.Descriptor; }
      }
      
      public override Attribute DefaultInstanceForType {
        get { return global::bnet.protocol.attribute.Attribute.DefaultInstance; }
      }
      
      public override Attribute BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Attribute returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Attribute) {
          return MergeFrom((Attribute) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Attribute other) {
        if (other == global::bnet.protocol.attribute.Attribute.DefaultInstance) return this;
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              global::bnet.protocol.attribute.Variant.Builder subBuilder = global::bnet.protocol.attribute.Variant.CreateBuilder();
              if (HasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasName {
        get { return result.HasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
       get { return result.HasValue; }
      }
      public global::bnet.protocol.attribute.Variant Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::bnet.protocol.attribute.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::bnet.protocol.attribute.Variant.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::bnet.protocol.attribute.Variant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasValue &&
            result.value_ != global::bnet.protocol.attribute.Variant.DefaultInstance) {
            result.value_ = global::bnet.protocol.attribute.Variant.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        result.hasValue = false;
        result.value_ = global::bnet.protocol.attribute.Variant.DefaultInstance;
        return this;
      }
    }
    static Attribute() {
      object.ReferenceEquals(global::bnet.protocol.attribute.Proto.Attribute.Descriptor, null);
    }
  }
  
  public sealed partial class AttributeFilter : pb::GeneratedMessage<AttributeFilter, AttributeFilter.Builder> {
    private static readonly AttributeFilter defaultInstance = new Builder().BuildPartial();
    public static AttributeFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AttributeFilter DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AttributeFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_AttributeFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AttributeFilter, AttributeFilter.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.attribute.Proto.Attribute.internal__static_bnet_protocol_attribute_AttributeFilter__FieldAccessorTable; }
    }
    
    #region Nested types
    public static class Types {
      public enum Operation {
        MATCH_NONE = 0,
        MATCH_ANY = 1,
        MATCH_ALL = 2,
        MATCH_ALL_MOST_SPECIFIC = 3,
      }
      
    }
    #endregion
    
    public const int OpFieldNumber = 1;
    private bool hasOp;
    private global::bnet.protocol.attribute.AttributeFilter.Types.Operation op_ = global::bnet.protocol.attribute.AttributeFilter.Types.Operation.MATCH_NONE;
    public bool HasOp {
      get { return hasOp; }
    }
    public global::bnet.protocol.attribute.AttributeFilter.Types.Operation Op {
      get { return op_; }
    }
    
    public const int AttributeFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOp) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOp) {
        output.WriteEnum(1, (int) Op);
      }
      foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
        output.WriteMessage(2, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOp) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Op);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AttributeFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AttributeFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AttributeFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AttributeFilter ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AttributeFilter prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AttributeFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AttributeFilter result = new AttributeFilter();
      
      protected override AttributeFilter MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AttributeFilter();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.attribute.AttributeFilter.Descriptor; }
      }
      
      public override AttributeFilter DefaultInstanceForType {
        get { return global::bnet.protocol.attribute.AttributeFilter.DefaultInstance; }
      }
      
      public override AttributeFilter BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.attribute_.MakeReadOnly();
        AttributeFilter returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AttributeFilter) {
          return MergeFrom((AttributeFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AttributeFilter other) {
        if (other == global::bnet.protocol.attribute.AttributeFilter.DefaultInstance) return this;
        if (other.HasOp) {
          Op = other.Op;
        }
        if (other.attribute_.Count != 0) {
          base.AddRange(other.attribute_, result.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              int rawValue = input.ReadEnum();
              if (!global::System.Enum.IsDefined(typeof(global::bnet.protocol.attribute.AttributeFilter.Types.Operation), rawValue)) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong) rawValue);
              } else {
                Op = (global::bnet.protocol.attribute.AttributeFilter.Types.Operation) rawValue;
              }
              break;
            }
            case 18: {
              global::bnet.protocol.attribute.Attribute.Builder subBuilder = global::bnet.protocol.attribute.Attribute.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddAttribute(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public bool HasOp {
       get { return result.HasOp; }
      }
      public global::bnet.protocol.attribute.AttributeFilter.Types.Operation Op {
        get { return result.Op; }
        set { SetOp(value); }
      }
      public Builder SetOp(global::bnet.protocol.attribute.AttributeFilter.Types.Operation value) {
        result.hasOp = true;
        result.op_ = value;
        return this;
      }
      public Builder ClearOp() {
        result.hasOp = false;
        result.op_ = global::bnet.protocol.attribute.AttributeFilter.Types.Operation.MATCH_NONE;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return result.attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.attribute_);
        return this;
      }
      public Builder ClearAttribute() {
        result.attribute_.Clear();
        return this;
      }
    }
    static AttributeFilter() {
      object.ReferenceEquals(global::bnet.protocol.attribute.Proto.Attribute.Descriptor, null);
    }
  }
  
  #endregion
  
}
