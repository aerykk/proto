// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol {
  
  public static partial class Rpc {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::bnet.protocol.Rpc.MethodId);
      registry.Add(global::bnet.protocol.Rpc.Cost);
      registry.Add(global::bnet.protocol.Rpc.Timeout);
    }
    #endregion
    #region Extensions
    public const int MethodIdFieldNumber = 50000;
    [global::System.CLSCompliant(false)]
    public static pb::GeneratedExtensionBase<uint> MethodId;
    public const int CostFieldNumber = 50001;
    [global::System.CLSCompliant(false)]
    public static pb::GeneratedExtensionBase<uint> Cost;
    public const int TimeoutFieldNumber = 50002;
    public static pb::GeneratedExtensionBase<float> Timeout;
    #endregion
    
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_NO_RESPONSE__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder> internal__static_bnet_protocol_NO_RESPONSE__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_Address__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Address, global::bnet.protocol.Address.Builder> internal__static_bnet_protocol_Address__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_ProcessId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ProcessId, global::bnet.protocol.ProcessId.Builder> internal__static_bnet_protocol_ProcessId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_ObjectAddress__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ObjectAddress, global::bnet.protocol.ObjectAddress.Builder> internal__static_bnet_protocol_ObjectAddress__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_NoData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder> internal__static_bnet_protocol_NoData__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Rpc() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChFsaWIvcnBjL3JwYy5wcm90bxINYm5ldC5wcm90b2NvbBogZ29vZ2xlL3By" + 
          "b3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8iDQoLTk9fUkVTUE9OU0UiTgoHQWRk" + 
          "cmVzcxIPCgdhZGRyZXNzGAEgAigJEgwKBHBvcnQYAiABKA0SJAoEbmV4dBgD" + 
          "IAEoCzIWLmJuZXQucHJvdG9jb2wuQWRkcmVzcyIpCglQcm9jZXNzSWQSDQoF" + 
          "bGFiZWwYASACKA0SDQoFZXBvY2gYAiACKA0iSgoNT2JqZWN0QWRkcmVzcxIm" + 
          "CgRob3N0GAEgAigLMhguYm5ldC5wcm90b2NvbC5Qcm9jZXNzSWQSEQoJb2Jq" + 
          "ZWN0X2lkGAIgAigEIggKBk5vRGF0YTozCgltZXRob2RfaWQSHi5nb29nbGUu" + 
          "cHJvdG9idWYuTWV0aG9kT3B0aW9ucxjQhgMgASgNOi4KBGNvc3QSHi5nb29n" + 
          "bGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjRhgMgASgNOjEKB3RpbWVvdXQS" + 
          "Hi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjShgMgASgC");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_NO_RESPONSE__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_NO_RESPONSE__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(internal__static_bnet_protocol_NO_RESPONSE__Descriptor,
                new string[] { });
        internal__static_bnet_protocol_Address__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_Address__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Address, global::bnet.protocol.Address.Builder>(internal__static_bnet_protocol_Address__Descriptor,
                new string[] { "Address_", "Port", "Next", });
        internal__static_bnet_protocol_ProcessId__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_ProcessId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ProcessId, global::bnet.protocol.ProcessId.Builder>(internal__static_bnet_protocol_ProcessId__Descriptor,
                new string[] { "Label", "Epoch", });
        internal__static_bnet_protocol_ObjectAddress__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_ObjectAddress__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ObjectAddress, global::bnet.protocol.ObjectAddress.Builder>(internal__static_bnet_protocol_ObjectAddress__Descriptor,
                new string[] { "Host", "ObjectId", });
        internal__static_bnet_protocol_NoData__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_NoData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(internal__static_bnet_protocol_NoData__Descriptor,
                new string[] { });
        global::bnet.protocol.Rpc.MethodId = pb::GeneratedSingleExtension<uint>.CreateInstance(global::bnet.protocol.Rpc.Descriptor.Extensions[0]);
        global::bnet.protocol.Rpc.Cost = pb::GeneratedSingleExtension<uint>.CreateInstance(global::bnet.protocol.Rpc.Descriptor.Extensions[1]);
        global::bnet.protocol.Rpc.Timeout = pb::GeneratedSingleExtension<float>.CreateInstance(global::bnet.protocol.Rpc.Descriptor.Extensions[2]);
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class NO_RESPONSE : pb::GeneratedMessage<NO_RESPONSE, NO_RESPONSE.Builder> {
    private static readonly NO_RESPONSE defaultInstance = new Builder().BuildPartial();
    public static NO_RESPONSE DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NO_RESPONSE DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override NO_RESPONSE ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_NO_RESPONSE__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NO_RESPONSE, NO_RESPONSE.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_NO_RESPONSE__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static NO_RESPONSE ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NO_RESPONSE ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NO_RESPONSE ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NO_RESPONSE ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NO_RESPONSE prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<NO_RESPONSE, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      NO_RESPONSE result = new NO_RESPONSE();
      
      protected override NO_RESPONSE MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new NO_RESPONSE();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.NO_RESPONSE.Descriptor; }
      }
      
      public override NO_RESPONSE DefaultInstanceForType {
        get { return global::bnet.protocol.NO_RESPONSE.DefaultInstance; }
      }
      
      public override NO_RESPONSE BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        NO_RESPONSE returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NO_RESPONSE) {
          return MergeFrom((NO_RESPONSE) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NO_RESPONSE other) {
        if (other == global::bnet.protocol.NO_RESPONSE.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static NO_RESPONSE() {
      object.ReferenceEquals(global::bnet.protocol.Rpc.Descriptor, null);
    }
  }
  
  public sealed partial class Address : pb::GeneratedMessage<Address, Address.Builder> {
    private static readonly Address defaultInstance = new Builder().BuildPartial();
    public static Address DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Address DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Address ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_Address__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Address, Address.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_Address__FieldAccessorTable; }
    }
    
    public const int Address_FieldNumber = 1;
    private bool hasAddress_;
    private string address_ = "";
    public bool HasAddress_ {
      get { return hasAddress_; }
    }
    public string Address_ {
      get { return address_; }
    }
    
    public const int PortFieldNumber = 2;
    private bool hasPort;
    private uint port_ = 0;
    public bool HasPort {
      get { return hasPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint Port {
      get { return port_; }
    }
    
    public const int NextFieldNumber = 3;
    private bool hasNext;
    private global::bnet.protocol.Address next_ = global::bnet.protocol.Address.DefaultInstance;
    public bool HasNext {
      get { return hasNext; }
    }
    public global::bnet.protocol.Address Next {
      get { return next_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAddress_) return false;
        if (HasNext) {
          if (!Next.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAddress_) {
        output.WriteString(1, Address_);
      }
      if (HasPort) {
        output.WriteUInt32(2, Port);
      }
      if (HasNext) {
        output.WriteMessage(3, Next);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAddress_) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Address_);
        }
        if (HasPort) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Port);
        }
        if (HasNext) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Next);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Address ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Address ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Address ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Address ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Address ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Address ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Address ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Address ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Address ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Address ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Address prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Address, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Address result = new Address();
      
      protected override Address MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Address();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.Address.Descriptor; }
      }
      
      public override Address DefaultInstanceForType {
        get { return global::bnet.protocol.Address.DefaultInstance; }
      }
      
      public override Address BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        Address returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Address) {
          return MergeFrom((Address) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Address other) {
        if (other == global::bnet.protocol.Address.DefaultInstance) return this;
        if (other.HasAddress_) {
          Address_ = other.Address_;
        }
        if (other.HasPort) {
          Port = other.Port;
        }
        if (other.HasNext) {
          MergeNext(other.Next);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Address_ = input.ReadString();
              break;
            }
            case 16: {
              Port = input.ReadUInt32();
              break;
            }
            case 26: {
              global::bnet.protocol.Address.Builder subBuilder = global::bnet.protocol.Address.CreateBuilder();
              if (HasNext) {
                subBuilder.MergeFrom(Next);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Next = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasAddress_ {
        get { return result.HasAddress_; }
      }
      public string Address_ {
        get { return result.Address_; }
        set { SetAddress_(value); }
      }
      public Builder SetAddress_(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAddress_ = true;
        result.address_ = value;
        return this;
      }
      public Builder ClearAddress_() {
        result.hasAddress_ = false;
        result.address_ = "";
        return this;
      }
      
      public bool HasPort {
        get { return result.HasPort; }
      }
      [global::System.CLSCompliant(false)]
      public uint Port {
        get { return result.Port; }
        set { SetPort(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPort(uint value) {
        result.hasPort = true;
        result.port_ = value;
        return this;
      }
      public Builder ClearPort() {
        result.hasPort = false;
        result.port_ = 0;
        return this;
      }
      
      public bool HasNext {
       get { return result.HasNext; }
      }
      public global::bnet.protocol.Address Next {
        get { return result.Next; }
        set { SetNext(value); }
      }
      public Builder SetNext(global::bnet.protocol.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasNext = true;
        result.next_ = value;
        return this;
      }
      public Builder SetNext(global::bnet.protocol.Address.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasNext = true;
        result.next_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNext(global::bnet.protocol.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasNext &&
            result.next_ != global::bnet.protocol.Address.DefaultInstance) {
            result.next_ = global::bnet.protocol.Address.CreateBuilder(result.next_).MergeFrom(value).BuildPartial();
        } else {
          result.next_ = value;
        }
        result.hasNext = true;
        return this;
      }
      public Builder ClearNext() {
        result.hasNext = false;
        result.next_ = global::bnet.protocol.Address.DefaultInstance;
        return this;
      }
    }
    static Address() {
      object.ReferenceEquals(global::bnet.protocol.Rpc.Descriptor, null);
    }
  }
  
  public sealed partial class ProcessId : pb::GeneratedMessage<ProcessId, ProcessId.Builder> {
    private static readonly ProcessId defaultInstance = new Builder().BuildPartial();
    public static ProcessId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProcessId DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ProcessId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_ProcessId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProcessId, ProcessId.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_ProcessId__FieldAccessorTable; }
    }
    
    public const int LabelFieldNumber = 1;
    private bool hasLabel;
    private uint label_ = 0;
    public bool HasLabel {
      get { return hasLabel; }
    }
    [global::System.CLSCompliant(false)]
    public uint Label {
      get { return label_; }
    }
    
    public const int EpochFieldNumber = 2;
    private bool hasEpoch;
    private uint epoch_ = 0;
    public bool HasEpoch {
      get { return hasEpoch; }
    }
    [global::System.CLSCompliant(false)]
    public uint Epoch {
      get { return epoch_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLabel) return false;
        if (!hasEpoch) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasLabel) {
        output.WriteUInt32(1, Label);
      }
      if (HasEpoch) {
        output.WriteUInt32(2, Epoch);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasLabel) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Label);
        }
        if (HasEpoch) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Epoch);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProcessId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProcessId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProcessId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProcessId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProcessId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProcessId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProcessId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProcessId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProcessId ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProcessId ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProcessId prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ProcessId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ProcessId result = new ProcessId();
      
      protected override ProcessId MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ProcessId();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.ProcessId.Descriptor; }
      }
      
      public override ProcessId DefaultInstanceForType {
        get { return global::bnet.protocol.ProcessId.DefaultInstance; }
      }
      
      public override ProcessId BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ProcessId returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProcessId) {
          return MergeFrom((ProcessId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProcessId other) {
        if (other == global::bnet.protocol.ProcessId.DefaultInstance) return this;
        if (other.HasLabel) {
          Label = other.Label;
        }
        if (other.HasEpoch) {
          Epoch = other.Epoch;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              Label = input.ReadUInt32();
              break;
            }
            case 16: {
              Epoch = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasLabel {
        get { return result.HasLabel; }
      }
      [global::System.CLSCompliant(false)]
      public uint Label {
        get { return result.Label; }
        set { SetLabel(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLabel(uint value) {
        result.hasLabel = true;
        result.label_ = value;
        return this;
      }
      public Builder ClearLabel() {
        result.hasLabel = false;
        result.label_ = 0;
        return this;
      }
      
      public bool HasEpoch {
        get { return result.HasEpoch; }
      }
      [global::System.CLSCompliant(false)]
      public uint Epoch {
        get { return result.Epoch; }
        set { SetEpoch(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEpoch(uint value) {
        result.hasEpoch = true;
        result.epoch_ = value;
        return this;
      }
      public Builder ClearEpoch() {
        result.hasEpoch = false;
        result.epoch_ = 0;
        return this;
      }
    }
    static ProcessId() {
      object.ReferenceEquals(global::bnet.protocol.Rpc.Descriptor, null);
    }
  }
  
  public sealed partial class ObjectAddress : pb::GeneratedMessage<ObjectAddress, ObjectAddress.Builder> {
    private static readonly ObjectAddress defaultInstance = new Builder().BuildPartial();
    public static ObjectAddress DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ObjectAddress DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ObjectAddress ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_ObjectAddress__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ObjectAddress, ObjectAddress.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_ObjectAddress__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private global::bnet.protocol.ProcessId host_ = global::bnet.protocol.ProcessId.DefaultInstance;
    public bool HasHost {
      get { return hasHost; }
    }
    public global::bnet.protocol.ProcessId Host {
      get { return host_; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_ = 0UL;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasObjectId) return false;
        if (!Host.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasHost) {
        output.WriteMessage(1, Host);
      }
      if (HasObjectId) {
        output.WriteUInt64(2, ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasHost) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Host);
        }
        if (HasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ObjectAddress ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ObjectAddress ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ObjectAddress ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ObjectAddress ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectAddress ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ObjectAddress prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ObjectAddress, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ObjectAddress result = new ObjectAddress();
      
      protected override ObjectAddress MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ObjectAddress();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.ObjectAddress.Descriptor; }
      }
      
      public override ObjectAddress DefaultInstanceForType {
        get { return global::bnet.protocol.ObjectAddress.DefaultInstance; }
      }
      
      public override ObjectAddress BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ObjectAddress returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ObjectAddress) {
          return MergeFrom((ObjectAddress) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ObjectAddress other) {
        if (other == global::bnet.protocol.ObjectAddress.DefaultInstance) return this;
        if (other.HasHost) {
          MergeHost(other.Host);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.ProcessId.Builder subBuilder = global::bnet.protocol.ProcessId.CreateBuilder();
              if (HasHost) {
                subBuilder.MergeFrom(Host);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Host = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              ObjectId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasHost {
       get { return result.HasHost; }
      }
      public global::bnet.protocol.ProcessId Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(global::bnet.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder SetHost(global::bnet.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasHost = true;
        result.host_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHost(global::bnet.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasHost &&
            result.host_ != global::bnet.protocol.ProcessId.DefaultInstance) {
            result.host_ = global::bnet.protocol.ProcessId.CreateBuilder(result.host_).MergeFrom(value).BuildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder ClearHost() {
        result.hasHost = false;
        result.host_ = global::bnet.protocol.ProcessId.DefaultInstance;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.HasObjectId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static ObjectAddress() {
      object.ReferenceEquals(global::bnet.protocol.Rpc.Descriptor, null);
    }
  }
  
  public sealed partial class NoData : pb::GeneratedMessage<NoData, NoData.Builder> {
    private static readonly NoData defaultInstance = new Builder().BuildPartial();
    public static NoData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NoData DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override NoData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_NoData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NoData, NoData.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Rpc.internal__static_bnet_protocol_NoData__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static NoData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NoData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NoData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NoData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NoData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NoData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NoData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NoData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NoData ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NoData ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NoData prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<NoData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      NoData result = new NoData();
      
      protected override NoData MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new NoData();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.NoData.Descriptor; }
      }
      
      public override NoData DefaultInstanceForType {
        get { return global::bnet.protocol.NoData.DefaultInstance; }
      }
      
      public override NoData BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        NoData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NoData) {
          return MergeFrom((NoData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NoData other) {
        if (other == global::bnet.protocol.NoData.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static NoData() {
      object.ReferenceEquals(global::bnet.protocol.Rpc.Descriptor, null);
    }
  }
  
  #endregion
  
}
