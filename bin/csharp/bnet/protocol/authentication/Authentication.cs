// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.authentication {
  
  public static partial class Authentication {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder> internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder> internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder> internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder> internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder> internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AuthenticationConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthenticationConfig, global::bnet.protocol.authentication.AuthenticationConfig.Builder> internal__static_bnet_protocol_authentication_AuthenticationConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AuthModuleVariant__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthModuleVariant, global::bnet.protocol.authentication.AuthModuleVariant.Builder> internal__static_bnet_protocol_authentication_AuthModuleVariant__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AuthModuleConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthModuleConfig, global::bnet.protocol.authentication.AuthModuleConfig.Builder> internal__static_bnet_protocol_authentication_AuthModuleConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AuthAgreementLocale__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthAgreementLocale, global::bnet.protocol.authentication.AuthAgreementLocale.Builder> internal__static_bnet_protocol_authentication_AuthAgreementLocale__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AuthAgreement__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthAgreement, global::bnet.protocol.authentication.AuthAgreement.Builder> internal__static_bnet_protocol_authentication_AuthAgreement__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Authentication() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CitzZXJ2aWNlL2F1dGhlbnRpY2F0aW9uL2F1dGhlbnRpY2F0aW9uLnByb3Rv" + 
          "EhxibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9uGhFsaWIvcnBjL3JwYy5w" + 
          "cm90bxohbGliL3Byb3RvY29sL2NvbnRlbnRfaGFuZGxlLnByb3RvGhlsaWIv" + 
          "cHJvdG9jb2wvZW50aXR5LnByb3RvGh9saWIvY29uZmlnL3Byb2Nlc3NfY29u" + 
          "ZmlnLnByb3RvIlkKEU1vZHVsZUxvYWRSZXF1ZXN0EjMKDW1vZHVsZV9oYW5k" + 
          "bGUYASACKAsyHC5ibmV0LnByb3RvY29sLkNvbnRlbnRIYW5kbGUSDwoHbWVz" + 
          "c2FnZRgCIAEoDCInChJNb2R1bGVMb2FkUmVzcG9uc2USEQoJbW9kdWxlX2lk" + 
          "GAIgASgFIjoKFE1vZHVsZU1lc3NhZ2VSZXF1ZXN0EhEKCW1vZHVsZV9pZBgB" + 
          "IAIoBRIPCgdtZXNzYWdlGAIgASgMInYKDExvZ29uUmVxdWVzdBIPCgdwcm9n" + 
          "cmFtGAEgASgJEhAKCHBsYXRmb3JtGAIgASgJEg4KBmxvY2FsZRgDIAEoCRIN" + 
          "CgVlbWFpbBgEIAEoCRITCgtsaXN0ZW5lcl9pZBgFIAEoBBIPCgd2ZXJzaW9u" + 
          "GAYgASgJImgKDUxvZ29uUmVzcG9uc2USKAoHYWNjb3VudBgBIAIoCzIXLmJu" + 
          "ZXQucHJvdG9jb2wuRW50aXR5SWQSLQoMZ2FtZV9hY2NvdW50GAIgAigLMhcu" + 
          "Ym5ldC5wcm90b2NvbC5FbnRpdHlJZCKmAQoUQXV0aGVudGljYXRpb25Db25m" + 
          "aWcSLgoGbW9kdWxlGAEgAygLMh4uYm5ldC5wcm90b2NvbC5jb25maWcuUmVz" + 
          "b3VyY2USFQoNYWxsb3dfdmVyc2lvbhgCIAMoCRIUCgxkZW55X3ZlcnNpb24Y" + 
          "AyADKAkSMQoJYWdyZWVtZW50GAQgAygLMh4uYm5ldC5wcm90b2NvbC5jb25m" + 
          "aWcuUmVzb3VyY2UiNQoRQXV0aE1vZHVsZVZhcmlhbnQSEAoIcGxhdGZvcm0Y" + 
          "ASACKAkSDgoGaGFuZGxlGAIgAigJIlQKEEF1dGhNb2R1bGVDb25maWcSQAoH" + 
          "dmFyaWFudBgBIAMoCzIvLmJuZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24u" + 
          "QXV0aE1vZHVsZVZhcmlhbnQiMQoTQXV0aEFncmVlbWVudExvY2FsZRIKCgJp" + 
          "ZBgBIAIoCRIOCgZoYW5kbGUYAiACKAkigQEKDUF1dGhBZ3JlZW1lbnQSDAoE" + 
          "dHlwZRgBIAIoCRIPCgdwcm9ncmFtGAIgAigJEg4KBnNjaGVtZRgDIAIoDRJB" + 
          "CgZsb2NhbGUYBCADKAsyMS5ibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9u" + 
          "LkF1dGhBZ3JlZW1lbnRMb2NhbGUy4wEKFEF1dGhlbnRpY2F0aW9uQ2xpZW50" + 
          "Em8KCk1vZHVsZUxvYWQSLy5ibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9u" + 
          "Lk1vZHVsZUxvYWRSZXF1ZXN0GjAuYm5ldC5wcm90b2NvbC5hdXRoZW50aWNh" + 
          "dGlvbi5Nb2R1bGVMb2FkUmVzcG9uc2USWgoNTW9kdWxlTWVzc2FnZRIyLmJu" + 
          "ZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24uTW9kdWxlTWVzc2FnZVJlcXVl" + 
          "c3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YTLUAQoUQXV0aGVudGljYXRpb25T" + 
          "ZXJ2ZXISYAoFTG9nb24SKi5ibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9u" + 
          "LkxvZ29uUmVxdWVzdBorLmJuZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24u" + 
          "TG9nb25SZXNwb25zZRJaCg1Nb2R1bGVNZXNzYWdlEjIuYm5ldC5wcm90b2Nv" + 
          "bC5hdXRoZW50aWNhdGlvbi5Nb2R1bGVNZXNzYWdlUmVxdWVzdBoVLmJuZXQu" + 
          "cHJvdG9jb2wuTm9EYXRhQgOAAQE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor,
                new string[] { "ModuleHandle", "Message", });
        internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder>(internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor,
                new string[] { "ModuleId", });
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor,
                new string[] { "ModuleId", "Message", });
        internal__static_bnet_protocol_authentication_LogonRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder>(internal__static_bnet_protocol_authentication_LogonRequest__Descriptor,
                new string[] { "Program", "Platform", "Locale", "Email", "ListenerId", "Version", });
        internal__static_bnet_protocol_authentication_LogonResponse__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder>(internal__static_bnet_protocol_authentication_LogonResponse__Descriptor,
                new string[] { "Account", "GameAccount", });
        internal__static_bnet_protocol_authentication_AuthenticationConfig__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_authentication_AuthenticationConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthenticationConfig, global::bnet.protocol.authentication.AuthenticationConfig.Builder>(internal__static_bnet_protocol_authentication_AuthenticationConfig__Descriptor,
                new string[] { "Module", "AllowVersion", "DenyVersion", "Agreement", });
        internal__static_bnet_protocol_authentication_AuthModuleVariant__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_authentication_AuthModuleVariant__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthModuleVariant, global::bnet.protocol.authentication.AuthModuleVariant.Builder>(internal__static_bnet_protocol_authentication_AuthModuleVariant__Descriptor,
                new string[] { "Platform", "Handle", });
        internal__static_bnet_protocol_authentication_AuthModuleConfig__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_authentication_AuthModuleConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthModuleConfig, global::bnet.protocol.authentication.AuthModuleConfig.Builder>(internal__static_bnet_protocol_authentication_AuthModuleConfig__Descriptor,
                new string[] { "Variant", });
        internal__static_bnet_protocol_authentication_AuthAgreementLocale__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_authentication_AuthAgreementLocale__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthAgreementLocale, global::bnet.protocol.authentication.AuthAgreementLocale.Builder>(internal__static_bnet_protocol_authentication_AuthAgreementLocale__Descriptor,
                new string[] { "Id", "Handle", });
        internal__static_bnet_protocol_authentication_AuthAgreement__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_authentication_AuthAgreement__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AuthAgreement, global::bnet.protocol.authentication.AuthAgreement.Builder>(internal__static_bnet_protocol_authentication_AuthAgreement__Descriptor,
                new string[] { "Type", "Program", "Scheme", "Locale", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Rpc.Descriptor, 
          global::bnet.protocol.Proto.ContentHandle.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.config.Proto.ProcessConfig.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class ModuleLoadRequest : pb::GeneratedMessage<ModuleLoadRequest, ModuleLoadRequest.Builder> {
    private static readonly ModuleLoadRequest defaultInstance = new Builder().BuildPartial();
    public static ModuleLoadRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleLoadRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ModuleLoadRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleLoadRequest, ModuleLoadRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable; }
    }
    
    public const int ModuleHandleFieldNumber = 1;
    private bool hasModuleHandle;
    private global::bnet.protocol.ContentHandle moduleHandle_ = global::bnet.protocol.ContentHandle.DefaultInstance;
    public bool HasModuleHandle {
      get { return hasModuleHandle; }
    }
    public global::bnet.protocol.ContentHandle ModuleHandle {
      get { return moduleHandle_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleHandle) return false;
        if (!ModuleHandle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasModuleHandle) {
        output.WriteMessage(1, ModuleHandle);
      }
      if (HasMessage) {
        output.WriteBytes(2, Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasModuleHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ModuleHandle);
        }
        if (HasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleLoadRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleLoadRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleLoadRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ModuleLoadRequest result = new ModuleLoadRequest();
      
      protected override ModuleLoadRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ModuleLoadRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.Descriptor; }
      }
      
      public override ModuleLoadRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance; }
      }
      
      public override ModuleLoadRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ModuleLoadRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleLoadRequest) {
          return MergeFrom((ModuleLoadRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleLoadRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance) return this;
        if (other.HasModuleHandle) {
          MergeModuleHandle(other.ModuleHandle);
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.ContentHandle.Builder subBuilder = global::bnet.protocol.ContentHandle.CreateBuilder();
              if (HasModuleHandle) {
                subBuilder.MergeFrom(ModuleHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ModuleHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              Message = input.ReadBytes();
              break;
            }
          }
        }
      }
      
      
      public bool HasModuleHandle {
       get { return result.HasModuleHandle; }
      }
      public global::bnet.protocol.ContentHandle ModuleHandle {
        get { return result.ModuleHandle; }
        set { SetModuleHandle(value); }
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasModuleHandle = true;
        result.moduleHandle_ = value;
        return this;
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasModuleHandle = true;
        result.moduleHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasModuleHandle &&
            result.moduleHandle_ != global::bnet.protocol.ContentHandle.DefaultInstance) {
            result.moduleHandle_ = global::bnet.protocol.ContentHandle.CreateBuilder(result.moduleHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.moduleHandle_ = value;
        }
        result.hasModuleHandle = true;
        return this;
      }
      public Builder ClearModuleHandle() {
        result.hasModuleHandle = false;
        result.moduleHandle_ = global::bnet.protocol.ContentHandle.DefaultInstance;
        return this;
      }
      
      public bool HasMessage {
        get { return result.HasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleLoadRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class ModuleLoadResponse : pb::GeneratedMessage<ModuleLoadResponse, ModuleLoadResponse.Builder> {
    private static readonly ModuleLoadResponse defaultInstance = new Builder().BuildPartial();
    public static ModuleLoadResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleLoadResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ModuleLoadResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleLoadResponse, ModuleLoadResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 2;
    private bool hasModuleId;
    private int moduleId_ = 0;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasModuleId) {
        output.WriteInt32(2, ModuleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ModuleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleLoadResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleLoadResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleLoadResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ModuleLoadResponse result = new ModuleLoadResponse();
      
      protected override ModuleLoadResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ModuleLoadResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleLoadResponse.Descriptor; }
      }
      
      public override ModuleLoadResponse DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance; }
      }
      
      public override ModuleLoadResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ModuleLoadResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleLoadResponse) {
          return MergeFrom((ModuleLoadResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleLoadResponse other) {
        if (other == global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance) return this;
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 16: {
              ModuleId = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasModuleId {
        get { return result.HasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
    }
    static ModuleLoadResponse() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class ModuleMessageRequest : pb::GeneratedMessage<ModuleMessageRequest, ModuleMessageRequest.Builder> {
    private static readonly ModuleMessageRequest defaultInstance = new Builder().BuildPartial();
    public static ModuleMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleMessageRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ModuleMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleMessageRequest, ModuleMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 1;
    private bool hasModuleId;
    private int moduleId_ = 0;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasModuleId) {
        output.WriteInt32(1, ModuleId);
      }
      if (HasMessage) {
        output.WriteBytes(2, Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ModuleId);
        }
        if (HasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleMessageRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ModuleMessageRequest result = new ModuleMessageRequest();
      
      protected override ModuleMessageRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ModuleMessageRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.Descriptor; }
      }
      
      public override ModuleMessageRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance; }
      }
      
      public override ModuleMessageRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ModuleMessageRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleMessageRequest) {
          return MergeFrom((ModuleMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleMessageRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance) return this;
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              ModuleId = input.ReadInt32();
              break;
            }
            case 18: {
              Message = input.ReadBytes();
              break;
            }
          }
        }
      }
      
      
      public bool HasModuleId {
        get { return result.HasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
      
      public bool HasMessage {
        get { return result.HasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleMessageRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class LogonRequest : pb::GeneratedMessage<LogonRequest, LogonRequest.Builder> {
    private static readonly LogonRequest defaultInstance = new Builder().BuildPartial();
    public static LogonRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override LogonRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonRequest, LogonRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private string program_ = "";
    public bool HasProgram {
      get { return hasProgram; }
    }
    public string Program {
      get { return program_; }
    }
    
    public const int PlatformFieldNumber = 2;
    private bool hasPlatform;
    private string platform_ = "";
    public bool HasPlatform {
      get { return hasPlatform; }
    }
    public string Platform {
      get { return platform_; }
    }
    
    public const int LocaleFieldNumber = 3;
    private bool hasLocale;
    private string locale_ = "";
    public bool HasLocale {
      get { return hasLocale; }
    }
    public string Locale {
      get { return locale_; }
    }
    
    public const int EmailFieldNumber = 4;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int ListenerIdFieldNumber = 5;
    private bool hasListenerId;
    private ulong listenerId_ = 0UL;
    public bool HasListenerId {
      get { return hasListenerId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ListenerId {
      get { return listenerId_; }
    }
    
    public const int VersionFieldNumber = 6;
    private bool hasVersion;
    private string version_ = "";
    public bool HasVersion {
      get { return hasVersion; }
    }
    public string Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasProgram) {
        output.WriteString(1, Program);
      }
      if (HasPlatform) {
        output.WriteString(2, Platform);
      }
      if (HasLocale) {
        output.WriteString(3, Locale);
      }
      if (HasEmail) {
        output.WriteString(4, Email);
      }
      if (HasListenerId) {
        output.WriteUInt64(5, ListenerId);
      }
      if (HasVersion) {
        output.WriteString(6, Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasProgram) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Program);
        }
        if (HasPlatform) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Platform);
        }
        if (HasLocale) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Locale);
        }
        if (HasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Email);
        }
        if (HasListenerId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, ListenerId);
        }
        if (HasVersion) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Version);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<LogonRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      LogonRequest result = new LogonRequest();
      
      protected override LogonRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new LogonRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonRequest.Descriptor; }
      }
      
      public override LogonRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonRequest.DefaultInstance; }
      }
      
      public override LogonRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        LogonRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonRequest) {
          return MergeFrom((LogonRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonRequest other) {
        if (other == global::bnet.protocol.authentication.LogonRequest.DefaultInstance) return this;
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasLocale) {
          Locale = other.Locale;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasListenerId) {
          ListenerId = other.ListenerId;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Program = input.ReadString();
              break;
            }
            case 18: {
              Platform = input.ReadString();
              break;
            }
            case 26: {
              Locale = input.ReadString();
              break;
            }
            case 34: {
              Email = input.ReadString();
              break;
            }
            case 40: {
              ListenerId = input.ReadUInt64();
              break;
            }
            case 50: {
              Version = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasProgram {
        get { return result.HasProgram; }
      }
      public string Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = "";
        return this;
      }
      
      public bool HasPlatform {
        get { return result.HasPlatform; }
      }
      public string Platform {
        get { return result.Platform; }
        set { SetPlatform(value); }
      }
      public Builder SetPlatform(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPlatform = true;
        result.platform_ = value;
        return this;
      }
      public Builder ClearPlatform() {
        result.hasPlatform = false;
        result.platform_ = "";
        return this;
      }
      
      public bool HasLocale {
        get { return result.HasLocale; }
      }
      public string Locale {
        get { return result.Locale; }
        set { SetLocale(value); }
      }
      public Builder SetLocale(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasLocale = true;
        result.locale_ = value;
        return this;
      }
      public Builder ClearLocale() {
        result.hasLocale = false;
        result.locale_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.HasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasListenerId {
        get { return result.HasListenerId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ListenerId {
        get { return result.ListenerId; }
        set { SetListenerId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetListenerId(ulong value) {
        result.hasListenerId = true;
        result.listenerId_ = value;
        return this;
      }
      public Builder ClearListenerId() {
        result.hasListenerId = false;
        result.listenerId_ = 0UL;
        return this;
      }
      
      public bool HasVersion {
        get { return result.HasVersion; }
      }
      public string Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        result.hasVersion = false;
        result.version_ = "";
        return this;
      }
    }
    static LogonRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class LogonResponse : pb::GeneratedMessage<LogonResponse, LogonResponse.Builder> {
    private static readonly LogonResponse defaultInstance = new Builder().BuildPartial();
    public static LogonResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override LogonResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonResponse, LogonResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::bnet.protocol.EntityId account_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::bnet.protocol.EntityId Account {
      get { return account_; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasGameAccount) return false;
        if (!Account.IsInitialized) return false;
        if (!GameAccount.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAccount) {
        output.WriteMessage(1, Account);
      }
      if (HasGameAccount) {
        output.WriteMessage(2, GameAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
        }
        if (HasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<LogonResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      LogonResponse result = new LogonResponse();
      
      protected override LogonResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new LogonResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonResponse.Descriptor; }
      }
      
      public override LogonResponse DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonResponse.DefaultInstance; }
      }
      
      public override LogonResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        LogonResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonResponse) {
          return MergeFrom((LogonResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonResponse other) {
        if (other == global::bnet.protocol.authentication.LogonResponse.DefaultInstance) return this;
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasAccount {
       get { return result.HasAccount; }
      }
      public global::bnet.protocol.EntityId Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAccount &&
            result.account_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.account_ = global::bnet.protocol.EntityId.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        result.hasAccount = false;
        result.account_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.HasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        result.hasGameAccount = false;
        result.gameAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static LogonResponse() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class AuthenticationConfig : pb::GeneratedMessage<AuthenticationConfig, AuthenticationConfig.Builder> {
    private static readonly AuthenticationConfig defaultInstance = new Builder().BuildPartial();
    public static AuthenticationConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AuthenticationConfig DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AuthenticationConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthenticationConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AuthenticationConfig, AuthenticationConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthenticationConfig__FieldAccessorTable; }
    }
    
    public const int ModuleFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.config.Resource> module_ = new pbc::PopsicleList<global::bnet.protocol.config.Resource>();
    public scg::IList<global::bnet.protocol.config.Resource> ModuleList {
      get { return module_; }
    }
    public int ModuleCount {
      get { return module_.Count; }
    }
    public global::bnet.protocol.config.Resource GetModule(int index) {
      return module_[index];
    }
    
    public const int AllowVersionFieldNumber = 2;
    private pbc::PopsicleList<string> allowVersion_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllowVersionList {
      get { return pbc::Lists.AsReadOnly(allowVersion_); }
    }
    public int AllowVersionCount {
      get { return allowVersion_.Count; }
    }
    public string GetAllowVersion(int index) {
      return allowVersion_[index];
    }
    
    public const int DenyVersionFieldNumber = 3;
    private pbc::PopsicleList<string> denyVersion_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DenyVersionList {
      get { return pbc::Lists.AsReadOnly(denyVersion_); }
    }
    public int DenyVersionCount {
      get { return denyVersion_.Count; }
    }
    public string GetDenyVersion(int index) {
      return denyVersion_[index];
    }
    
    public const int AgreementFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.config.Resource> agreement_ = new pbc::PopsicleList<global::bnet.protocol.config.Resource>();
    public scg::IList<global::bnet.protocol.config.Resource> AgreementList {
      get { return agreement_; }
    }
    public int AgreementCount {
      get { return agreement_.Count; }
    }
    public global::bnet.protocol.config.Resource GetAgreement(int index) {
      return agreement_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.config.Resource element in ModuleList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.config.Resource element in AgreementList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.config.Resource element in ModuleList) {
        output.WriteMessage(1, element);
      }
      if (allowVersion_.Count > 0) {
        foreach (string element in allowVersion_) {
          output.WriteString(2, element);
        }
      }
      if (denyVersion_.Count > 0) {
        foreach (string element in denyVersion_) {
          output.WriteString(3, element);
        }
      }
      foreach (global::bnet.protocol.config.Resource element in AgreementList) {
        output.WriteMessage(4, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.config.Resource element in ModuleList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        {
          int dataSize = 0;
          foreach (string element in AllowVersionList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * allowVersion_.Count;
        }
        {
          int dataSize = 0;
          foreach (string element in DenyVersionList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * denyVersion_.Count;
        }
        foreach (global::bnet.protocol.config.Resource element in AgreementList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AuthenticationConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AuthenticationConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AuthenticationConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthenticationConfig ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AuthenticationConfig prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AuthenticationConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AuthenticationConfig result = new AuthenticationConfig();
      
      protected override AuthenticationConfig MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AuthenticationConfig();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AuthenticationConfig.Descriptor; }
      }
      
      public override AuthenticationConfig DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AuthenticationConfig.DefaultInstance; }
      }
      
      public override AuthenticationConfig BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.module_.MakeReadOnly();
        result.allowVersion_.MakeReadOnly();
        result.denyVersion_.MakeReadOnly();
        result.agreement_.MakeReadOnly();
        AuthenticationConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AuthenticationConfig) {
          return MergeFrom((AuthenticationConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AuthenticationConfig other) {
        if (other == global::bnet.protocol.authentication.AuthenticationConfig.DefaultInstance) return this;
        if (other.module_.Count != 0) {
          base.AddRange(other.module_, result.module_);
        }
        if (other.allowVersion_.Count != 0) {
          base.AddRange(other.allowVersion_, result.allowVersion_);
        }
        if (other.denyVersion_.Count != 0) {
          base.AddRange(other.denyVersion_, result.denyVersion_);
        }
        if (other.agreement_.Count != 0) {
          base.AddRange(other.agreement_, result.agreement_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.config.Resource.Builder subBuilder = global::bnet.protocol.config.Resource.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddModule(subBuilder.BuildPartial());
              break;
            }
            case 18: {
              AddAllowVersion(input.ReadString());
              break;
            }
            case 26: {
              AddDenyVersion(input.ReadString());
              break;
            }
            case 34: {
              global::bnet.protocol.config.Resource.Builder subBuilder = global::bnet.protocol.config.Resource.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddAgreement(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.config.Resource> ModuleList {
        get { return result.module_; }
      }
      public int ModuleCount {
        get { return result.ModuleCount; }
      }
      public global::bnet.protocol.config.Resource GetModule(int index) {
        return result.GetModule(index);
      }
      public Builder SetModule(int index, global::bnet.protocol.config.Resource value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.module_[index] = value;
        return this;
      }
      public Builder SetModule(int index, global::bnet.protocol.config.Resource.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.module_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddModule(global::bnet.protocol.config.Resource value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.module_.Add(value);
        return this;
      }
      public Builder AddModule(global::bnet.protocol.config.Resource.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.module_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeModule(scg::IEnumerable<global::bnet.protocol.config.Resource> values) {
        base.AddRange(values, result.module_);
        return this;
      }
      public Builder ClearModule() {
        result.module_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllowVersionList {
        get { return result.allowVersion_; }
      }
      public int AllowVersionCount {
        get { return result.AllowVersionCount; }
      }
      public string GetAllowVersion(int index) {
        return result.GetAllowVersion(index);
      }
      public Builder SetAllowVersion(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.allowVersion_[index] = value;
        return this;
      }
      public Builder AddAllowVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.allowVersion_.Add(value);
        return this;
      }
      public Builder AddRangeAllowVersion(scg::IEnumerable<string> values) {
        base.AddRange(values, result.allowVersion_);
        return this;
      }
      public Builder ClearAllowVersion() {
        result.allowVersion_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> DenyVersionList {
        get { return result.denyVersion_; }
      }
      public int DenyVersionCount {
        get { return result.DenyVersionCount; }
      }
      public string GetDenyVersion(int index) {
        return result.GetDenyVersion(index);
      }
      public Builder SetDenyVersion(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.denyVersion_[index] = value;
        return this;
      }
      public Builder AddDenyVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.denyVersion_.Add(value);
        return this;
      }
      public Builder AddRangeDenyVersion(scg::IEnumerable<string> values) {
        base.AddRange(values, result.denyVersion_);
        return this;
      }
      public Builder ClearDenyVersion() {
        result.denyVersion_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.config.Resource> AgreementList {
        get { return result.agreement_; }
      }
      public int AgreementCount {
        get { return result.AgreementCount; }
      }
      public global::bnet.protocol.config.Resource GetAgreement(int index) {
        return result.GetAgreement(index);
      }
      public Builder SetAgreement(int index, global::bnet.protocol.config.Resource value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.agreement_[index] = value;
        return this;
      }
      public Builder SetAgreement(int index, global::bnet.protocol.config.Resource.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.agreement_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAgreement(global::bnet.protocol.config.Resource value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.agreement_.Add(value);
        return this;
      }
      public Builder AddAgreement(global::bnet.protocol.config.Resource.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.agreement_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAgreement(scg::IEnumerable<global::bnet.protocol.config.Resource> values) {
        base.AddRange(values, result.agreement_);
        return this;
      }
      public Builder ClearAgreement() {
        result.agreement_.Clear();
        return this;
      }
    }
    static AuthenticationConfig() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class AuthModuleVariant : pb::GeneratedMessage<AuthModuleVariant, AuthModuleVariant.Builder> {
    private static readonly AuthModuleVariant defaultInstance = new Builder().BuildPartial();
    public static AuthModuleVariant DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AuthModuleVariant DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AuthModuleVariant ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthModuleVariant__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AuthModuleVariant, AuthModuleVariant.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthModuleVariant__FieldAccessorTable; }
    }
    
    public const int PlatformFieldNumber = 1;
    private bool hasPlatform;
    private string platform_ = "";
    public bool HasPlatform {
      get { return hasPlatform; }
    }
    public string Platform {
      get { return platform_; }
    }
    
    public const int HandleFieldNumber = 2;
    private bool hasHandle;
    private string handle_ = "";
    public bool HasHandle {
      get { return hasHandle; }
    }
    public string Handle {
      get { return handle_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPlatform) return false;
        if (!hasHandle) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPlatform) {
        output.WriteString(1, Platform);
      }
      if (HasHandle) {
        output.WriteString(2, Handle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPlatform) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Platform);
        }
        if (HasHandle) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Handle);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AuthModuleVariant ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleVariant ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AuthModuleVariant ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthModuleVariant ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AuthModuleVariant prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AuthModuleVariant, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AuthModuleVariant result = new AuthModuleVariant();
      
      protected override AuthModuleVariant MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AuthModuleVariant();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AuthModuleVariant.Descriptor; }
      }
      
      public override AuthModuleVariant DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AuthModuleVariant.DefaultInstance; }
      }
      
      public override AuthModuleVariant BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        AuthModuleVariant returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AuthModuleVariant) {
          return MergeFrom((AuthModuleVariant) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AuthModuleVariant other) {
        if (other == global::bnet.protocol.authentication.AuthModuleVariant.DefaultInstance) return this;
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasHandle) {
          Handle = other.Handle;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Platform = input.ReadString();
              break;
            }
            case 18: {
              Handle = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasPlatform {
        get { return result.HasPlatform; }
      }
      public string Platform {
        get { return result.Platform; }
        set { SetPlatform(value); }
      }
      public Builder SetPlatform(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPlatform = true;
        result.platform_ = value;
        return this;
      }
      public Builder ClearPlatform() {
        result.hasPlatform = false;
        result.platform_ = "";
        return this;
      }
      
      public bool HasHandle {
        get { return result.HasHandle; }
      }
      public string Handle {
        get { return result.Handle; }
        set { SetHandle(value); }
      }
      public Builder SetHandle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasHandle = true;
        result.handle_ = value;
        return this;
      }
      public Builder ClearHandle() {
        result.hasHandle = false;
        result.handle_ = "";
        return this;
      }
    }
    static AuthModuleVariant() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class AuthModuleConfig : pb::GeneratedMessage<AuthModuleConfig, AuthModuleConfig.Builder> {
    private static readonly AuthModuleConfig defaultInstance = new Builder().BuildPartial();
    public static AuthModuleConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AuthModuleConfig DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AuthModuleConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthModuleConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AuthModuleConfig, AuthModuleConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthModuleConfig__FieldAccessorTable; }
    }
    
    public const int VariantFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.authentication.AuthModuleVariant> variant_ = new pbc::PopsicleList<global::bnet.protocol.authentication.AuthModuleVariant>();
    public scg::IList<global::bnet.protocol.authentication.AuthModuleVariant> VariantList {
      get { return variant_; }
    }
    public int VariantCount {
      get { return variant_.Count; }
    }
    public global::bnet.protocol.authentication.AuthModuleVariant GetVariant(int index) {
      return variant_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.authentication.AuthModuleVariant element in VariantList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.authentication.AuthModuleVariant element in VariantList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.authentication.AuthModuleVariant element in VariantList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AuthModuleConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AuthModuleConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AuthModuleConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthModuleConfig ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AuthModuleConfig prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AuthModuleConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AuthModuleConfig result = new AuthModuleConfig();
      
      protected override AuthModuleConfig MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AuthModuleConfig();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AuthModuleConfig.Descriptor; }
      }
      
      public override AuthModuleConfig DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AuthModuleConfig.DefaultInstance; }
      }
      
      public override AuthModuleConfig BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.variant_.MakeReadOnly();
        AuthModuleConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AuthModuleConfig) {
          return MergeFrom((AuthModuleConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AuthModuleConfig other) {
        if (other == global::bnet.protocol.authentication.AuthModuleConfig.DefaultInstance) return this;
        if (other.variant_.Count != 0) {
          base.AddRange(other.variant_, result.variant_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.authentication.AuthModuleVariant.Builder subBuilder = global::bnet.protocol.authentication.AuthModuleVariant.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddVariant(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.authentication.AuthModuleVariant> VariantList {
        get { return result.variant_; }
      }
      public int VariantCount {
        get { return result.VariantCount; }
      }
      public global::bnet.protocol.authentication.AuthModuleVariant GetVariant(int index) {
        return result.GetVariant(index);
      }
      public Builder SetVariant(int index, global::bnet.protocol.authentication.AuthModuleVariant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.variant_[index] = value;
        return this;
      }
      public Builder SetVariant(int index, global::bnet.protocol.authentication.AuthModuleVariant.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.variant_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddVariant(global::bnet.protocol.authentication.AuthModuleVariant value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.variant_.Add(value);
        return this;
      }
      public Builder AddVariant(global::bnet.protocol.authentication.AuthModuleVariant.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.variant_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeVariant(scg::IEnumerable<global::bnet.protocol.authentication.AuthModuleVariant> values) {
        base.AddRange(values, result.variant_);
        return this;
      }
      public Builder ClearVariant() {
        result.variant_.Clear();
        return this;
      }
    }
    static AuthModuleConfig() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class AuthAgreementLocale : pb::GeneratedMessage<AuthAgreementLocale, AuthAgreementLocale.Builder> {
    private static readonly AuthAgreementLocale defaultInstance = new Builder().BuildPartial();
    public static AuthAgreementLocale DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AuthAgreementLocale DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AuthAgreementLocale ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthAgreementLocale__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AuthAgreementLocale, AuthAgreementLocale.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthAgreementLocale__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int HandleFieldNumber = 2;
    private bool hasHandle;
    private string handle_ = "";
    public bool HasHandle {
      get { return hasHandle; }
    }
    public string Handle {
      get { return handle_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasHandle) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteString(1, Id);
      }
      if (HasHandle) {
        output.WriteString(2, Handle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (HasHandle) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Handle);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AuthAgreementLocale ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreementLocale ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AuthAgreementLocale ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthAgreementLocale ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AuthAgreementLocale prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AuthAgreementLocale, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AuthAgreementLocale result = new AuthAgreementLocale();
      
      protected override AuthAgreementLocale MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AuthAgreementLocale();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AuthAgreementLocale.Descriptor; }
      }
      
      public override AuthAgreementLocale DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AuthAgreementLocale.DefaultInstance; }
      }
      
      public override AuthAgreementLocale BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        AuthAgreementLocale returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AuthAgreementLocale) {
          return MergeFrom((AuthAgreementLocale) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AuthAgreementLocale other) {
        if (other == global::bnet.protocol.authentication.AuthAgreementLocale.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasHandle) {
          Handle = other.Handle;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Id = input.ReadString();
              break;
            }
            case 18: {
              Handle = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasHandle {
        get { return result.HasHandle; }
      }
      public string Handle {
        get { return result.Handle; }
        set { SetHandle(value); }
      }
      public Builder SetHandle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasHandle = true;
        result.handle_ = value;
        return this;
      }
      public Builder ClearHandle() {
        result.hasHandle = false;
        result.handle_ = "";
        return this;
      }
    }
    static AuthAgreementLocale() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  public sealed partial class AuthAgreement : pb::GeneratedMessage<AuthAgreement, AuthAgreement.Builder> {
    private static readonly AuthAgreement defaultInstance = new Builder().BuildPartial();
    public static AuthAgreement DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AuthAgreement DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override AuthAgreement ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthAgreement__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AuthAgreement, AuthAgreement.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_AuthAgreement__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private string program_ = "";
    public bool HasProgram {
      get { return hasProgram; }
    }
    public string Program {
      get { return program_; }
    }
    
    public const int SchemeFieldNumber = 3;
    private bool hasScheme;
    private uint scheme_ = 0;
    public bool HasScheme {
      get { return hasScheme; }
    }
    [global::System.CLSCompliant(false)]
    public uint Scheme {
      get { return scheme_; }
    }
    
    public const int LocaleFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.authentication.AuthAgreementLocale> locale_ = new pbc::PopsicleList<global::bnet.protocol.authentication.AuthAgreementLocale>();
    public scg::IList<global::bnet.protocol.authentication.AuthAgreementLocale> LocaleList {
      get { return locale_; }
    }
    public int LocaleCount {
      get { return locale_.Count; }
    }
    public global::bnet.protocol.authentication.AuthAgreementLocale GetLocale(int index) {
      return locale_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasProgram) return false;
        if (!hasScheme) return false;
        foreach (global::bnet.protocol.authentication.AuthAgreementLocale element in LocaleList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasType) {
        output.WriteString(1, Type);
      }
      if (HasProgram) {
        output.WriteString(2, Program);
      }
      if (HasScheme) {
        output.WriteUInt32(3, Scheme);
      }
      foreach (global::bnet.protocol.authentication.AuthAgreementLocale element in LocaleList) {
        output.WriteMessage(4, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasType) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Type);
        }
        if (HasProgram) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Program);
        }
        if (HasScheme) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Scheme);
        }
        foreach (global::bnet.protocol.authentication.AuthAgreementLocale element in LocaleList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AuthAgreement ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AuthAgreement ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AuthAgreement ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AuthAgreement ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AuthAgreement ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AuthAgreement prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<AuthAgreement, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      AuthAgreement result = new AuthAgreement();
      
      protected override AuthAgreement MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new AuthAgreement();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AuthAgreement.Descriptor; }
      }
      
      public override AuthAgreement DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AuthAgreement.DefaultInstance; }
      }
      
      public override AuthAgreement BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.locale_.MakeReadOnly();
        AuthAgreement returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AuthAgreement) {
          return MergeFrom((AuthAgreement) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AuthAgreement other) {
        if (other == global::bnet.protocol.authentication.AuthAgreement.DefaultInstance) return this;
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasScheme) {
          Scheme = other.Scheme;
        }
        if (other.locale_.Count != 0) {
          base.AddRange(other.locale_, result.locale_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Type = input.ReadString();
              break;
            }
            case 18: {
              Program = input.ReadString();
              break;
            }
            case 24: {
              Scheme = input.ReadUInt32();
              break;
            }
            case 34: {
              global::bnet.protocol.authentication.AuthAgreementLocale.Builder subBuilder = global::bnet.protocol.authentication.AuthAgreementLocale.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddLocale(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public bool HasType {
        get { return result.HasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public bool HasProgram {
        get { return result.HasProgram; }
      }
      public string Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = "";
        return this;
      }
      
      public bool HasScheme {
        get { return result.HasScheme; }
      }
      [global::System.CLSCompliant(false)]
      public uint Scheme {
        get { return result.Scheme; }
        set { SetScheme(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetScheme(uint value) {
        result.hasScheme = true;
        result.scheme_ = value;
        return this;
      }
      public Builder ClearScheme() {
        result.hasScheme = false;
        result.scheme_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.authentication.AuthAgreementLocale> LocaleList {
        get { return result.locale_; }
      }
      public int LocaleCount {
        get { return result.LocaleCount; }
      }
      public global::bnet.protocol.authentication.AuthAgreementLocale GetLocale(int index) {
        return result.GetLocale(index);
      }
      public Builder SetLocale(int index, global::bnet.protocol.authentication.AuthAgreementLocale value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.locale_[index] = value;
        return this;
      }
      public Builder SetLocale(int index, global::bnet.protocol.authentication.AuthAgreementLocale.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.locale_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLocale(global::bnet.protocol.authentication.AuthAgreementLocale value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.locale_.Add(value);
        return this;
      }
      public Builder AddLocale(global::bnet.protocol.authentication.AuthAgreementLocale.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.locale_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLocale(scg::IEnumerable<global::bnet.protocol.authentication.AuthAgreementLocale> values) {
        base.AddRange(values, result.locale_);
        return this;
      }
      public Builder ClearLocale() {
        result.locale_.Clear();
        return this;
      }
    }
    static AuthAgreement() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  public abstract class AuthenticationClient : pb::IService {
    public abstract void ModuleLoad(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleLoadRequest request,
        global::System.Action<global::bnet.protocol.authentication.ModuleLoadResponse> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Authentication.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.ModuleLoad(controller, (global::bnet.protocol.authentication.ModuleLoadRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.authentication.ModuleLoadResponse>(
              done));
          return;
        case 1:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    public class Stub : global::bnet.protocol.authentication.AuthenticationClient {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void ModuleLoad(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleLoadRequest request,
          global::System.Action<global::bnet.protocol.authentication.ModuleLoadResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder>(done, global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  public abstract class AuthenticationServer : pb::IService {
    public abstract void Logon(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.LogonRequest request,
        global::System.Action<global::bnet.protocol.authentication.LogonResponse> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Authentication.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Logon(controller, (global::bnet.protocol.authentication.LogonRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.authentication.LogonResponse>(
              done));
          return;
        case 1:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.LogonRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.LogonResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    public class Stub : global::bnet.protocol.authentication.AuthenticationServer {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Logon(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.LogonRequest request,
          global::System.Action<global::bnet.protocol.authentication.LogonResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.authentication.LogonResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder>(done, global::bnet.protocol.authentication.LogonResponse.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}
