// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.exchange {
  
  namespace Proto {
    
    public static partial class ExchangeService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookRequest, global::bnet.protocol.exchange.CreateOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest, global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Builder> internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder> internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest, global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Builder> internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder> internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookRequest, global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookRequest, global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Builder> internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder> internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest, global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Builder> internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder> internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest, global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Builder> internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder> internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest, global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse, global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.ClaimRequest, global::bnet.protocol.exchange.ClaimRequest.Builder> internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CancelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CancelRequest, global::bnet.protocol.exchange.CancelRequest.Builder> internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationRequest, global::bnet.protocol.exchange.GetConfigurationRequest.Builder> internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder> internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferFeeEstimationRequest, global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Builder> internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidFeeEstimationRequest, global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Builder> internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder> internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotificationRequest, global::bnet.protocol.exchange.OrderBookNotificationRequest.Builder> internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferNotificationRequest, global::bnet.protocol.exchange.OfferNotificationRequest.Builder> internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidNotificationRequest, global::bnet.protocol.exchange.BidNotificationRequest.Builder> internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ExchangeService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Ch9zZXJ2aWNlL2V4Y2hhbmdlL2V4Y2hhbmdlLnByb3RvEhZibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlGiRnb29nbGUvcHJvdG9idWYvY3NoYXJwX29wdGlvbnMu" + 
            "cHJvdG8aEWxpYi9ycGMvcnBjLnByb3RvGhtsaWIvcHJvdG9jb2wvZXhjaGFu" + 
            "Z2UucHJvdG8aK2xpYi9wcm90b2NvbC9leGNoYW5nZV9vYmplY3RfcHJvdmlk" + 
            "ZXIucHJvdG8aGWxpYi9wcm90b2NvbC9lbnRpdHkucHJvdG8aJXNlcnZpY2Uv" + 
            "ZXhjaGFuZ2UvZXhjaGFuZ2VfdHlwZXMucHJvdG8iigEKFkNyZWF0ZU9yZGVy" + 
            "Qm9va1JlcXVlc3QSOQoMcGFydGl0aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBI1CgpvcmRlcl9ib29rGAIgAigL" + 
            "MiEuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5PcmRlckJvb2siMAoXQ3JlYXRl" + 
            "T3JkZXJCb29rUmVzcG9uc2USFQoNb3JkZXJfYm9va19pZBgBIAEoBCKYAQoc" + 
            "UGxhY2VPZmZlck9uT3JkZXJCb29rUmVxdWVzdBI5CgxwYXJ0aXRpb25faWQY" + 
            "ASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklkEj0K" + 
            "Dm9mZmVyX2NyZWF0aW9uGAIgAigLMiUuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5PZmZlckNyZWF0aW9uIkgKHVBsYWNlT2ZmZXJPbk9yZGVyQm9va1Jlc3Bv" + 
            "bnNlEhUKDW9yZGVyX2Jvb2tfaWQYASABKAQSEAoIb2ZmZXJfaWQYAiABKAQi" + 
            "2wEKKFBsYWNlT2ZmZXJDcmVhdGVPcmRlckJvb2tJZk5lZWRlZFJlcXVlc3QS" + 
            "OQoMcGFydGl0aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5QYXJ0aXRpb25JZBI1CgpvcmRlcl9ib29rGAIgAigLMiEuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5PcmRlckJvb2sSPQoOb2ZmZXJfY3JlYXRpb24YAyAC" + 
            "KAsyJS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyQ3JlYXRpb24iVAop" + 
            "UGxhY2VPZmZlckNyZWF0ZU9yZGVyQm9va0lmTmVlZGVkUmVzcG9uc2USFQoN" + 
            "b3JkZXJfYm9va19pZBgBIAEoBBIQCghvZmZlcl9pZBgCIAEoBCKSAQoaUGxh" + 
            "Y2VCaWRPbk9yZGVyQm9va1JlcXVlc3QSOQoMcGFydGl0aW9uX2lkGAEgAigL" + 
            "MiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBI5CgxiaWRf" + 
            "Y3JlYXRpb24YAiACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJpZENy" + 
            "ZWF0aW9uIkQKG1BsYWNlQmlkT25PcmRlckJvb2tSZXNwb25zZRIVCg1vcmRl" + 
            "cl9ib29rX2lkGAEgASgEEg4KBmJpZF9pZBgCIAEoBCLVAQomUGxhY2VCaWRD" + 
            "cmVhdGVPcmRlckJvb2tJZk5lZWRlZFJlcXVlc3QSOQoMcGFydGl0aW9uX2lk" + 
            "GAEgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBI1" + 
            "CgpvcmRlcl9ib29rGAIgAigLMiEuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5P" + 
            "cmRlckJvb2sSOQoMYmlkX2NyZWF0aW9uGAMgAigLMiMuYm5ldC5wcm90b2Nv" + 
            "bC5leGNoYW5nZS5CaWRDcmVhdGlvbiJQCidQbGFjZUJpZENyZWF0ZU9yZGVy" + 
            "Qm9va0lmTmVlZGVkUmVzcG9uc2USFQoNb3JkZXJfYm9va19pZBgBIAEoBBIO" + 
            "CgZiaWRfaWQYAiABKAQiqAEKHVF1ZXJ5T2ZmZXJzQnlPcmRlckJvb2tSZXF1" + 
            "ZXN0EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuUGFydGl0aW9uSWQSPAoGZmlsdGVyGAIgAigLMiwuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5RdWVyeUZpbHRlckJ5T3JkZXJJZBIOCgZzdGF0dXMY" + 
            "AyACKAUibAoeUXVlcnlPZmZlcnNCeU9yZGVyQm9va1Jlc3BvbnNlEjUKBm9m" + 
            "ZmVycxgBIAMoCzIlLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT2ZmZXJFeHRl" + 
            "bmRlZBITCgt0b3RhbF9jb3VudBgCIAIoDSKmAQobUXVlcnlCaWRzQnlPcmRl" + 
            "ckJvb2tSZXF1ZXN0EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSPAoGZmlsdGVyGAIgAigLMiwu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeUZpbHRlckJ5T3JkZXJJZBIO" + 
            "CgZzdGF0dXMYAyACKAUiZgocUXVlcnlCaWRzQnlPcmRlckJvb2tSZXNwb25z" + 
            "ZRIxCgRiaWRzGAEgAygLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CaWRF" + 
            "eHRlbmRlZBITCgt0b3RhbF9jb3VudBgCIAIoDSLRAQoiUXVlcnlPZmZlcnNC" + 
            "eUFjY291bnRGb3JJdGVtUmVxdWVzdBI6ChBhY2NvdW50X2Zvcl9pdGVtGAEg" + 
            "AigLMiAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CbG9iRnJvbRJACgZmaWx0" + 
            "ZXIYAiACKAsyMC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlF1ZXJ5RmlsdGVy" + 
            "QnlDcmVhdGVkVGltZRItCgxibmV0X2FjY291bnQYAyABKAsyFy5ibmV0LnBy" + 
            "b3RvY29sLkVudGl0eUlkInEKI1F1ZXJ5T2ZmZXJzQnlBY2NvdW50Rm9ySXRl" + 
            "bVJlc3BvbnNlEjUKBm9mZmVycxgBIAMoCzIlLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuT2ZmZXJFeHRlbmRlZBITCgt0b3RhbF9jb3VudBgCIAIoDSLPAQog" + 
            "UXVlcnlCaWRzQnlBY2NvdW50Rm9ySXRlbVJlcXVlc3QSOgoQYWNjb3VudF9m" + 
            "b3JfaXRlbRgBIAIoCzIgLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmxvYkZy" + 
            "b20SQAoGZmlsdGVyGAIgAigLMjAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5R" + 
            "dWVyeUZpbHRlckJ5Q3JlYXRlZFRpbWUSLQoMYm5ldF9hY2NvdW50GAMgASgL" + 
            "MhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZCJrCiFRdWVyeUJpZHNCeUFjY291" + 
            "bnRGb3JJdGVtUmVzcG9uc2USMQoEYmlkcxgBIAMoCzIjLmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuQmlkRXh0ZW5kZWQSEwoLdG90YWxfY291bnQYAiACKA0i" + 
            "WQodUXVlcnlPcmRlckJvb2tzU3VtbWFyeVJlcXVlc3QSOAoHaGFuZGxlcxgB" + 
            "IAMoCzInLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29rSGFuZGxl" + 
            "Il8KHlF1ZXJ5T3JkZXJCb29rc1N1bW1hcnlSZXNwb25zZRI9CgtvcmRlcl9i" + 
            "b29rcxgBIAMoCzIoLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29r" + 
            "U3VtbWFyeSKdAQoiUXVlcnlTZXR0bGVtZW50c0J5T3JkZXJCb29rUmVxdWVz" + 
            "dBI5CgxwYXJ0aXRpb25faWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hh" + 
            "bmdlLlBhcnRpdGlvbklkEjwKBmZpbHRlchgCIAIoCzIsLmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuUXVlcnlGaWx0ZXJCeU9yZGVySWQiXgojUXVlcnlTZXR0" + 
            "bGVtZW50c0J5T3JkZXJCb29rUmVzcG9uc2USNwoLc2V0dGxlbWVudHMYASAD" + 
            "KAsyIi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlNldHRsZW1lbnQikgIKJVN1" + 
            "YnNjcmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZVJlcXVlc3QSEQoJb2JqZWN0" + 
            "X2lkGAEgAigEEj0KEG1pbl9wYXJ0aXRpb25faWQYAiACKAsyIy5ibmV0LnBy" + 
            "b3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklkEj0KEG1heF9wYXJ0aXRpb25f" + 
            "aWQYAyACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklk" + 
            "Eg8KB3Byb2dyYW0YBCACKAcSDgoGc3RhdHVzGAUgAigFEhAKCGN1cnJlbmN5" + 
            "GAYgASgJEhIKCnNwZWNpYWxpc3QYByABKAUSEQoJYm9vdHN0cmFwGAggASgI" + 
            "IikKJ1Vuc3Vic2NyaWJlT3JkZXJCb29rU3RhdHVzQ2hhbmdlUmVxdWVzdCJh" + 
            "CiFTdWJzY3JpYmVPcmRlclN0YXR1c0NoYW5nZVJlcXVlc3QSKQoIYWdlbnRf" + 
            "aWQYASACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEhEKCW9iamVjdF9p" + 
            "ZBgCIAIoBCJjCiNVbnN1YnNjcmliZU9yZGVyU3RhdHVzQ2hhbmdlUmVxdWVz" + 
            "dBIpCghhZ2VudF9pZBgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQS" + 
            "EQoJb2JqZWN0X2lkGAIgAigEIooBCgxDbGFpbVJlcXVlc3QSOQoMcGFydGl0" + 
            "aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRp" + 
            "b25JZBIQCghvcmRlcl9pZBgCIAIoDRItCgxibmV0X2FjY291bnQYAyABKAsy" + 
            "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkIpsBCg1DYW5jZWxSZXF1ZXN0EjkK" + 
            "DHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "UGFydGl0aW9uSWQSEAoIb3JkZXJfaWQYAiACKA0SDgoGcmVhc29uGAMgASgN" + 
            "Ei0KDGJuZXRfYWNjb3VudBgEIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5" + 
            "SWQiKgoXR2V0Q29uZmlndXJhdGlvblJlcXVlc3QSDwoHcHJvZ3JhbRgBIAIo" + 
            "ByJVChhHZXRDb25maWd1cmF0aW9uUmVzcG9uc2USOQoHY29uZmlncxgBIAMo" + 
            "CzIoLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuU3BlY2lhbGlzdENvbmZpZyKS" + 
            "AQocR2V0T2ZmZXJGZWVFc3RpbWF0aW9uUmVxdWVzdBI5CgxwYXJ0aXRpb25f" + 
            "aWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklk" + 
            "EjcKBGRhdGEYAiACKAsyKS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkZlZUVz" + 
            "dGltYXRpb25EYXRhIpABChpHZXRCaWRGZWVFc3RpbWF0aW9uUmVxdWVzdBI5" + 
            "CgxwYXJ0aXRpb25faWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
            "LlBhcnRpdGlvbklkEjcKBGRhdGEYAiACKAsyKS5ibmV0LnByb3RvY29sLmV4" + 
            "Y2hhbmdlLkZlZUVzdGltYXRpb25EYXRhIi4KGEdldEZlZUVzdGltYXRpb25S" + 
            "ZXNwb25zZRISCgpmZWVfYW1vdW50GAEgASgEIn0KHE9yZGVyQm9va05vdGlm" + 
            "aWNhdGlvblJlcXVlc3QSRAoNbm90aWZpY2F0aW9ucxgBIAMoCzItLmJuZXQu" + 
            "cHJvdG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29rTm90aWZpY2F0aW9uEhcKD2Jv" + 
            "b3Rfc3RyYXBfbGFzdBgCIAEoCCJfChhPZmZlck5vdGlmaWNhdGlvblJlcXVl" + 
            "c3QSNAoFb2ZmZXIYASACKAsyJS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9m" + 
            "ZmVyRXh0ZW5kZWQSDQoFZXZlbnQYAiACKA0iWQoWQmlkTm90aWZpY2F0aW9u" + 
            "UmVxdWVzdBIwCgNiaWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
            "LkJpZEV4dGVuZGVkEg0KBWV2ZW50GAIgAigNMqUaCg9FeGNoYW5nZVNlcnZp" + 
            "Y2UScgoPQ3JlYXRlT3JkZXJCb29rEi4uYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5DcmVhdGVPcmRlckJvb2tSZXF1ZXN0Gi8uYm5ldC5wcm90b2NvbC5leGNo" + 
            "YW5nZS5DcmVhdGVPcmRlckJvb2tSZXNwb25zZRKEAQoVUGxhY2VPZmZlck9u" + 
            "T3JkZXJCb29rEjQuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QbGFjZU9mZmVy" + 
            "T25PcmRlckJvb2tSZXF1ZXN0GjUuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5Q" + 
            "bGFjZU9mZmVyT25PcmRlckJvb2tSZXNwb25zZRKoAQohUGxhY2VPZmZlckNy" + 
            "ZWF0ZU9yZGVyQm9va0lmTmVlZGVkEkAuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5QbGFjZU9mZmVyQ3JlYXRlT3JkZXJCb29rSWZOZWVkZWRSZXF1ZXN0GkEu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5QbGFjZU9mZmVyQ3JlYXRlT3JkZXJC" + 
            "b29rSWZOZWVkZWRSZXNwb25zZRJ+ChNQbGFjZUJpZE9uT3JkZXJCb29rEjIu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5QbGFjZUJpZE9uT3JkZXJCb29rUmVx" + 
            "dWVzdBozLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGxhY2VCaWRPbk9yZGVy" + 
            "Qm9va1Jlc3BvbnNlEqIBCh9QbGFjZUJpZENyZWF0ZU9yZGVyQm9va0lmTmVl" + 
            "ZGVkEj4uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QbGFjZUJpZENyZWF0ZU9y" + 
            "ZGVyQm9va0lmTmVlZGVkUmVxdWVzdBo/LmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2UuUGxhY2VCaWRDcmVhdGVPcmRlckJvb2tJZk5lZWRlZFJlc3BvbnNlEocB" + 
            "ChZRdWVyeU9mZmVyc0J5T3JkZXJCb29rEjUuYm5ldC5wcm90b2NvbC5leGNo" + 
            "YW5nZS5RdWVyeU9mZmVyc0J5T3JkZXJCb29rUmVxdWVzdBo2LmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuUXVlcnlPZmZlcnNCeU9yZGVyQm9va1Jlc3BvbnNl" + 
            "EoEBChRRdWVyeUJpZHNCeU9yZGVyQm9vaxIzLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuUXVlcnlCaWRzQnlPcmRlckJvb2tSZXF1ZXN0GjQuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5RdWVyeUJpZHNCeU9yZGVyQm9va1Jlc3BvbnNlEpYB" + 
            "ChtRdWVyeU9mZmVyc0J5QWNjb3VudEZvckl0ZW0SOi5ibmV0LnByb3RvY29s" + 
            "LmV4Y2hhbmdlLlF1ZXJ5T2ZmZXJzQnlBY2NvdW50Rm9ySXRlbVJlcXVlc3Qa" + 
            "Oy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlF1ZXJ5T2ZmZXJzQnlBY2NvdW50" + 
            "Rm9ySXRlbVJlc3BvbnNlEpABChlRdWVyeUJpZHNCeUFjY291bnRGb3JJdGVt" + 
            "EjguYm5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeUJpZHNCeUFjY291bnRG" + 
            "b3JJdGVtUmVxdWVzdBo5LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlC" + 
            "aWRzQnlBY2NvdW50Rm9ySXRlbVJlc3BvbnNlEocBChZRdWVyeU9yZGVyQm9v" + 
            "a3NTdW1tYXJ5EjUuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeU9yZGVy" + 
            "Qm9va3NTdW1tYXJ5UmVxdWVzdBo2LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "UXVlcnlPcmRlckJvb2tzU3VtbWFyeVJlc3BvbnNlEpYBChtRdWVyeVNldHRs" + 
            "ZW1lbnRzQnlPcmRlckJvb2sSOi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlF1" + 
            "ZXJ5U2V0dGxlbWVudHNCeU9yZGVyQm9va1JlcXVlc3QaOy5ibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlLlF1ZXJ5U2V0dGxlbWVudHNCeU9yZGVyQm9va1Jlc3Bv" + 
            "bnNlEmgKD1JlcG9ydEF1dGhvcml6ZRI+LmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2Vfb2JqZWN0X3Byb3ZpZGVyLlJlcG9ydEF1dGhvcml6ZVJlcXVlc3QaFS5i" + 
            "bmV0LnByb3RvY29sLk5vRGF0YRJiCgxSZXBvcnRTZXR0bGUSOy5ibmV0LnBy" + 
            "b3RvY29sLmV4Y2hhbmdlX29iamVjdF9wcm92aWRlci5SZXBvcnRTZXR0bGVS" + 
            "ZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGESYgoMUmVwb3J0Q2FuY2Vs" + 
            "EjsuYm5ldC5wcm90b2NvbC5leGNoYW5nZV9vYmplY3RfcHJvdmlkZXIuUmVw" + 
            "b3J0Q2FuY2VsUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhEnYKHlN1" + 
            "YnNjcmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZRI9LmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuU3Vic2NyaWJlT3JkZXJCb29rU3RhdHVzQ2hhbmdlUmVxdWVz" + 
            "dBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhEnoKIFVuc3Vic2NyaWJlT3JkZXJC" + 
            "b29rU3RhdHVzQ2hhbmdlEj8uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5VbnN1" + 
            "YnNjcmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZVJlcXVlc3QaFS5ibmV0LnBy" + 
            "b3RvY29sLk5vRGF0YRJuChpTdWJzY3JpYmVPcmRlclN0YXR1c0NoYW5nZRI5" + 
            "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuU3Vic2NyaWJlT3JkZXJTdGF0dXND" + 
            "aGFuZ2VSZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEScgocVW5zdWJz" + 
            "Y3JpYmVPcmRlclN0YXR1c0NoYW5nZRI7LmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2UuVW5zdWJzY3JpYmVPcmRlclN0YXR1c0NoYW5nZVJlcXVlc3QaFS5ibmV0" + 
            "LnByb3RvY29sLk5vRGF0YRKYAQoRR2V0UGF5bWVudE1ldGhvZHMSQC5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlX29iamVjdF9wcm92aWRlci5HZXRQYXltZW50" + 
            "TWV0aG9kc1JlcXVlc3QaQS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlX29iamVj" + 
            "dF9wcm92aWRlci5HZXRQYXltZW50TWV0aG9kc1Jlc3BvbnNlEksKDENsYWlt" + 
            "QmlkSXRlbRIkLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQ2xhaW1SZXF1ZXN0" + 
            "GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGESTAoNQ2xhaW1CaWRNb25leRIkLmJu" + 
            "ZXQucHJvdG9jb2wuZXhjaGFuZ2UuQ2xhaW1SZXF1ZXN0GhUuYm5ldC5wcm90" + 
            "b2NvbC5Ob0RhdGESTQoOQ2xhaW1PZmZlckl0ZW0SJC5ibmV0LnByb3RvY29s" + 
            "LmV4Y2hhbmdlLkNsYWltUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRh" + 
            "Ek4KD0NsYWltT2ZmZXJNb25leRIkLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "Q2xhaW1SZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGESSQoJQ2FuY2Vs" + 
            "QmlkEiUuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5DYW5jZWxSZXF1ZXN0GhUu" + 
            "Ym5ldC5wcm90b2NvbC5Ob0RhdGESSwoLQ2FuY2VsT2ZmZXISJS5ibmV0LnBy" + 
            "b3RvY29sLmV4Y2hhbmdlLkNhbmNlbFJlcXVlc3QaFS5ibmV0LnByb3RvY29s" + 
            "Lk5vRGF0YRJ1ChBHZXRDb25maWd1cmF0aW9uEi8uYm5ldC5wcm90b2NvbC5l" + 
            "eGNoYW5nZS5HZXRDb25maWd1cmF0aW9uUmVxdWVzdBowLmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuR2V0Q29uZmlndXJhdGlvblJlc3BvbnNlEnsKE0dldEJp" + 
            "ZEZlZUVzdGltYXRpb24SMi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkdldEJp" + 
            "ZEZlZUVzdGltYXRpb25SZXF1ZXN0GjAuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5HZXRGZWVFc3RpbWF0aW9uUmVzcG9uc2USfwoVR2V0T2ZmZXJGZWVFc3Rp" + 
            "bWF0aW9uEjQuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5HZXRPZmZlckZlZUVz" + 
            "dGltYXRpb25SZXF1ZXN0GjAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5HZXRG" + 
            "ZWVFc3RpbWF0aW9uUmVzcG9uc2UyzwIKDkV4Y2hhbmdlTm90aWZ5Em8KG05v" + 
            "dGlmeU9yZGVyQm9va1N0YXR1c0NoYW5nZRI0LmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuT3JkZXJCb29rTm90aWZpY2F0aW9uUmVxdWVzdBoaLmJuZXQucHJv" + 
            "dG9jb2wuTk9fUkVTUE9OU0USZwoXTm90aWZ5T2ZmZXJTdGF0dXNDaGFuZ2US" + 
            "MC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyTm90aWZpY2F0aW9uUmVx" + 
            "dWVzdBoaLmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0USYwoVTm90aWZ5Qmlk" + 
            "U3RhdHVzQ2hhbmdlEi4uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CaWROb3Rp" + 
            "ZmljYXRpb25SZXF1ZXN0GhouYm5ldC5wcm90b2NvbC5OT19SRVNQT05TRUIp" + 
            "QhBDRXhjaGFuZ2VTZXJ2aWNlgAEBwj4REg9FeGNoYW5nZVNlcnZpY2U=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookRequest, global::bnet.protocol.exchange.CreateOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", });
          internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", });
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest, global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "OfferCreation", });
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", "OfferId", });
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", "OfferCreation", });
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor,
                  new string[] { "OrderBookId", "OfferId", });
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest, global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "BidCreation", });
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", "BidId", });
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", "BidCreation", });
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor,
                  new string[] { "OrderBookId", "BidId", });
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookRequest, global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "Filter", "Status", });
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor,
                  new string[] { "Offers", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookRequest, global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "Filter", "Status", });
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor,
                  new string[] { "Bids", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor,
                  new string[] { "AccountForItem", "Filter", "BnetAccount", });
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor,
                  new string[] { "Offers", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest, global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor,
                  new string[] { "AccountForItem", "Filter", "BnetAccount", });
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor,
                  new string[] { "Bids", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest, global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor,
                  new string[] { "Handles", });
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor,
                  new string[] { "OrderBooks", });
          internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest, global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "Filter", });
          internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse, global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__Descriptor,
                  new string[] { "Settlements", });
          internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor,
                  new string[] { "ObjectId", "MinPartitionId", "MaxPartitionId", "Program", "Status", "Currency", "Specialist", "Bootstrap", });
          internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor = Descriptor.MessageTypes[23];
          internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor,
                  new string[] { });
          internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__Descriptor = Descriptor.MessageTypes[24];
          internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__Descriptor = Descriptor.MessageTypes[25];
          internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor = Descriptor.MessageTypes[26];
          internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.ClaimRequest, global::bnet.protocol.exchange.ClaimRequest.Builder>(internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "BnetAccount", });
          internal__static_bnet_protocol_exchange_CancelRequest__Descriptor = Descriptor.MessageTypes[27];
          internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CancelRequest, global::bnet.protocol.exchange.CancelRequest.Builder>(internal__static_bnet_protocol_exchange_CancelRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "Reason", "BnetAccount", });
          internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor = Descriptor.MessageTypes[28];
          internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationRequest, global::bnet.protocol.exchange.GetConfigurationRequest.Builder>(internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor,
                  new string[] { "Program", });
          internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor = Descriptor.MessageTypes[29];
          internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder>(internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor,
                  new string[] { "Configs", });
          internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor = Descriptor.MessageTypes[30];
          internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferFeeEstimationRequest, global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Builder>(internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor,
                  new string[] { "PartitionId", "Data", });
          internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor = Descriptor.MessageTypes[31];
          internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidFeeEstimationRequest, global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Builder>(internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor,
                  new string[] { "PartitionId", "Data", });
          internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor = Descriptor.MessageTypes[32];
          internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor,
                  new string[] { "FeeAmount", });
          internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor = Descriptor.MessageTypes[33];
          internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotificationRequest, global::bnet.protocol.exchange.OrderBookNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor,
                  new string[] { "Notifications", "BootStrapLast", });
          internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor = Descriptor.MessageTypes[34];
          internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferNotificationRequest, global::bnet.protocol.exchange.OfferNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor,
                  new string[] { "Offer", "Event", });
          internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor = Descriptor.MessageTypes[35];
          internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidNotificationRequest, global::bnet.protocol.exchange.BidNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor,
                  new string[] { "Bid", "Event", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange.Exchange.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange.ExchangeTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            global::bnet.protocol.exchange.Exchange.Descriptor, 
            global::bnet.protocol.exchange_object_provider.ExchangeObjectProvider.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.exchange.ExchangeTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  public sealed partial class CreateOrderBookRequest : pb::GeneratedMessage<CreateOrderBookRequest, CreateOrderBookRequest.Builder> {
    private static readonly CreateOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static CreateOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CreateOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateOrderBookRequest, CreateOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOrderBook) {
        output.WriteMessage(2, OrderBook);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CreateOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CreateOrderBookRequest result = new CreateOrderBookRequest();
      
      protected override CreateOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CreateOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookRequest.Descriptor; }
      }
      
      public override CreateOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance; }
      }
      
      public override CreateOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CreateOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateOrderBookRequest) {
          return MergeFrom((CreateOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (HasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.HasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
    }
    static CreateOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class CreateOrderBookResponse : pb::GeneratedMessage<CreateOrderBookResponse, CreateOrderBookResponse.Builder> {
    private static readonly CreateOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static CreateOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CreateOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateOrderBookResponse, CreateOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_ = 0UL;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOrderBookId) {
        output.WriteUInt64(1, OrderBookId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CreateOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CreateOrderBookResponse result = new CreateOrderBookResponse();
      
      protected override CreateOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CreateOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookResponse.Descriptor; }
      }
      
      public override CreateOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance; }
      }
      
      public override CreateOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CreateOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateOrderBookResponse) {
          return MergeFrom((CreateOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              OrderBookId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasOrderBookId {
        get { return result.HasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
    }
    static CreateOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceOfferOnOrderBookRequest : pb::GeneratedMessage<PlaceOfferOnOrderBookRequest, PlaceOfferOnOrderBookRequest.Builder> {
    private static readonly PlaceOfferOnOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static PlaceOfferOnOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferOnOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceOfferOnOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferOnOrderBookRequest, PlaceOfferOnOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OfferCreationFieldNumber = 2;
    private bool hasOfferCreation;
    private global::bnet.protocol.exchange.OfferCreation offerCreation_ = global::bnet.protocol.exchange.OfferCreation.DefaultInstance;
    public bool HasOfferCreation {
      get { return hasOfferCreation; }
    }
    public global::bnet.protocol.exchange.OfferCreation OfferCreation {
      get { return offerCreation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOfferCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OfferCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOfferCreation) {
        output.WriteMessage(2, OfferCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOfferCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OfferCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferOnOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferOnOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceOfferOnOrderBookRequest result = new PlaceOfferOnOrderBookRequest();
      
      protected override PlaceOfferOnOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceOfferOnOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Descriptor; }
      }
      
      public override PlaceOfferOnOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance; }
      }
      
      public override PlaceOfferOnOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceOfferOnOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferOnOrderBookRequest) {
          return MergeFrom((PlaceOfferOnOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferOnOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOfferCreation) {
          MergeOfferCreation(other.OfferCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OfferCreation.Builder subBuilder = global::bnet.protocol.exchange.OfferCreation.CreateBuilder();
              if (HasOfferCreation) {
                subBuilder.MergeFrom(OfferCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OfferCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOfferCreation {
       get { return result.HasOfferCreation; }
      }
      public global::bnet.protocol.exchange.OfferCreation OfferCreation {
        get { return result.OfferCreation; }
        set { SetOfferCreation(value); }
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOfferCreation = true;
        result.offerCreation_ = value;
        return this;
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOfferCreation = true;
        result.offerCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOfferCreation &&
            result.offerCreation_ != global::bnet.protocol.exchange.OfferCreation.DefaultInstance) {
            result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.CreateBuilder(result.offerCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.offerCreation_ = value;
        }
        result.hasOfferCreation = true;
        return this;
      }
      public Builder ClearOfferCreation() {
        result.hasOfferCreation = false;
        result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.DefaultInstance;
        return this;
      }
    }
    static PlaceOfferOnOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceOfferOnOrderBookResponse : pb::GeneratedMessage<PlaceOfferOnOrderBookResponse, PlaceOfferOnOrderBookResponse.Builder> {
    private static readonly PlaceOfferOnOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static PlaceOfferOnOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferOnOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceOfferOnOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferOnOrderBookResponse, PlaceOfferOnOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_ = 0UL;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OfferIdFieldNumber = 2;
    private bool hasOfferId;
    private ulong offerId_ = 0UL;
    public bool HasOfferId {
      get { return hasOfferId; }
    }
    public ulong OfferId {
      get { return offerId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOrderBookId) {
        output.WriteUInt64(1, OrderBookId);
      }
      if (HasOfferId) {
        output.WriteUInt64(2, OfferId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (HasOfferId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OfferId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferOnOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferOnOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceOfferOnOrderBookResponse result = new PlaceOfferOnOrderBookResponse();
      
      protected override PlaceOfferOnOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceOfferOnOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Descriptor; }
      }
      
      public override PlaceOfferOnOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance; }
      }
      
      public override PlaceOfferOnOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceOfferOnOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferOnOrderBookResponse) {
          return MergeFrom((PlaceOfferOnOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferOnOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOfferId) {
          OfferId = other.OfferId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              OrderBookId = input.ReadUInt64();
              break;
            }
            case 16: {
              OfferId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasOrderBookId {
        get { return result.HasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOfferId {
        get { return result.HasOfferId; }
      }
      public ulong OfferId {
        get { return result.OfferId; }
        set { SetOfferId(value); }
      }
      public Builder SetOfferId(ulong value) {
        result.hasOfferId = true;
        result.offerId_ = value;
        return this;
      }
      public Builder ClearOfferId() {
        result.hasOfferId = false;
        result.offerId_ = 0UL;
        return this;
      }
    }
    static PlaceOfferOnOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceOfferCreateOrderBookIfNeededRequest : pb::GeneratedMessage<PlaceOfferCreateOrderBookIfNeededRequest, PlaceOfferCreateOrderBookIfNeededRequest.Builder> {
    private static readonly PlaceOfferCreateOrderBookIfNeededRequest defaultInstance = new Builder().BuildPartial();
    public static PlaceOfferCreateOrderBookIfNeededRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferCreateOrderBookIfNeededRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceOfferCreateOrderBookIfNeededRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferCreateOrderBookIfNeededRequest, PlaceOfferCreateOrderBookIfNeededRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public const int OfferCreationFieldNumber = 3;
    private bool hasOfferCreation;
    private global::bnet.protocol.exchange.OfferCreation offerCreation_ = global::bnet.protocol.exchange.OfferCreation.DefaultInstance;
    public bool HasOfferCreation {
      get { return hasOfferCreation; }
    }
    public global::bnet.protocol.exchange.OfferCreation OfferCreation {
      get { return offerCreation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!hasOfferCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!OfferCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOrderBook) {
        output.WriteMessage(2, OrderBook);
      }
      if (HasOfferCreation) {
        output.WriteMessage(3, OfferCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        if (HasOfferCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, OfferCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferCreateOrderBookIfNeededRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferCreateOrderBookIfNeededRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceOfferCreateOrderBookIfNeededRequest result = new PlaceOfferCreateOrderBookIfNeededRequest();
      
      protected override PlaceOfferCreateOrderBookIfNeededRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceOfferCreateOrderBookIfNeededRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Descriptor; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceOfferCreateOrderBookIfNeededRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferCreateOrderBookIfNeededRequest) {
          return MergeFrom((PlaceOfferCreateOrderBookIfNeededRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferCreateOrderBookIfNeededRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasOfferCreation) {
          MergeOfferCreation(other.OfferCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (HasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.OfferCreation.Builder subBuilder = global::bnet.protocol.exchange.OfferCreation.CreateBuilder();
              if (HasOfferCreation) {
                subBuilder.MergeFrom(OfferCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OfferCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.HasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
      
      public bool HasOfferCreation {
       get { return result.HasOfferCreation; }
      }
      public global::bnet.protocol.exchange.OfferCreation OfferCreation {
        get { return result.OfferCreation; }
        set { SetOfferCreation(value); }
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOfferCreation = true;
        result.offerCreation_ = value;
        return this;
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOfferCreation = true;
        result.offerCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOfferCreation &&
            result.offerCreation_ != global::bnet.protocol.exchange.OfferCreation.DefaultInstance) {
            result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.CreateBuilder(result.offerCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.offerCreation_ = value;
        }
        result.hasOfferCreation = true;
        return this;
      }
      public Builder ClearOfferCreation() {
        result.hasOfferCreation = false;
        result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.DefaultInstance;
        return this;
      }
    }
    static PlaceOfferCreateOrderBookIfNeededRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceOfferCreateOrderBookIfNeededResponse : pb::GeneratedMessage<PlaceOfferCreateOrderBookIfNeededResponse, PlaceOfferCreateOrderBookIfNeededResponse.Builder> {
    private static readonly PlaceOfferCreateOrderBookIfNeededResponse defaultInstance = new Builder().BuildPartial();
    public static PlaceOfferCreateOrderBookIfNeededResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferCreateOrderBookIfNeededResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceOfferCreateOrderBookIfNeededResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferCreateOrderBookIfNeededResponse, PlaceOfferCreateOrderBookIfNeededResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_ = 0UL;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OfferIdFieldNumber = 2;
    private bool hasOfferId;
    private ulong offerId_ = 0UL;
    public bool HasOfferId {
      get { return hasOfferId; }
    }
    public ulong OfferId {
      get { return offerId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOrderBookId) {
        output.WriteUInt64(1, OrderBookId);
      }
      if (HasOfferId) {
        output.WriteUInt64(2, OfferId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (HasOfferId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OfferId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferCreateOrderBookIfNeededResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferCreateOrderBookIfNeededResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceOfferCreateOrderBookIfNeededResponse result = new PlaceOfferCreateOrderBookIfNeededResponse();
      
      protected override PlaceOfferCreateOrderBookIfNeededResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceOfferCreateOrderBookIfNeededResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Descriptor; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceOfferCreateOrderBookIfNeededResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferCreateOrderBookIfNeededResponse) {
          return MergeFrom((PlaceOfferCreateOrderBookIfNeededResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferCreateOrderBookIfNeededResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOfferId) {
          OfferId = other.OfferId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              OrderBookId = input.ReadUInt64();
              break;
            }
            case 16: {
              OfferId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasOrderBookId {
        get { return result.HasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOfferId {
        get { return result.HasOfferId; }
      }
      public ulong OfferId {
        get { return result.OfferId; }
        set { SetOfferId(value); }
      }
      public Builder SetOfferId(ulong value) {
        result.hasOfferId = true;
        result.offerId_ = value;
        return this;
      }
      public Builder ClearOfferId() {
        result.hasOfferId = false;
        result.offerId_ = 0UL;
        return this;
      }
    }
    static PlaceOfferCreateOrderBookIfNeededResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceBidOnOrderBookRequest : pb::GeneratedMessage<PlaceBidOnOrderBookRequest, PlaceBidOnOrderBookRequest.Builder> {
    private static readonly PlaceBidOnOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static PlaceBidOnOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidOnOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceBidOnOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidOnOrderBookRequest, PlaceBidOnOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int BidCreationFieldNumber = 2;
    private bool hasBidCreation;
    private global::bnet.protocol.exchange.BidCreation bidCreation_ = global::bnet.protocol.exchange.BidCreation.DefaultInstance;
    public bool HasBidCreation {
      get { return hasBidCreation; }
    }
    public global::bnet.protocol.exchange.BidCreation BidCreation {
      get { return bidCreation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasBidCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!BidCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasBidCreation) {
        output.WriteMessage(2, BidCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasBidCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, BidCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidOnOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidOnOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceBidOnOrderBookRequest result = new PlaceBidOnOrderBookRequest();
      
      protected override PlaceBidOnOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceBidOnOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Descriptor; }
      }
      
      public override PlaceBidOnOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance; }
      }
      
      public override PlaceBidOnOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceBidOnOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidOnOrderBookRequest) {
          return MergeFrom((PlaceBidOnOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidOnOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasBidCreation) {
          MergeBidCreation(other.BidCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.BidCreation.Builder subBuilder = global::bnet.protocol.exchange.BidCreation.CreateBuilder();
              if (HasBidCreation) {
                subBuilder.MergeFrom(BidCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasBidCreation {
       get { return result.HasBidCreation; }
      }
      public global::bnet.protocol.exchange.BidCreation BidCreation {
        get { return result.BidCreation; }
        set { SetBidCreation(value); }
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBidCreation = true;
        result.bidCreation_ = value;
        return this;
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBidCreation = true;
        result.bidCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBidCreation &&
            result.bidCreation_ != global::bnet.protocol.exchange.BidCreation.DefaultInstance) {
            result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.CreateBuilder(result.bidCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.bidCreation_ = value;
        }
        result.hasBidCreation = true;
        return this;
      }
      public Builder ClearBidCreation() {
        result.hasBidCreation = false;
        result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.DefaultInstance;
        return this;
      }
    }
    static PlaceBidOnOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceBidOnOrderBookResponse : pb::GeneratedMessage<PlaceBidOnOrderBookResponse, PlaceBidOnOrderBookResponse.Builder> {
    private static readonly PlaceBidOnOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static PlaceBidOnOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidOnOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceBidOnOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidOnOrderBookResponse, PlaceBidOnOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_ = 0UL;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int BidIdFieldNumber = 2;
    private bool hasBidId;
    private ulong bidId_ = 0UL;
    public bool HasBidId {
      get { return hasBidId; }
    }
    public ulong BidId {
      get { return bidId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOrderBookId) {
        output.WriteUInt64(1, OrderBookId);
      }
      if (HasBidId) {
        output.WriteUInt64(2, BidId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (HasBidId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, BidId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidOnOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidOnOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceBidOnOrderBookResponse result = new PlaceBidOnOrderBookResponse();
      
      protected override PlaceBidOnOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceBidOnOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Descriptor; }
      }
      
      public override PlaceBidOnOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance; }
      }
      
      public override PlaceBidOnOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceBidOnOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidOnOrderBookResponse) {
          return MergeFrom((PlaceBidOnOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidOnOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasBidId) {
          BidId = other.BidId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              OrderBookId = input.ReadUInt64();
              break;
            }
            case 16: {
              BidId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasOrderBookId {
        get { return result.HasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasBidId {
        get { return result.HasBidId; }
      }
      public ulong BidId {
        get { return result.BidId; }
        set { SetBidId(value); }
      }
      public Builder SetBidId(ulong value) {
        result.hasBidId = true;
        result.bidId_ = value;
        return this;
      }
      public Builder ClearBidId() {
        result.hasBidId = false;
        result.bidId_ = 0UL;
        return this;
      }
    }
    static PlaceBidOnOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceBidCreateOrderBookIfNeededRequest : pb::GeneratedMessage<PlaceBidCreateOrderBookIfNeededRequest, PlaceBidCreateOrderBookIfNeededRequest.Builder> {
    private static readonly PlaceBidCreateOrderBookIfNeededRequest defaultInstance = new Builder().BuildPartial();
    public static PlaceBidCreateOrderBookIfNeededRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidCreateOrderBookIfNeededRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceBidCreateOrderBookIfNeededRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidCreateOrderBookIfNeededRequest, PlaceBidCreateOrderBookIfNeededRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_; }
    }
    
    public const int BidCreationFieldNumber = 3;
    private bool hasBidCreation;
    private global::bnet.protocol.exchange.BidCreation bidCreation_ = global::bnet.protocol.exchange.BidCreation.DefaultInstance;
    public bool HasBidCreation {
      get { return hasBidCreation; }
    }
    public global::bnet.protocol.exchange.BidCreation BidCreation {
      get { return bidCreation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!hasBidCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!BidCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOrderBook) {
        output.WriteMessage(2, OrderBook);
      }
      if (HasBidCreation) {
        output.WriteMessage(3, BidCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        if (HasBidCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BidCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidCreateOrderBookIfNeededRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidCreateOrderBookIfNeededRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceBidCreateOrderBookIfNeededRequest result = new PlaceBidCreateOrderBookIfNeededRequest();
      
      protected override PlaceBidCreateOrderBookIfNeededRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceBidCreateOrderBookIfNeededRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Descriptor; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceBidCreateOrderBookIfNeededRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidCreateOrderBookIfNeededRequest) {
          return MergeFrom((PlaceBidCreateOrderBookIfNeededRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidCreateOrderBookIfNeededRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasBidCreation) {
          MergeBidCreation(other.BidCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (HasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.BidCreation.Builder subBuilder = global::bnet.protocol.exchange.BidCreation.CreateBuilder();
              if (HasBidCreation) {
                subBuilder.MergeFrom(BidCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.HasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        result.hasOrderBook = false;
        result.orderBook_ = global::bnet.protocol.exchange.OrderBook.DefaultInstance;
        return this;
      }
      
      public bool HasBidCreation {
       get { return result.HasBidCreation; }
      }
      public global::bnet.protocol.exchange.BidCreation BidCreation {
        get { return result.BidCreation; }
        set { SetBidCreation(value); }
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBidCreation = true;
        result.bidCreation_ = value;
        return this;
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBidCreation = true;
        result.bidCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBidCreation &&
            result.bidCreation_ != global::bnet.protocol.exchange.BidCreation.DefaultInstance) {
            result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.CreateBuilder(result.bidCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.bidCreation_ = value;
        }
        result.hasBidCreation = true;
        return this;
      }
      public Builder ClearBidCreation() {
        result.hasBidCreation = false;
        result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.DefaultInstance;
        return this;
      }
    }
    static PlaceBidCreateOrderBookIfNeededRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class PlaceBidCreateOrderBookIfNeededResponse : pb::GeneratedMessage<PlaceBidCreateOrderBookIfNeededResponse, PlaceBidCreateOrderBookIfNeededResponse.Builder> {
    private static readonly PlaceBidCreateOrderBookIfNeededResponse defaultInstance = new Builder().BuildPartial();
    public static PlaceBidCreateOrderBookIfNeededResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidCreateOrderBookIfNeededResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override PlaceBidCreateOrderBookIfNeededResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidCreateOrderBookIfNeededResponse, PlaceBidCreateOrderBookIfNeededResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_ = 0UL;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int BidIdFieldNumber = 2;
    private bool hasBidId;
    private ulong bidId_ = 0UL;
    public bool HasBidId {
      get { return hasBidId; }
    }
    public ulong BidId {
      get { return bidId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOrderBookId) {
        output.WriteUInt64(1, OrderBookId);
      }
      if (HasBidId) {
        output.WriteUInt64(2, BidId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (HasBidId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, BidId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidCreateOrderBookIfNeededResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidCreateOrderBookIfNeededResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      PlaceBidCreateOrderBookIfNeededResponse result = new PlaceBidCreateOrderBookIfNeededResponse();
      
      protected override PlaceBidCreateOrderBookIfNeededResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new PlaceBidCreateOrderBookIfNeededResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Descriptor; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        PlaceBidCreateOrderBookIfNeededResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidCreateOrderBookIfNeededResponse) {
          return MergeFrom((PlaceBidCreateOrderBookIfNeededResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidCreateOrderBookIfNeededResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance) return this;
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasBidId) {
          BidId = other.BidId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              OrderBookId = input.ReadUInt64();
              break;
            }
            case 16: {
              BidId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasOrderBookId {
        get { return result.HasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasBidId {
        get { return result.HasBidId; }
      }
      public ulong BidId {
        get { return result.BidId; }
        set { SetBidId(value); }
      }
      public Builder SetBidId(ulong value) {
        result.hasBidId = true;
        result.bidId_ = value;
        return this;
      }
      public Builder ClearBidId() {
        result.hasBidId = false;
        result.bidId_ = 0UL;
        return this;
      }
    }
    static PlaceBidCreateOrderBookIfNeededResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOffersByOrderBookRequest : pb::GeneratedMessage<QueryOffersByOrderBookRequest, QueryOffersByOrderBookRequest.Builder> {
    private static readonly QueryOffersByOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static QueryOffersByOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOffersByOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByOrderBookRequest, QueryOffersByOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByOrderId filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
      get { return filter_; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private int status_ = 0;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasFilter) return false;
        if (!hasStatus) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasFilter) {
        output.WriteMessage(2, Filter);
      }
      if (HasStatus) {
        output.WriteInt32(3, Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (HasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOffersByOrderBookRequest result = new QueryOffersByOrderBookRequest();
      
      protected override QueryOffersByOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOffersByOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Descriptor; }
      }
      
      public override QueryOffersByOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance; }
      }
      
      public override QueryOffersByOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryOffersByOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByOrderBookRequest) {
          return MergeFrom((QueryOffersByOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByOrderId.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder();
              if (HasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              Status = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasFilter {
       get { return result.HasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
        return this;
      }
      
      public bool HasStatus {
        get { return result.HasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static QueryOffersByOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOffersByOrderBookResponse : pb::GeneratedMessage<QueryOffersByOrderBookResponse, QueryOffersByOrderBookResponse.Builder> {
    private static readonly QueryOffersByOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static QueryOffersByOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOffersByOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByOrderBookResponse, QueryOffersByOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OffersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended> offers_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended>();
    public scg::IList<global::bnet.protocol.exchange.OfferExtended> OffersList {
      get { return offers_; }
    }
    public int OffersCount {
      get { return offers_.Count; }
    }
    public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
      return offers_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_ = 0;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
        output.WriteMessage(1, element);
      }
      if (HasTotalCount) {
        output.WriteUInt32(2, TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (HasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOffersByOrderBookResponse result = new QueryOffersByOrderBookResponse();
      
      protected override QueryOffersByOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOffersByOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Descriptor; }
      }
      
      public override QueryOffersByOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance; }
      }
      
      public override QueryOffersByOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.offers_.MakeReadOnly();
        QueryOffersByOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByOrderBookResponse) {
          return MergeFrom((QueryOffersByOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance) return this;
        if (other.offers_.Count != 0) {
          base.AddRange(other.offers_, result.offers_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OfferExtended.Builder subBuilder = global::bnet.protocol.exchange.OfferExtended.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddOffers(subBuilder.BuildPartial());
              break;
            }
            case 16: {
              TotalCount = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OfferExtended> OffersList {
        get { return result.offers_; }
      }
      public int OffersCount {
        get { return result.OffersCount; }
      }
      public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
        return result.GetOffers(index);
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.offers_[index] = value;
        return this;
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.offers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.offers_.Add(value);
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.offers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffers(scg::IEnumerable<global::bnet.protocol.exchange.OfferExtended> values) {
        base.AddRange(values, result.offers_);
        return this;
      }
      public Builder ClearOffers() {
        result.offers_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.HasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryOffersByOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryBidsByOrderBookRequest : pb::GeneratedMessage<QueryBidsByOrderBookRequest, QueryBidsByOrderBookRequest.Builder> {
    private static readonly QueryBidsByOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static QueryBidsByOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryBidsByOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByOrderBookRequest, QueryBidsByOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByOrderId filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
      get { return filter_; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private int status_ = 0;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasFilter) return false;
        if (!hasStatus) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasFilter) {
        output.WriteMessage(2, Filter);
      }
      if (HasStatus) {
        output.WriteInt32(3, Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (HasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryBidsByOrderBookRequest result = new QueryBidsByOrderBookRequest();
      
      protected override QueryBidsByOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryBidsByOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Descriptor; }
      }
      
      public override QueryBidsByOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance; }
      }
      
      public override QueryBidsByOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryBidsByOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByOrderBookRequest) {
          return MergeFrom((QueryBidsByOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByOrderId.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder();
              if (HasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              Status = input.ReadInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasFilter {
       get { return result.HasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
        return this;
      }
      
      public bool HasStatus {
        get { return result.HasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static QueryBidsByOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryBidsByOrderBookResponse : pb::GeneratedMessage<QueryBidsByOrderBookResponse, QueryBidsByOrderBookResponse.Builder> {
    private static readonly QueryBidsByOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static QueryBidsByOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryBidsByOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByOrderBookResponse, QueryBidsByOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int BidsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended> bids_ = new pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended>();
    public scg::IList<global::bnet.protocol.exchange.BidExtended> BidsList {
      get { return bids_; }
    }
    public int BidsCount {
      get { return bids_.Count; }
    }
    public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
      return bids_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_ = 0;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
        output.WriteMessage(1, element);
      }
      if (HasTotalCount) {
        output.WriteUInt32(2, TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (HasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryBidsByOrderBookResponse result = new QueryBidsByOrderBookResponse();
      
      protected override QueryBidsByOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryBidsByOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Descriptor; }
      }
      
      public override QueryBidsByOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance; }
      }
      
      public override QueryBidsByOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.bids_.MakeReadOnly();
        QueryBidsByOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByOrderBookResponse) {
          return MergeFrom((QueryBidsByOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance) return this;
        if (other.bids_.Count != 0) {
          base.AddRange(other.bids_, result.bids_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BidExtended.Builder subBuilder = global::bnet.protocol.exchange.BidExtended.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddBids(subBuilder.BuildPartial());
              break;
            }
            case 16: {
              TotalCount = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.BidExtended> BidsList {
        get { return result.bids_; }
      }
      public int BidsCount {
        get { return result.BidsCount; }
      }
      public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
        return result.GetBids(index);
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.bids_[index] = value;
        return this;
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.bids_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.bids_.Add(value);
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.bids_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBids(scg::IEnumerable<global::bnet.protocol.exchange.BidExtended> values) {
        base.AddRange(values, result.bids_);
        return this;
      }
      public Builder ClearBids() {
        result.bids_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.HasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryBidsByOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOffersByAccountForItemRequest : pb::GeneratedMessage<QueryOffersByAccountForItemRequest, QueryOffersByAccountForItemRequest.Builder> {
    private static readonly QueryOffersByAccountForItemRequest defaultInstance = new Builder().BuildPartial();
    public static QueryOffersByAccountForItemRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByAccountForItemRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOffersByAccountForItemRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByAccountForItemRequest, QueryOffersByAccountForItemRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable; }
    }
    
    public const int AccountForItemFieldNumber = 1;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByCreatedTime filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
      get { return filter_; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountForItem) return false;
        if (!hasFilter) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAccountForItem) {
        output.WriteMessage(1, AccountForItem);
      }
      if (HasFilter) {
        output.WriteMessage(2, Filter);
      }
      if (HasBnetAccount) {
        output.WriteMessage(3, BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountForItem);
        }
        if (HasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (HasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByAccountForItemRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByAccountForItemRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOffersByAccountForItemRequest result = new QueryOffersByAccountForItemRequest();
      
      protected override QueryOffersByAccountForItemRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOffersByAccountForItemRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Descriptor; }
      }
      
      public override QueryOffersByAccountForItemRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance; }
      }
      
      public override QueryOffersByAccountForItemRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryOffersByAccountForItemRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByAccountForItemRequest) {
          return MergeFrom((QueryOffersByAccountForItemRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByAccountForItemRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance) return this;
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (HasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder();
              if (HasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasAccountForItem {
       get { return result.HasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        result.hasAccountForItem = false;
        result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
        return this;
      }
      
      public bool HasFilter {
       get { return result.HasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.HasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static QueryOffersByAccountForItemRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOffersByAccountForItemResponse : pb::GeneratedMessage<QueryOffersByAccountForItemResponse, QueryOffersByAccountForItemResponse.Builder> {
    private static readonly QueryOffersByAccountForItemResponse defaultInstance = new Builder().BuildPartial();
    public static QueryOffersByAccountForItemResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByAccountForItemResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOffersByAccountForItemResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByAccountForItemResponse, QueryOffersByAccountForItemResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable; }
    }
    
    public const int OffersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended> offers_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended>();
    public scg::IList<global::bnet.protocol.exchange.OfferExtended> OffersList {
      get { return offers_; }
    }
    public int OffersCount {
      get { return offers_.Count; }
    }
    public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
      return offers_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_ = 0;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
        output.WriteMessage(1, element);
      }
      if (HasTotalCount) {
        output.WriteUInt32(2, TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (HasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByAccountForItemResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByAccountForItemResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOffersByAccountForItemResponse result = new QueryOffersByAccountForItemResponse();
      
      protected override QueryOffersByAccountForItemResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOffersByAccountForItemResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Descriptor; }
      }
      
      public override QueryOffersByAccountForItemResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance; }
      }
      
      public override QueryOffersByAccountForItemResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.offers_.MakeReadOnly();
        QueryOffersByAccountForItemResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByAccountForItemResponse) {
          return MergeFrom((QueryOffersByAccountForItemResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByAccountForItemResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance) return this;
        if (other.offers_.Count != 0) {
          base.AddRange(other.offers_, result.offers_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OfferExtended.Builder subBuilder = global::bnet.protocol.exchange.OfferExtended.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddOffers(subBuilder.BuildPartial());
              break;
            }
            case 16: {
              TotalCount = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OfferExtended> OffersList {
        get { return result.offers_; }
      }
      public int OffersCount {
        get { return result.OffersCount; }
      }
      public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
        return result.GetOffers(index);
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.offers_[index] = value;
        return this;
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.offers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.offers_.Add(value);
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.offers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffers(scg::IEnumerable<global::bnet.protocol.exchange.OfferExtended> values) {
        base.AddRange(values, result.offers_);
        return this;
      }
      public Builder ClearOffers() {
        result.offers_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.HasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryOffersByAccountForItemResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryBidsByAccountForItemRequest : pb::GeneratedMessage<QueryBidsByAccountForItemRequest, QueryBidsByAccountForItemRequest.Builder> {
    private static readonly QueryBidsByAccountForItemRequest defaultInstance = new Builder().BuildPartial();
    public static QueryBidsByAccountForItemRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByAccountForItemRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryBidsByAccountForItemRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByAccountForItemRequest, QueryBidsByAccountForItemRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable; }
    }
    
    public const int AccountForItemFieldNumber = 1;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByCreatedTime filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
      get { return filter_; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountForItem) return false;
        if (!hasFilter) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAccountForItem) {
        output.WriteMessage(1, AccountForItem);
      }
      if (HasFilter) {
        output.WriteMessage(2, Filter);
      }
      if (HasBnetAccount) {
        output.WriteMessage(3, BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountForItem);
        }
        if (HasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (HasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByAccountForItemRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByAccountForItemRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryBidsByAccountForItemRequest result = new QueryBidsByAccountForItemRequest();
      
      protected override QueryBidsByAccountForItemRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryBidsByAccountForItemRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Descriptor; }
      }
      
      public override QueryBidsByAccountForItemRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance; }
      }
      
      public override QueryBidsByAccountForItemRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QueryBidsByAccountForItemRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByAccountForItemRequest) {
          return MergeFrom((QueryBidsByAccountForItemRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByAccountForItemRequest other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance) return this;
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (HasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder();
              if (HasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasAccountForItem {
       get { return result.HasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        result.hasAccountForItem = false;
        result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.DefaultInstance;
        return this;
      }
      
      public bool HasFilter {
       get { return result.HasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.HasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static QueryBidsByAccountForItemRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryBidsByAccountForItemResponse : pb::GeneratedMessage<QueryBidsByAccountForItemResponse, QueryBidsByAccountForItemResponse.Builder> {
    private static readonly QueryBidsByAccountForItemResponse defaultInstance = new Builder().BuildPartial();
    public static QueryBidsByAccountForItemResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByAccountForItemResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryBidsByAccountForItemResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByAccountForItemResponse, QueryBidsByAccountForItemResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable; }
    }
    
    public const int BidsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended> bids_ = new pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended>();
    public scg::IList<global::bnet.protocol.exchange.BidExtended> BidsList {
      get { return bids_; }
    }
    public int BidsCount {
      get { return bids_.Count; }
    }
    public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
      return bids_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_ = 0;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
        output.WriteMessage(1, element);
      }
      if (HasTotalCount) {
        output.WriteUInt32(2, TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (HasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByAccountForItemResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByAccountForItemResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryBidsByAccountForItemResponse result = new QueryBidsByAccountForItemResponse();
      
      protected override QueryBidsByAccountForItemResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryBidsByAccountForItemResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Descriptor; }
      }
      
      public override QueryBidsByAccountForItemResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance; }
      }
      
      public override QueryBidsByAccountForItemResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.bids_.MakeReadOnly();
        QueryBidsByAccountForItemResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByAccountForItemResponse) {
          return MergeFrom((QueryBidsByAccountForItemResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByAccountForItemResponse other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance) return this;
        if (other.bids_.Count != 0) {
          base.AddRange(other.bids_, result.bids_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BidExtended.Builder subBuilder = global::bnet.protocol.exchange.BidExtended.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddBids(subBuilder.BuildPartial());
              break;
            }
            case 16: {
              TotalCount = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.BidExtended> BidsList {
        get { return result.bids_; }
      }
      public int BidsCount {
        get { return result.BidsCount; }
      }
      public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
        return result.GetBids(index);
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.bids_[index] = value;
        return this;
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.bids_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.bids_.Add(value);
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.bids_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBids(scg::IEnumerable<global::bnet.protocol.exchange.BidExtended> values) {
        base.AddRange(values, result.bids_);
        return this;
      }
      public Builder ClearBids() {
        result.bids_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.HasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryBidsByAccountForItemResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOrderBooksSummaryRequest : pb::GeneratedMessage<QueryOrderBooksSummaryRequest, QueryOrderBooksSummaryRequest.Builder> {
    private static readonly QueryOrderBooksSummaryRequest defaultInstance = new Builder().BuildPartial();
    public static QueryOrderBooksSummaryRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrderBooksSummaryRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOrderBooksSummaryRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrderBooksSummaryRequest, QueryOrderBooksSummaryRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable; }
    }
    
    public const int HandlesFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookHandle> handles_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookHandle>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookHandle> HandlesList {
      get { return handles_; }
    }
    public int HandlesCount {
      get { return handles_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookHandle GetHandles(int index) {
      return handles_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookHandle element in HandlesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.OrderBookHandle element in HandlesList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookHandle element in HandlesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrderBooksSummaryRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrderBooksSummaryRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOrderBooksSummaryRequest result = new QueryOrderBooksSummaryRequest();
      
      protected override QueryOrderBooksSummaryRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOrderBooksSummaryRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Descriptor; }
      }
      
      public override QueryOrderBooksSummaryRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance; }
      }
      
      public override QueryOrderBooksSummaryRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.handles_.MakeReadOnly();
        QueryOrderBooksSummaryRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrderBooksSummaryRequest) {
          return MergeFrom((QueryOrderBooksSummaryRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrderBooksSummaryRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance) return this;
        if (other.handles_.Count != 0) {
          base.AddRange(other.handles_, result.handles_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBookHandle.Builder subBuilder = global::bnet.protocol.exchange.OrderBookHandle.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddHandles(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookHandle> HandlesList {
        get { return result.handles_; }
      }
      public int HandlesCount {
        get { return result.HandlesCount; }
      }
      public global::bnet.protocol.exchange.OrderBookHandle GetHandles(int index) {
        return result.GetHandles(index);
      }
      public Builder SetHandles(int index, global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.handles_[index] = value;
        return this;
      }
      public Builder SetHandles(int index, global::bnet.protocol.exchange.OrderBookHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.handles_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHandles(global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.handles_.Add(value);
        return this;
      }
      public Builder AddHandles(global::bnet.protocol.exchange.OrderBookHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.handles_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHandles(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookHandle> values) {
        base.AddRange(values, result.handles_);
        return this;
      }
      public Builder ClearHandles() {
        result.handles_.Clear();
        return this;
      }
    }
    static QueryOrderBooksSummaryRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QueryOrderBooksSummaryResponse : pb::GeneratedMessage<QueryOrderBooksSummaryResponse, QueryOrderBooksSummaryResponse.Builder> {
    private static readonly QueryOrderBooksSummaryResponse defaultInstance = new Builder().BuildPartial();
    public static QueryOrderBooksSummaryResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrderBooksSummaryResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QueryOrderBooksSummaryResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrderBooksSummaryResponse, QueryOrderBooksSummaryResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable; }
    }
    
    public const int OrderBooksFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookSummary> orderBooks_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookSummary>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookSummary> OrderBooksList {
      get { return orderBooks_; }
    }
    public int OrderBooksCount {
      get { return orderBooks_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookSummary GetOrderBooks(int index) {
      return orderBooks_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookSummary element in OrderBooksList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.OrderBookSummary element in OrderBooksList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookSummary element in OrderBooksList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrderBooksSummaryResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrderBooksSummaryResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QueryOrderBooksSummaryResponse result = new QueryOrderBooksSummaryResponse();
      
      protected override QueryOrderBooksSummaryResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QueryOrderBooksSummaryResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Descriptor; }
      }
      
      public override QueryOrderBooksSummaryResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance; }
      }
      
      public override QueryOrderBooksSummaryResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.orderBooks_.MakeReadOnly();
        QueryOrderBooksSummaryResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrderBooksSummaryResponse) {
          return MergeFrom((QueryOrderBooksSummaryResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrderBooksSummaryResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance) return this;
        if (other.orderBooks_.Count != 0) {
          base.AddRange(other.orderBooks_, result.orderBooks_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBookSummary.Builder subBuilder = global::bnet.protocol.exchange.OrderBookSummary.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddOrderBooks(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookSummary> OrderBooksList {
        get { return result.orderBooks_; }
      }
      public int OrderBooksCount {
        get { return result.OrderBooksCount; }
      }
      public global::bnet.protocol.exchange.OrderBookSummary GetOrderBooks(int index) {
        return result.GetOrderBooks(index);
      }
      public Builder SetOrderBooks(int index, global::bnet.protocol.exchange.OrderBookSummary value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.orderBooks_[index] = value;
        return this;
      }
      public Builder SetOrderBooks(int index, global::bnet.protocol.exchange.OrderBookSummary.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.orderBooks_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrderBooks(global::bnet.protocol.exchange.OrderBookSummary value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.orderBooks_.Add(value);
        return this;
      }
      public Builder AddOrderBooks(global::bnet.protocol.exchange.OrderBookSummary.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.orderBooks_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrderBooks(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookSummary> values) {
        base.AddRange(values, result.orderBooks_);
        return this;
      }
      public Builder ClearOrderBooks() {
        result.orderBooks_.Clear();
        return this;
      }
    }
    static QueryOrderBooksSummaryResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QuerySettlementsByOrderBookRequest : pb::GeneratedMessage<QuerySettlementsByOrderBookRequest, QuerySettlementsByOrderBookRequest.Builder> {
    private static readonly QuerySettlementsByOrderBookRequest defaultInstance = new Builder().BuildPartial();
    public static QuerySettlementsByOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QuerySettlementsByOrderBookRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QuerySettlementsByOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QuerySettlementsByOrderBookRequest, QuerySettlementsByOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByOrderId filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasFilter) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasFilter) {
        output.WriteMessage(2, Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QuerySettlementsByOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QuerySettlementsByOrderBookRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QuerySettlementsByOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QuerySettlementsByOrderBookRequest result = new QuerySettlementsByOrderBookRequest();
      
      protected override QuerySettlementsByOrderBookRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QuerySettlementsByOrderBookRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.Descriptor; }
      }
      
      public override QuerySettlementsByOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.DefaultInstance; }
      }
      
      public override QuerySettlementsByOrderBookRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        QuerySettlementsByOrderBookRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QuerySettlementsByOrderBookRequest) {
          return MergeFrom((QuerySettlementsByOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QuerySettlementsByOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByOrderId.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder();
              if (HasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasFilter {
       get { return result.HasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        result.hasFilter = false;
        result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance;
        return this;
      }
    }
    static QuerySettlementsByOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class QuerySettlementsByOrderBookResponse : pb::GeneratedMessage<QuerySettlementsByOrderBookResponse, QuerySettlementsByOrderBookResponse.Builder> {
    private static readonly QuerySettlementsByOrderBookResponse defaultInstance = new Builder().BuildPartial();
    public static QuerySettlementsByOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QuerySettlementsByOrderBookResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override QuerySettlementsByOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QuerySettlementsByOrderBookResponse, QuerySettlementsByOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QuerySettlementsByOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int SettlementsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.Settlement> settlements_ = new pbc::PopsicleList<global::bnet.protocol.exchange.Settlement>();
    public scg::IList<global::bnet.protocol.exchange.Settlement> SettlementsList {
      get { return settlements_; }
    }
    public int SettlementsCount {
      get { return settlements_.Count; }
    }
    public global::bnet.protocol.exchange.Settlement GetSettlements(int index) {
      return settlements_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.Settlement element in SettlementsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.Settlement element in SettlementsList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.Settlement element in SettlementsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QuerySettlementsByOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QuerySettlementsByOrderBookResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QuerySettlementsByOrderBookResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<QuerySettlementsByOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      QuerySettlementsByOrderBookResponse result = new QuerySettlementsByOrderBookResponse();
      
      protected override QuerySettlementsByOrderBookResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new QuerySettlementsByOrderBookResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.Descriptor; }
      }
      
      public override QuerySettlementsByOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.DefaultInstance; }
      }
      
      public override QuerySettlementsByOrderBookResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.settlements_.MakeReadOnly();
        QuerySettlementsByOrderBookResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QuerySettlementsByOrderBookResponse) {
          return MergeFrom((QuerySettlementsByOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QuerySettlementsByOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.DefaultInstance) return this;
        if (other.settlements_.Count != 0) {
          base.AddRange(other.settlements_, result.settlements_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Settlement.Builder subBuilder = global::bnet.protocol.exchange.Settlement.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddSettlements(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.Settlement> SettlementsList {
        get { return result.settlements_; }
      }
      public int SettlementsCount {
        get { return result.SettlementsCount; }
      }
      public global::bnet.protocol.exchange.Settlement GetSettlements(int index) {
        return result.GetSettlements(index);
      }
      public Builder SetSettlements(int index, global::bnet.protocol.exchange.Settlement value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.settlements_[index] = value;
        return this;
      }
      public Builder SetSettlements(int index, global::bnet.protocol.exchange.Settlement.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.settlements_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSettlements(global::bnet.protocol.exchange.Settlement value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.settlements_.Add(value);
        return this;
      }
      public Builder AddSettlements(global::bnet.protocol.exchange.Settlement.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.settlements_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSettlements(scg::IEnumerable<global::bnet.protocol.exchange.Settlement> values) {
        base.AddRange(values, result.settlements_);
        return this;
      }
      public Builder ClearSettlements() {
        result.settlements_.Clear();
        return this;
      }
    }
    static QuerySettlementsByOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class SubscribeOrderBookStatusChangeRequest : pb::GeneratedMessage<SubscribeOrderBookStatusChangeRequest, SubscribeOrderBookStatusChangeRequest.Builder> {
    private static readonly SubscribeOrderBookStatusChangeRequest defaultInstance = new Builder().BuildPartial();
    public static SubscribeOrderBookStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeOrderBookStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeOrderBookStatusChangeRequest, SubscribeOrderBookStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_ = 0UL;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int MinPartitionIdFieldNumber = 2;
    private bool hasMinPartitionId;
    private global::bnet.protocol.exchange.PartitionId minPartitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasMinPartitionId {
      get { return hasMinPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MinPartitionId {
      get { return minPartitionId_; }
    }
    
    public const int MaxPartitionIdFieldNumber = 3;
    private bool hasMaxPartitionId;
    private global::bnet.protocol.exchange.PartitionId maxPartitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasMaxPartitionId {
      get { return hasMaxPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
      get { return maxPartitionId_; }
    }
    
    public const int ProgramFieldNumber = 4;
    private bool hasProgram;
    private uint program_ = 0;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private int status_ = 0;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int CurrencyFieldNumber = 6;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SpecialistFieldNumber = 7;
    private bool hasSpecialist;
    private int specialist_ = 0;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int BootstrapFieldNumber = 8;
    private bool hasBootstrap;
    private bool bootstrap_ = false;
    public bool HasBootstrap {
      get { return hasBootstrap; }
    }
    public bool Bootstrap {
      get { return bootstrap_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (!hasMinPartitionId) return false;
        if (!hasMaxPartitionId) return false;
        if (!hasProgram) return false;
        if (!hasStatus) return false;
        if (!MinPartitionId.IsInitialized) return false;
        if (!MaxPartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasObjectId) {
        output.WriteUInt64(1, ObjectId);
      }
      if (HasMinPartitionId) {
        output.WriteMessage(2, MinPartitionId);
      }
      if (HasMaxPartitionId) {
        output.WriteMessage(3, MaxPartitionId);
      }
      if (HasProgram) {
        output.WriteFixed32(4, Program);
      }
      if (HasStatus) {
        output.WriteInt32(5, Status);
      }
      if (HasCurrency) {
        output.WriteString(6, Currency);
      }
      if (HasSpecialist) {
        output.WriteInt32(7, Specialist);
      }
      if (HasBootstrap) {
        output.WriteBool(8, Bootstrap);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        if (HasMinPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MinPartitionId);
        }
        if (HasMaxPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MaxPartitionId);
        }
        if (HasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, Program);
        }
        if (HasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Status);
        }
        if (HasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Currency);
        }
        if (HasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Specialist);
        }
        if (HasBootstrap) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, Bootstrap);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeOrderBookStatusChangeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeOrderBookStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeOrderBookStatusChangeRequest result = new SubscribeOrderBookStatusChangeRequest();
      
      protected override SubscribeOrderBookStatusChangeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeOrderBookStatusChangeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Descriptor; }
      }
      
      public override SubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance; }
      }
      
      public override SubscribeOrderBookStatusChangeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SubscribeOrderBookStatusChangeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeOrderBookStatusChangeRequest) {
          return MergeFrom((SubscribeOrderBookStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeOrderBookStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance) return this;
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasMinPartitionId) {
          MergeMinPartitionId(other.MinPartitionId);
        }
        if (other.HasMaxPartitionId) {
          MergeMaxPartitionId(other.MaxPartitionId);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasBootstrap) {
          Bootstrap = other.Bootstrap;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              ObjectId = input.ReadUInt64();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasMinPartitionId) {
                subBuilder.MergeFrom(MinPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MinPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasMaxPartitionId) {
                subBuilder.MergeFrom(MaxPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MaxPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 37: {
              Program = input.ReadFixed32();
              break;
            }
            case 40: {
              Status = input.ReadInt32();
              break;
            }
            case 50: {
              Currency = input.ReadString();
              break;
            }
            case 56: {
              Specialist = input.ReadInt32();
              break;
            }
            case 64: {
              Bootstrap = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public bool HasObjectId {
        get { return result.HasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasMinPartitionId {
       get { return result.HasMinPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MinPartitionId {
        get { return result.MinPartitionId; }
        set { SetMinPartitionId(value); }
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMinPartitionId = true;
        result.minPartitionId_ = value;
        return this;
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMinPartitionId = true;
        result.minPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasMinPartitionId &&
            result.minPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.minPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.minPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.minPartitionId_ = value;
        }
        result.hasMinPartitionId = true;
        return this;
      }
      public Builder ClearMinPartitionId() {
        result.hasMinPartitionId = false;
        result.minPartitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasMaxPartitionId {
       get { return result.HasMaxPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
        get { return result.MaxPartitionId; }
        set { SetMaxPartitionId(value); }
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = value;
        return this;
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasMaxPartitionId &&
            result.maxPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.maxPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.maxPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.maxPartitionId_ = value;
        }
        result.hasMaxPartitionId = true;
        return this;
      }
      public Builder ClearMaxPartitionId() {
        result.hasMaxPartitionId = false;
        result.maxPartitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasProgram {
        get { return result.HasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.HasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.HasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.HasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasBootstrap {
        get { return result.HasBootstrap; }
      }
      public bool Bootstrap {
        get { return result.Bootstrap; }
        set { SetBootstrap(value); }
      }
      public Builder SetBootstrap(bool value) {
        result.hasBootstrap = true;
        result.bootstrap_ = value;
        return this;
      }
      public Builder ClearBootstrap() {
        result.hasBootstrap = false;
        result.bootstrap_ = false;
        return this;
      }
    }
    static SubscribeOrderBookStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class UnsubscribeOrderBookStatusChangeRequest : pb::GeneratedMessage<UnsubscribeOrderBookStatusChangeRequest, UnsubscribeOrderBookStatusChangeRequest.Builder> {
    private static readonly UnsubscribeOrderBookStatusChangeRequest defaultInstance = new Builder().BuildPartial();
    public static UnsubscribeOrderBookStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UnsubscribeOrderBookStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeOrderBookStatusChangeRequest, UnsubscribeOrderBookStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeOrderBookStatusChangeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeOrderBookStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UnsubscribeOrderBookStatusChangeRequest result = new UnsubscribeOrderBookStatusChangeRequest();
      
      protected override UnsubscribeOrderBookStatusChangeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UnsubscribeOrderBookStatusChangeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Descriptor; }
      }
      
      public override UnsubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeOrderBookStatusChangeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UnsubscribeOrderBookStatusChangeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeOrderBookStatusChangeRequest) {
          return MergeFrom((UnsubscribeOrderBookStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeOrderBookStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance) return this;
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
          }
        }
      }
      
    }
    static UnsubscribeOrderBookStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class SubscribeOrderStatusChangeRequest : pb::GeneratedMessage<SubscribeOrderStatusChangeRequest, SubscribeOrderStatusChangeRequest.Builder> {
    private static readonly SubscribeOrderStatusChangeRequest defaultInstance = new Builder().BuildPartial();
    public static SubscribeOrderStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeOrderStatusChangeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override SubscribeOrderStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeOrderStatusChangeRequest, SubscribeOrderStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderStatusChangeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_ = 0UL;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAgentId) return false;
        if (!hasObjectId) return false;
        if (!AgentId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAgentId) {
        output.WriteMessage(1, AgentId);
      }
      if (HasObjectId) {
        output.WriteUInt64(2, ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (HasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeOrderStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderStatusChangeRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeOrderStatusChangeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeOrderStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      SubscribeOrderStatusChangeRequest result = new SubscribeOrderStatusChangeRequest();
      
      protected override SubscribeOrderStatusChangeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new SubscribeOrderStatusChangeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.Descriptor; }
      }
      
      public override SubscribeOrderStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.DefaultInstance; }
      }
      
      public override SubscribeOrderStatusChangeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        SubscribeOrderStatusChangeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeOrderStatusChangeRequest) {
          return MergeFrom((SubscribeOrderStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeOrderStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              ObjectId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasAgentId {
       get { return result.HasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.HasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeOrderStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class UnsubscribeOrderStatusChangeRequest : pb::GeneratedMessage<UnsubscribeOrderStatusChangeRequest, UnsubscribeOrderStatusChangeRequest.Builder> {
    private static readonly UnsubscribeOrderStatusChangeRequest defaultInstance = new Builder().BuildPartial();
    public static UnsubscribeOrderStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeOrderStatusChangeRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override UnsubscribeOrderStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeOrderStatusChangeRequest, UnsubscribeOrderStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderStatusChangeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_ = 0UL;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAgentId) return false;
        if (!hasObjectId) return false;
        if (!AgentId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasAgentId) {
        output.WriteMessage(1, AgentId);
      }
      if (HasObjectId) {
        output.WriteUInt64(2, ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (HasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderStatusChangeRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeOrderStatusChangeRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeOrderStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      UnsubscribeOrderStatusChangeRequest result = new UnsubscribeOrderStatusChangeRequest();
      
      protected override UnsubscribeOrderStatusChangeRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new UnsubscribeOrderStatusChangeRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.Descriptor; }
      }
      
      public override UnsubscribeOrderStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeOrderStatusChangeRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        UnsubscribeOrderStatusChangeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeOrderStatusChangeRequest) {
          return MergeFrom((UnsubscribeOrderStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeOrderStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.DefaultInstance) return this;
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              ObjectId = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasAgentId {
       get { return result.HasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.HasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeOrderStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class ClaimRequest : pb::GeneratedMessage<ClaimRequest, ClaimRequest.Builder> {
    private static readonly ClaimRequest defaultInstance = new Builder().BuildPartial();
    public static ClaimRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClaimRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ClaimRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClaimRequest, ClaimRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private uint orderId_ = 0;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public uint OrderId {
      get { return orderId_; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOrderId) {
        output.WriteUInt32(2, OrderId);
      }
      if (HasBnetAccount) {
        output.WriteMessage(3, BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, OrderId);
        }
        if (HasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClaimRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClaimRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClaimRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ClaimRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ClaimRequest result = new ClaimRequest();
      
      protected override ClaimRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ClaimRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.ClaimRequest.Descriptor; }
      }
      
      public override ClaimRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance; }
      }
      
      public override ClaimRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ClaimRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClaimRequest) {
          return MergeFrom((ClaimRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClaimRequest other) {
        if (other == global::bnet.protocol.exchange.ClaimRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              OrderId = input.ReadUInt32();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.HasOrderId; }
      }
      public uint OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(uint value) {
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        result.hasOrderId = false;
        result.orderId_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.HasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static ClaimRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class CancelRequest : pb::GeneratedMessage<CancelRequest, CancelRequest.Builder> {
    private static readonly CancelRequest defaultInstance = new Builder().BuildPartial();
    public static CancelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override CancelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CancelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelRequest, CancelRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private uint orderId_ = 0;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public uint OrderId {
      get { return orderId_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_ = 0;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int BnetAccountFieldNumber = 4;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasOrderId) {
        output.WriteUInt32(2, OrderId);
      }
      if (HasReason) {
        output.WriteUInt32(3, Reason);
      }
      if (HasBnetAccount) {
        output.WriteMessage(4, BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, OrderId);
        }
        if (HasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        if (HasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CancelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<CancelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      CancelRequest result = new CancelRequest();
      
      protected override CancelRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new CancelRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CancelRequest.Descriptor; }
      }
      
      public override CancelRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CancelRequest.DefaultInstance; }
      }
      
      public override CancelRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        CancelRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelRequest) {
          return MergeFrom((CancelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelRequest other) {
        if (other == global::bnet.protocol.exchange.CancelRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              OrderId = input.ReadUInt32();
              break;
            }
            case 24: {
              Reason = input.ReadUInt32();
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (HasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.HasOrderId; }
      }
      public uint OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(uint value) {
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        result.hasOrderId = false;
        result.orderId_ = 0;
        return this;
      }
      
      public bool HasReason {
        get { return result.HasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.HasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        result.hasBnetAccount = false;
        result.bnetAccount_ = global::bnet.protocol.EntityId.DefaultInstance;
        return this;
      }
    }
    static CancelRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class GetConfigurationRequest : pb::GeneratedMessage<GetConfigurationRequest, GetConfigurationRequest.Builder> {
    private static readonly GetConfigurationRequest defaultInstance = new Builder().BuildPartial();
    public static GetConfigurationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConfigurationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetConfigurationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConfigurationRequest, GetConfigurationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_ = 0;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasProgram) {
        output.WriteFixed32(1, Program);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetConfigurationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConfigurationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConfigurationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GetConfigurationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetConfigurationRequest result = new GetConfigurationRequest();
      
      protected override GetConfigurationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetConfigurationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetConfigurationRequest.Descriptor; }
      }
      
      public override GetConfigurationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance; }
      }
      
      public override GetConfigurationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetConfigurationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConfigurationRequest) {
          return MergeFrom((GetConfigurationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConfigurationRequest other) {
        if (other == global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance) return this;
        if (other.HasProgram) {
          Program = other.Program;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 13: {
              Program = input.ReadFixed32();
              break;
            }
          }
        }
      }
      
      
      public bool HasProgram {
        get { return result.HasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
    }
    static GetConfigurationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class GetConfigurationResponse : pb::GeneratedMessage<GetConfigurationResponse, GetConfigurationResponse.Builder> {
    private static readonly GetConfigurationResponse defaultInstance = new Builder().BuildPartial();
    public static GetConfigurationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConfigurationResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetConfigurationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConfigurationResponse, GetConfigurationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable; }
    }
    
    public const int ConfigsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.SpecialistConfig> configs_ = new pbc::PopsicleList<global::bnet.protocol.exchange.SpecialistConfig>();
    public scg::IList<global::bnet.protocol.exchange.SpecialistConfig> ConfigsList {
      get { return configs_; }
    }
    public int ConfigsCount {
      get { return configs_.Count; }
    }
    public global::bnet.protocol.exchange.SpecialistConfig GetConfigs(int index) {
      return configs_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.SpecialistConfig element in ConfigsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.SpecialistConfig element in ConfigsList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.SpecialistConfig element in ConfigsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetConfigurationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConfigurationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConfigurationResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GetConfigurationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetConfigurationResponse result = new GetConfigurationResponse();
      
      protected override GetConfigurationResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetConfigurationResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetConfigurationResponse.Descriptor; }
      }
      
      public override GetConfigurationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance; }
      }
      
      public override GetConfigurationResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.configs_.MakeReadOnly();
        GetConfigurationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConfigurationResponse) {
          return MergeFrom((GetConfigurationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConfigurationResponse other) {
        if (other == global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance) return this;
        if (other.configs_.Count != 0) {
          base.AddRange(other.configs_, result.configs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.SpecialistConfig.Builder subBuilder = global::bnet.protocol.exchange.SpecialistConfig.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddConfigs(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.SpecialistConfig> ConfigsList {
        get { return result.configs_; }
      }
      public int ConfigsCount {
        get { return result.ConfigsCount; }
      }
      public global::bnet.protocol.exchange.SpecialistConfig GetConfigs(int index) {
        return result.GetConfigs(index);
      }
      public Builder SetConfigs(int index, global::bnet.protocol.exchange.SpecialistConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.configs_[index] = value;
        return this;
      }
      public Builder SetConfigs(int index, global::bnet.protocol.exchange.SpecialistConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.configs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConfigs(global::bnet.protocol.exchange.SpecialistConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.configs_.Add(value);
        return this;
      }
      public Builder AddConfigs(global::bnet.protocol.exchange.SpecialistConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.configs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConfigs(scg::IEnumerable<global::bnet.protocol.exchange.SpecialistConfig> values) {
        base.AddRange(values, result.configs_);
        return this;
      }
      public Builder ClearConfigs() {
        result.configs_.Clear();
        return this;
      }
    }
    static GetConfigurationResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class GetOfferFeeEstimationRequest : pb::GeneratedMessage<GetOfferFeeEstimationRequest, GetOfferFeeEstimationRequest.Builder> {
    private static readonly GetOfferFeeEstimationRequest defaultInstance = new Builder().BuildPartial();
    public static GetOfferFeeEstimationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOfferFeeEstimationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetOfferFeeEstimationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOfferFeeEstimationRequest, GetOfferFeeEstimationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::bnet.protocol.exchange.FeeEstimationData data_ = global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance;
    public bool HasData {
      get { return hasData; }
    }
    public global::bnet.protocol.exchange.FeeEstimationData Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasData) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Data.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasData) {
        output.WriteMessage(2, Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasData) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOfferFeeEstimationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GetOfferFeeEstimationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetOfferFeeEstimationRequest result = new GetOfferFeeEstimationRequest();
      
      protected override GetOfferFeeEstimationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetOfferFeeEstimationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Descriptor; }
      }
      
      public override GetOfferFeeEstimationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance; }
      }
      
      public override GetOfferFeeEstimationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetOfferFeeEstimationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOfferFeeEstimationRequest) {
          return MergeFrom((GetOfferFeeEstimationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOfferFeeEstimationRequest other) {
        if (other == global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.FeeEstimationData.Builder subBuilder = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder();
              if (HasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasData {
       get { return result.HasData; }
      }
      public global::bnet.protocol.exchange.FeeEstimationData Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasData &&
            result.data_ != global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) {
            result.data_ = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        result.hasData = false;
        result.data_ = global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance;
        return this;
      }
    }
    static GetOfferFeeEstimationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class GetBidFeeEstimationRequest : pb::GeneratedMessage<GetBidFeeEstimationRequest, GetBidFeeEstimationRequest.Builder> {
    private static readonly GetBidFeeEstimationRequest defaultInstance = new Builder().BuildPartial();
    public static GetBidFeeEstimationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBidFeeEstimationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetBidFeeEstimationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBidFeeEstimationRequest, GetBidFeeEstimationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::bnet.protocol.exchange.FeeEstimationData data_ = global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance;
    public bool HasData {
      get { return hasData; }
    }
    public global::bnet.protocol.exchange.FeeEstimationData Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasData) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Data.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasPartitionId) {
        output.WriteMessage(1, PartitionId);
      }
      if (HasData) {
        output.WriteMessage(2, Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (HasData) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBidFeeEstimationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBidFeeEstimationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GetBidFeeEstimationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetBidFeeEstimationRequest result = new GetBidFeeEstimationRequest();
      
      protected override GetBidFeeEstimationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetBidFeeEstimationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Descriptor; }
      }
      
      public override GetBidFeeEstimationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance; }
      }
      
      public override GetBidFeeEstimationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetBidFeeEstimationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBidFeeEstimationRequest) {
          return MergeFrom((GetBidFeeEstimationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBidFeeEstimationRequest other) {
        if (other == global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance) return this;
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (HasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.FeeEstimationData.Builder subBuilder = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder();
              if (HasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
      }
      
      
      public bool HasPartitionId {
       get { return result.HasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        result.hasPartitionId = false;
        result.partitionId_ = global::bnet.protocol.exchange.PartitionId.DefaultInstance;
        return this;
      }
      
      public bool HasData {
       get { return result.HasData; }
      }
      public global::bnet.protocol.exchange.FeeEstimationData Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasData &&
            result.data_ != global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) {
            result.data_ = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        result.hasData = false;
        result.data_ = global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance;
        return this;
      }
    }
    static GetBidFeeEstimationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class GetFeeEstimationResponse : pb::GeneratedMessage<GetFeeEstimationResponse, GetFeeEstimationResponse.Builder> {
    private static readonly GetFeeEstimationResponse defaultInstance = new Builder().BuildPartial();
    public static GetFeeEstimationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFeeEstimationResponse DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GetFeeEstimationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFeeEstimationResponse, GetFeeEstimationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable; }
    }
    
    public const int FeeAmountFieldNumber = 1;
    private bool hasFeeAmount;
    private ulong feeAmount_ = 0UL;
    public bool HasFeeAmount {
      get { return hasFeeAmount; }
    }
    public ulong FeeAmount {
      get { return feeAmount_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasFeeAmount) {
        output.WriteUInt64(1, FeeAmount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, FeeAmount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFeeEstimationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFeeEstimationResponse prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GetFeeEstimationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GetFeeEstimationResponse result = new GetFeeEstimationResponse();
      
      protected override GetFeeEstimationResponse MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GetFeeEstimationResponse();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetFeeEstimationResponse.Descriptor; }
      }
      
      public override GetFeeEstimationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance; }
      }
      
      public override GetFeeEstimationResponse BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GetFeeEstimationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFeeEstimationResponse) {
          return MergeFrom((GetFeeEstimationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFeeEstimationResponse other) {
        if (other == global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance) return this;
        if (other.HasFeeAmount) {
          FeeAmount = other.FeeAmount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              FeeAmount = input.ReadUInt64();
              break;
            }
          }
        }
      }
      
      
      public bool HasFeeAmount {
        get { return result.HasFeeAmount; }
      }
      public ulong FeeAmount {
        get { return result.FeeAmount; }
        set { SetFeeAmount(value); }
      }
      public Builder SetFeeAmount(ulong value) {
        result.hasFeeAmount = true;
        result.feeAmount_ = value;
        return this;
      }
      public Builder ClearFeeAmount() {
        result.hasFeeAmount = false;
        result.feeAmount_ = 0UL;
        return this;
      }
    }
    static GetFeeEstimationResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class OrderBookNotificationRequest : pb::GeneratedMessage<OrderBookNotificationRequest, OrderBookNotificationRequest.Builder> {
    private static readonly OrderBookNotificationRequest defaultInstance = new Builder().BuildPartial();
    public static OrderBookNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookNotificationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OrderBookNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookNotificationRequest, OrderBookNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable; }
    }
    
    public const int NotificationsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookNotification> notifications_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookNotification>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookNotification> NotificationsList {
      get { return notifications_; }
    }
    public int NotificationsCount {
      get { return notifications_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookNotification GetNotifications(int index) {
      return notifications_[index];
    }
    
    public const int BootStrapLastFieldNumber = 2;
    private bool hasBootStrapLast;
    private bool bootStrapLast_ = false;
    public bool HasBootStrapLast {
      get { return hasBootStrapLast; }
    }
    public bool BootStrapLast {
      get { return bootStrapLast_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookNotification element in NotificationsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.exchange.OrderBookNotification element in NotificationsList) {
        output.WriteMessage(1, element);
      }
      if (HasBootStrapLast) {
        output.WriteBool(2, BootStrapLast);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookNotification element in NotificationsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (HasBootStrapLast) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, BootStrapLast);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookNotificationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OrderBookNotificationRequest result = new OrderBookNotificationRequest();
      
      protected override OrderBookNotificationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OrderBookNotificationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookNotificationRequest.Descriptor; }
      }
      
      public override OrderBookNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance; }
      }
      
      public override OrderBookNotificationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.notifications_.MakeReadOnly();
        OrderBookNotificationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookNotificationRequest) {
          return MergeFrom((OrderBookNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance) return this;
        if (other.notifications_.Count != 0) {
          base.AddRange(other.notifications_, result.notifications_);
        }
        if (other.HasBootStrapLast) {
          BootStrapLast = other.BootStrapLast;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBookNotification.Builder subBuilder = global::bnet.protocol.exchange.OrderBookNotification.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddNotifications(subBuilder.BuildPartial());
              break;
            }
            case 16: {
              BootStrapLast = input.ReadBool();
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookNotification> NotificationsList {
        get { return result.notifications_; }
      }
      public int NotificationsCount {
        get { return result.NotificationsCount; }
      }
      public global::bnet.protocol.exchange.OrderBookNotification GetNotifications(int index) {
        return result.GetNotifications(index);
      }
      public Builder SetNotifications(int index, global::bnet.protocol.exchange.OrderBookNotification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.notifications_[index] = value;
        return this;
      }
      public Builder SetNotifications(int index, global::bnet.protocol.exchange.OrderBookNotification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.notifications_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNotifications(global::bnet.protocol.exchange.OrderBookNotification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.notifications_.Add(value);
        return this;
      }
      public Builder AddNotifications(global::bnet.protocol.exchange.OrderBookNotification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.notifications_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNotifications(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookNotification> values) {
        base.AddRange(values, result.notifications_);
        return this;
      }
      public Builder ClearNotifications() {
        result.notifications_.Clear();
        return this;
      }
      
      public bool HasBootStrapLast {
        get { return result.HasBootStrapLast; }
      }
      public bool BootStrapLast {
        get { return result.BootStrapLast; }
        set { SetBootStrapLast(value); }
      }
      public Builder SetBootStrapLast(bool value) {
        result.hasBootStrapLast = true;
        result.bootStrapLast_ = value;
        return this;
      }
      public Builder ClearBootStrapLast() {
        result.hasBootStrapLast = false;
        result.bootStrapLast_ = false;
        return this;
      }
    }
    static OrderBookNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class OfferNotificationRequest : pb::GeneratedMessage<OfferNotificationRequest, OfferNotificationRequest.Builder> {
    private static readonly OfferNotificationRequest defaultInstance = new Builder().BuildPartial();
    public static OfferNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferNotificationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override OfferNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferNotificationRequest, OfferNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.OfferExtended offer_ = global::bnet.protocol.exchange.OfferExtended.DefaultInstance;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.OfferExtended Offer {
      get { return offer_; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private uint event_ = 0;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public uint Event {
      get { return event_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!hasEvent) return false;
        if (!Offer.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasOffer) {
        output.WriteMessage(1, Offer);
      }
      if (HasEvent) {
        output.WriteUInt32(2, Event);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (HasEvent) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Event);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferNotificationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<OfferNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      OfferNotificationRequest result = new OfferNotificationRequest();
      
      protected override OfferNotificationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new OfferNotificationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferNotificationRequest.Descriptor; }
      }
      
      public override OfferNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance; }
      }
      
      public override OfferNotificationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        OfferNotificationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferNotificationRequest) {
          return MergeFrom((OfferNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance) return this;
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OfferExtended.Builder subBuilder = global::bnet.protocol.exchange.OfferExtended.CreateBuilder();
              if (HasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              Event = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasOffer {
       get { return result.HasOffer; }
      }
      public global::bnet.protocol.exchange.OfferExtended Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasOffer &&
            result.offer_ != global::bnet.protocol.exchange.OfferExtended.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.OfferExtended.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        result.hasOffer = false;
        result.offer_ = global::bnet.protocol.exchange.OfferExtended.DefaultInstance;
        return this;
      }
      
      public bool HasEvent {
        get { return result.HasEvent; }
      }
      public uint Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(uint value) {
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        result.hasEvent = false;
        result.event_ = 0;
        return this;
      }
    }
    static OfferNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  public sealed partial class BidNotificationRequest : pb::GeneratedMessage<BidNotificationRequest, BidNotificationRequest.Builder> {
    private static readonly BidNotificationRequest defaultInstance = new Builder().BuildPartial();
    public static BidNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidNotificationRequest DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override BidNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidNotificationRequest, BidNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.BidExtended bid_ = global::bnet.protocol.exchange.BidExtended.DefaultInstance;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.BidExtended Bid {
      get { return bid_; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private uint event_ = 0;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public uint Event {
      get { return event_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!hasEvent) return false;
        if (!Bid.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasBid) {
        output.WriteMessage(1, Bid);
      }
      if (HasEvent) {
        output.WriteUInt32(2, Event);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (HasEvent) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Event);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidNotificationRequest prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<BidNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      BidNotificationRequest result = new BidNotificationRequest();
      
      protected override BidNotificationRequest MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new BidNotificationRequest();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidNotificationRequest.Descriptor; }
      }
      
      public override BidNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance; }
      }
      
      public override BidNotificationRequest BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        BidNotificationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidNotificationRequest) {
          return MergeFrom((BidNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance) return this;
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BidExtended.Builder subBuilder = global::bnet.protocol.exchange.BidExtended.CreateBuilder();
              if (HasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              Event = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasBid {
       get { return result.HasBid; }
      }
      public global::bnet.protocol.exchange.BidExtended Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        if (result.HasBid &&
            result.bid_ != global::bnet.protocol.exchange.BidExtended.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.BidExtended.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        result.hasBid = false;
        result.bid_ = global::bnet.protocol.exchange.BidExtended.DefaultInstance;
        return this;
      }
      
      public bool HasEvent {
        get { return result.HasEvent; }
      }
      public uint Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(uint value) {
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        result.hasEvent = false;
        result.event_ = 0;
        return this;
      }
    }
    static BidNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  public abstract class ExchangeService : pb::IService {
    public abstract void CreateOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CreateOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.CreateOrderBookResponse> done);
    public abstract void PlaceOfferOnOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse> done);
    public abstract void PlaceOfferCreateOrderBookIfNeeded(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse> done);
    public abstract void PlaceBidOnOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse> done);
    public abstract void PlaceBidCreateOrderBookIfNeeded(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse> done);
    public abstract void QueryOffersByOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOffersByOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse> done);
    public abstract void QueryBidsByOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryBidsByOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse> done);
    public abstract void QueryOffersByAccountForItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse> done);
    public abstract void QueryBidsByAccountForItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse> done);
    public abstract void QueryOrderBooksSummary(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse> done);
    public abstract void QuerySettlementsByOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse> done);
    public abstract void ReportAuthorize(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportSettle(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportSettleRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportCancel(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportCancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SubscribeOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SubscribeOrderStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeOrderStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetPaymentMethods(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest request,
        global::System.Action<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse> done);
    public abstract void ClaimBidItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimBidMoney(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimOfferItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimOfferMoney(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void CancelBid(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void CancelOffer(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetConfiguration(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetConfigurationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetConfigurationResponse> done);
    public abstract void GetBidFeeEstimation(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetBidFeeEstimationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done);
    public abstract void GetOfferFeeEstimation(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetOfferFeeEstimationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ExchangeService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.CreateOrderBook(controller, (global::bnet.protocol.exchange.CreateOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.CreateOrderBookResponse>(
              done));
          return;
        case 1:
          this.PlaceOfferOnOrderBook(controller, (global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse>(
              done));
          return;
        case 2:
          this.PlaceOfferCreateOrderBookIfNeeded(controller, (global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse>(
              done));
          return;
        case 3:
          this.PlaceBidOnOrderBook(controller, (global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse>(
              done));
          return;
        case 4:
          this.PlaceBidCreateOrderBookIfNeeded(controller, (global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse>(
              done));
          return;
        case 5:
          this.QueryOffersByOrderBook(controller, (global::bnet.protocol.exchange.QueryOffersByOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse>(
              done));
          return;
        case 6:
          this.QueryBidsByOrderBook(controller, (global::bnet.protocol.exchange.QueryBidsByOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse>(
              done));
          return;
        case 7:
          this.QueryOffersByAccountForItem(controller, (global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse>(
              done));
          return;
        case 8:
          this.QueryBidsByAccountForItem(controller, (global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse>(
              done));
          return;
        case 9:
          this.QueryOrderBooksSummary(controller, (global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse>(
              done));
          return;
        case 10:
          this.QuerySettlementsByOrderBook(controller, (global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse>(
              done));
          return;
        case 11:
          this.ReportAuthorize(controller, (global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 12:
          this.ReportSettle(controller, (global::bnet.protocol.exchange_object_provider.ReportSettleRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 13:
          this.ReportCancel(controller, (global::bnet.protocol.exchange_object_provider.ReportCancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 14:
          this.SubscribeOrderBookStatusChange(controller, (global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 15:
          this.UnsubscribeOrderBookStatusChange(controller, (global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 16:
          this.SubscribeOrderStatusChange(controller, (global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 17:
          this.UnsubscribeOrderStatusChange(controller, (global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 18:
          this.GetPaymentMethods(controller, (global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse>(
              done));
          return;
        case 19:
          this.ClaimBidItem(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 20:
          this.ClaimBidMoney(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 21:
          this.ClaimOfferItem(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 22:
          this.ClaimOfferMoney(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 23:
          this.CancelBid(controller, (global::bnet.protocol.exchange.CancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 24:
          this.CancelOffer(controller, (global::bnet.protocol.exchange.CancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 25:
          this.GetConfiguration(controller, (global::bnet.protocol.exchange.GetConfigurationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetConfigurationResponse>(
              done));
          return;
        case 26:
          this.GetBidFeeEstimation(controller, (global::bnet.protocol.exchange.GetBidFeeEstimationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse>(
              done));
          return;
        case 27:
          this.GetOfferFeeEstimation(controller, (global::bnet.protocol.exchange.GetOfferFeeEstimationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance;
        case 8:
          return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance;
        case 9:
          return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance;
        case 10:
          return global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest.DefaultInstance;
        case 11:
          return global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.DefaultInstance;
        case 12:
          return global::bnet.protocol.exchange_object_provider.ReportSettleRequest.DefaultInstance;
        case 13:
          return global::bnet.protocol.exchange_object_provider.ReportCancelRequest.DefaultInstance;
        case 14:
          return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance;
        case 15:
          return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance;
        case 16:
          return global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest.DefaultInstance;
        case 17:
          return global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest.DefaultInstance;
        case 18:
          return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.DefaultInstance;
        case 19:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 20:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 21:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 22:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 23:
          return global::bnet.protocol.exchange.CancelRequest.DefaultInstance;
        case 24:
          return global::bnet.protocol.exchange.CancelRequest.DefaultInstance;
        case 25:
          return global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance;
        case 26:
          return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance;
        case 27:
          return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance;
        case 5:
          return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance;
        case 6:
          return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance;
        case 7:
          return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance;
        case 8:
          return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance;
        case 9:
          return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance;
        case 10:
          return global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.DefaultInstance;
        case 11:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 12:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 13:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 14:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 15:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 16:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 17:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 18:
          return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance;
        case 19:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 20:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 21:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 22:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 23:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 24:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 25:
          return global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance;
        case 26:
          return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance;
        case 27:
          return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    public class Stub : global::bnet.protocol.exchange.ExchangeService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void CreateOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CreateOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.CreateOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceOfferOnOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceOfferCreateOrderBookIfNeeded(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder>(done, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance));
      }
      
      public override void PlaceBidOnOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceBidCreateOrderBookIfNeeded(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder>(done, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance));
      }
      
      public override void QueryOffersByOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOffersByOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance));
      }
      
      public override void QueryBidsByOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryBidsByOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance));
      }
      
      public override void QueryOffersByAccountForItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder>(done, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance));
      }
      
      public override void QueryBidsByAccountForItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder>(done, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance));
      }
      
      public override void QueryOrderBooksSummary(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder>(done, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance));
      }
      
      public override void QuerySettlementsByOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QuerySettlementsByOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse, global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.QuerySettlementsByOrderBookResponse.DefaultInstance));
      }
      
      public override void ReportAuthorize(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[11],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportSettle(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportSettleRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[12],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportCancel(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportCancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[13],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SubscribeOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[14],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[15],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SubscribeOrderStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.SubscribeOrderStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[16],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeOrderStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.UnsubscribeOrderStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[17],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetPaymentMethods(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest request,
          global::System.Action<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse> done) {
        channel.CallMethod(Descriptor.Methods[18],
            controller, request, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.Builder>(done, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance));
      }
      
      public override void ClaimBidItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[19],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimBidMoney(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[20],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimOfferItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[21],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimOfferMoney(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[22],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void CancelBid(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[23],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void CancelOffer(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[24],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetConfiguration(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetConfigurationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetConfigurationResponse> done) {
        channel.CallMethod(Descriptor.Methods[25],
            controller, request, global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder>(done, global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance));
      }
      
      public override void GetBidFeeEstimation(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetBidFeeEstimationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done) {
        channel.CallMethod(Descriptor.Methods[26],
            controller, request, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(done, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance));
      }
      
      public override void GetOfferFeeEstimation(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetOfferFeeEstimationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done) {
        channel.CallMethod(Descriptor.Methods[27],
            controller, request, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(done, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance));
      }
    }
  }
  public abstract class ExchangeNotify : pb::IService {
    public abstract void NotifyOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.OrderBookNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyOfferStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.OfferNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyBidStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.BidNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ExchangeService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyOrderBookStatusChange(controller, (global::bnet.protocol.exchange.OrderBookNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyOfferStatusChange(controller, (global::bnet.protocol.exchange.OfferNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyBidStatusChange(controller, (global::bnet.protocol.exchange.BidNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    public class Stub : global::bnet.protocol.exchange.ExchangeNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.OrderBookNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyOfferStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.OfferNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyBidStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.BidNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}
