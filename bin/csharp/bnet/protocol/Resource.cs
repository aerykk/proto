// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol {
  
  public static partial class Resource {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_Payload__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Payload, global::bnet.protocol.Payload.Builder> internal__static_bnet_protocol_Payload__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_Dependency__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Dependency, global::bnet.protocol.Dependency.Builder> internal__static_bnet_protocol_Dependency__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_Metadata__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Metadata, global::bnet.protocol.Metadata.Builder> internal__static_bnet_protocol_Metadata__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_IndexEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.IndexEntry, global::bnet.protocol.IndexEntry.Builder> internal__static_bnet_protocol_IndexEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_ResourceIndex__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ResourceIndex, global::bnet.protocol.ResourceIndex.Builder> internal__static_bnet_protocol_ResourceIndex__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Resource() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChtsaWIvcHJvdG9jb2wvcmVzb3VyY2UucHJvdG8SDWJuZXQucHJvdG9jb2wa" + 
          "IWxpYi9wcm90b2NvbC9jb250ZW50X2hhbmRsZS5wcm90bxocbGliL3Byb3Rv" + 
          "Y29sL2F0dHJpYnV0ZS5wcm90byJoCgdQYXlsb2FkEhYKDmNvbnRlbnRfaGFu" + 
          "ZGxlGAEgAigJEhEKCWRhdGFfc2l6ZRgCIAIoDRIyCgZjdXN0b20YAyADKAsy" + 
          "Ii5ibmV0LnByb3RvY29sLmF0dHJpYnV0ZS5BdHRyaWJ1dGUiWQoKRGVwZW5k" + 
          "ZW5jeRIXCg9yZXNvdXJjZV9oYW5kbGUYASACKAkSMgoGY3VzdG9tGAIgAygL" + 
          "MiIuYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUuQXR0cmlidXRlImIKCE1ldGFk" + 
          "YXRhEi0KCmRlcGVuZGVuY3kYASADKAsyGS5ibmV0LnByb3RvY29sLkRlcGVu" + 
          "ZGVuY3kSJwoHcGF5bG9hZBgCIAMoCzIWLmJuZXQucHJvdG9jb2wuUGF5bG9h" + 
          "ZCInCgpJbmRleEVudHJ5EgwKBG5hbWUYASACKAkSCwoDdXJsGAIgAigJIjkK" + 
          "DVJlc291cmNlSW5kZXgSKAoFZW50cnkYASADKAsyGS5ibmV0LnByb3RvY29s" + 
          "LkluZGV4RW50cnk=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_Payload__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_Payload__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Payload, global::bnet.protocol.Payload.Builder>(internal__static_bnet_protocol_Payload__Descriptor,
                new string[] { "ContentHandle", "DataSize", "Custom", });
        internal__static_bnet_protocol_Dependency__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_Dependency__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Dependency, global::bnet.protocol.Dependency.Builder>(internal__static_bnet_protocol_Dependency__Descriptor,
                new string[] { "ResourceHandle", "Custom", });
        internal__static_bnet_protocol_Metadata__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_Metadata__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.Metadata, global::bnet.protocol.Metadata.Builder>(internal__static_bnet_protocol_Metadata__Descriptor,
                new string[] { "Dependency", "Payload", });
        internal__static_bnet_protocol_IndexEntry__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_IndexEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.IndexEntry, global::bnet.protocol.IndexEntry.Builder>(internal__static_bnet_protocol_IndexEntry__Descriptor,
                new string[] { "Name", "Url", });
        internal__static_bnet_protocol_ResourceIndex__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_ResourceIndex__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.ResourceIndex, global::bnet.protocol.ResourceIndex.Builder>(internal__static_bnet_protocol_ResourceIndex__Descriptor,
                new string[] { "Entry", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Proto.ContentHandle.Descriptor, 
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class Payload : pb::GeneratedMessage<Payload, Payload.Builder> {
    private static readonly Payload defaultInstance = new Builder().BuildPartial();
    public static Payload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Payload DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Payload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Payload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Payload, Payload.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Payload__FieldAccessorTable; }
    }
    
    public const int ContentHandleFieldNumber = 1;
    private bool hasContentHandle;
    private string contentHandle_ = "";
    public bool HasContentHandle {
      get { return hasContentHandle; }
    }
    public string ContentHandle {
      get { return contentHandle_; }
    }
    
    public const int DataSizeFieldNumber = 2;
    private bool hasDataSize;
    private uint dataSize_ = 0;
    public bool HasDataSize {
      get { return hasDataSize; }
    }
    public uint DataSize {
      get { return dataSize_; }
    }
    
    public const int CustomFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> custom_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> CustomList {
      get { return custom_; }
    }
    public int CustomCount {
      get { return custom_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetCustom(int index) {
      return custom_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasContentHandle) return false;
        if (!hasDataSize) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasContentHandle) {
        output.WriteString(1, ContentHandle);
      }
      if (HasDataSize) {
        output.WriteUInt32(2, DataSize);
      }
      foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
        output.WriteMessage(3, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasContentHandle) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ContentHandle);
        }
        if (HasDataSize) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, DataSize);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Payload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Payload ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Payload prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Payload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Payload result = new Payload();
      
      protected override Payload MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Payload();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.Payload.Descriptor; }
      }
      
      public override Payload DefaultInstanceForType {
        get { return global::bnet.protocol.Payload.DefaultInstance; }
      }
      
      public override Payload BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.custom_.MakeReadOnly();
        Payload returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Payload) {
          return MergeFrom((Payload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Payload other) {
        if (other == global::bnet.protocol.Payload.DefaultInstance) return this;
        if (other.HasContentHandle) {
          ContentHandle = other.ContentHandle;
        }
        if (other.HasDataSize) {
          DataSize = other.DataSize;
        }
        if (other.custom_.Count != 0) {
          base.AddRange(other.custom_, result.custom_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              ContentHandle = input.ReadString();
              break;
            }
            case 16: {
              DataSize = input.ReadUInt32();
              break;
            }
            case 26: {
              global::bnet.protocol.attribute.Attribute.Builder subBuilder = global::bnet.protocol.attribute.Attribute.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddCustom(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public bool HasContentHandle {
        get { return result.HasContentHandle; }
      }
      public string ContentHandle {
        get { return result.ContentHandle; }
        set { SetContentHandle(value); }
      }
      public Builder SetContentHandle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasContentHandle = true;
        result.contentHandle_ = value;
        return this;
      }
      public Builder ClearContentHandle() {
        result.hasContentHandle = false;
        result.contentHandle_ = "";
        return this;
      }
      
      public bool HasDataSize {
        get { return result.HasDataSize; }
      }
      public uint DataSize {
        get { return result.DataSize; }
        set { SetDataSize(value); }
      }
      public Builder SetDataSize(uint value) {
        result.hasDataSize = true;
        result.dataSize_ = value;
        return this;
      }
      public Builder ClearDataSize() {
        result.hasDataSize = false;
        result.dataSize_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> CustomList {
        get { return result.custom_; }
      }
      public int CustomCount {
        get { return result.CustomCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetCustom(int index) {
        return result.GetCustom(index);
      }
      public Builder SetCustom(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.custom_[index] = value;
        return this;
      }
      public Builder SetCustom(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.custom_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCustom(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.custom_.Add(value);
        return this;
      }
      public Builder AddCustom(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.custom_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCustom(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.custom_);
        return this;
      }
      public Builder ClearCustom() {
        result.custom_.Clear();
        return this;
      }
    }
    static Payload() {
      object.ReferenceEquals(global::bnet.protocol.Resource.Descriptor, null);
    }
  }
  
  public sealed partial class Dependency : pb::GeneratedMessage<Dependency, Dependency.Builder> {
    private static readonly Dependency defaultInstance = new Builder().BuildPartial();
    public static Dependency DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Dependency DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Dependency ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Dependency__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Dependency, Dependency.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Dependency__FieldAccessorTable; }
    }
    
    public const int ResourceHandleFieldNumber = 1;
    private bool hasResourceHandle;
    private string resourceHandle_ = "";
    public bool HasResourceHandle {
      get { return hasResourceHandle; }
    }
    public string ResourceHandle {
      get { return resourceHandle_; }
    }
    
    public const int CustomFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> custom_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> CustomList {
      get { return custom_; }
    }
    public int CustomCount {
      get { return custom_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetCustom(int index) {
      return custom_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasResourceHandle) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasResourceHandle) {
        output.WriteString(1, ResourceHandle);
      }
      foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
        output.WriteMessage(2, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasResourceHandle) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ResourceHandle);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in CustomList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Dependency ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dependency ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dependency ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dependency ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dependency ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dependency ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Dependency ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Dependency ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Dependency ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dependency ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Dependency prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Dependency, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Dependency result = new Dependency();
      
      protected override Dependency MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Dependency();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.Dependency.Descriptor; }
      }
      
      public override Dependency DefaultInstanceForType {
        get { return global::bnet.protocol.Dependency.DefaultInstance; }
      }
      
      public override Dependency BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.custom_.MakeReadOnly();
        Dependency returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Dependency) {
          return MergeFrom((Dependency) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Dependency other) {
        if (other == global::bnet.protocol.Dependency.DefaultInstance) return this;
        if (other.HasResourceHandle) {
          ResourceHandle = other.ResourceHandle;
        }
        if (other.custom_.Count != 0) {
          base.AddRange(other.custom_, result.custom_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              ResourceHandle = input.ReadString();
              break;
            }
            case 18: {
              global::bnet.protocol.attribute.Attribute.Builder subBuilder = global::bnet.protocol.attribute.Attribute.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddCustom(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public bool HasResourceHandle {
        get { return result.HasResourceHandle; }
      }
      public string ResourceHandle {
        get { return result.ResourceHandle; }
        set { SetResourceHandle(value); }
      }
      public Builder SetResourceHandle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasResourceHandle = true;
        result.resourceHandle_ = value;
        return this;
      }
      public Builder ClearResourceHandle() {
        result.hasResourceHandle = false;
        result.resourceHandle_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> CustomList {
        get { return result.custom_; }
      }
      public int CustomCount {
        get { return result.CustomCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetCustom(int index) {
        return result.GetCustom(index);
      }
      public Builder SetCustom(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.custom_[index] = value;
        return this;
      }
      public Builder SetCustom(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.custom_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCustom(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.custom_.Add(value);
        return this;
      }
      public Builder AddCustom(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.custom_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCustom(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        base.AddRange(values, result.custom_);
        return this;
      }
      public Builder ClearCustom() {
        result.custom_.Clear();
        return this;
      }
    }
    static Dependency() {
      object.ReferenceEquals(global::bnet.protocol.Resource.Descriptor, null);
    }
  }
  
  public sealed partial class Metadata : pb::GeneratedMessage<Metadata, Metadata.Builder> {
    private static readonly Metadata defaultInstance = new Builder().BuildPartial();
    public static Metadata DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Metadata DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override Metadata ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Metadata__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Metadata, Metadata.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_Metadata__FieldAccessorTable; }
    }
    
    public const int DependencyFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.Dependency> dependency_ = new pbc::PopsicleList<global::bnet.protocol.Dependency>();
    public scg::IList<global::bnet.protocol.Dependency> DependencyList {
      get { return dependency_; }
    }
    public int DependencyCount {
      get { return dependency_.Count; }
    }
    public global::bnet.protocol.Dependency GetDependency(int index) {
      return dependency_[index];
    }
    
    public const int PayloadFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.Payload> payload_ = new pbc::PopsicleList<global::bnet.protocol.Payload>();
    public scg::IList<global::bnet.protocol.Payload> PayloadList {
      get { return payload_; }
    }
    public int PayloadCount {
      get { return payload_.Count; }
    }
    public global::bnet.protocol.Payload GetPayload(int index) {
      return payload_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.Dependency element in DependencyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.Payload element in PayloadList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.Dependency element in DependencyList) {
        output.WriteMessage(1, element);
      }
      foreach (global::bnet.protocol.Payload element in PayloadList) {
        output.WriteMessage(2, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.Dependency element in DependencyList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.Payload element in PayloadList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Metadata ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Metadata ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Metadata ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Metadata ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Metadata ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Metadata ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Metadata ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Metadata prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<Metadata, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      Metadata result = new Metadata();
      
      protected override Metadata MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new Metadata();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.Metadata.Descriptor; }
      }
      
      public override Metadata DefaultInstanceForType {
        get { return global::bnet.protocol.Metadata.DefaultInstance; }
      }
      
      public override Metadata BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.dependency_.MakeReadOnly();
        result.payload_.MakeReadOnly();
        Metadata returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Metadata) {
          return MergeFrom((Metadata) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Metadata other) {
        if (other == global::bnet.protocol.Metadata.DefaultInstance) return this;
        if (other.dependency_.Count != 0) {
          base.AddRange(other.dependency_, result.dependency_);
        }
        if (other.payload_.Count != 0) {
          base.AddRange(other.payload_, result.payload_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.Dependency.Builder subBuilder = global::bnet.protocol.Dependency.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddDependency(subBuilder.BuildPartial());
              break;
            }
            case 18: {
              global::bnet.protocol.Payload.Builder subBuilder = global::bnet.protocol.Payload.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddPayload(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.Dependency> DependencyList {
        get { return result.dependency_; }
      }
      public int DependencyCount {
        get { return result.DependencyCount; }
      }
      public global::bnet.protocol.Dependency GetDependency(int index) {
        return result.GetDependency(index);
      }
      public Builder SetDependency(int index, global::bnet.protocol.Dependency value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.dependency_[index] = value;
        return this;
      }
      public Builder SetDependency(int index, global::bnet.protocol.Dependency.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.dependency_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDependency(global::bnet.protocol.Dependency value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.dependency_.Add(value);
        return this;
      }
      public Builder AddDependency(global::bnet.protocol.Dependency.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.dependency_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDependency(scg::IEnumerable<global::bnet.protocol.Dependency> values) {
        base.AddRange(values, result.dependency_);
        return this;
      }
      public Builder ClearDependency() {
        result.dependency_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.Payload> PayloadList {
        get { return result.payload_; }
      }
      public int PayloadCount {
        get { return result.PayloadCount; }
      }
      public global::bnet.protocol.Payload GetPayload(int index) {
        return result.GetPayload(index);
      }
      public Builder SetPayload(int index, global::bnet.protocol.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.payload_[index] = value;
        return this;
      }
      public Builder SetPayload(int index, global::bnet.protocol.Payload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.payload_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPayload(global::bnet.protocol.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.payload_.Add(value);
        return this;
      }
      public Builder AddPayload(global::bnet.protocol.Payload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.payload_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePayload(scg::IEnumerable<global::bnet.protocol.Payload> values) {
        base.AddRange(values, result.payload_);
        return this;
      }
      public Builder ClearPayload() {
        result.payload_.Clear();
        return this;
      }
    }
    static Metadata() {
      object.ReferenceEquals(global::bnet.protocol.Resource.Descriptor, null);
    }
  }
  
  public sealed partial class IndexEntry : pb::GeneratedMessage<IndexEntry, IndexEntry.Builder> {
    private static readonly IndexEntry defaultInstance = new Builder().BuildPartial();
    public static IndexEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexEntry DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override IndexEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_IndexEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexEntry, IndexEntry.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_IndexEntry__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int UrlFieldNumber = 2;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasUrl) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasName) {
        output.WriteString(1, Name);
      }
      if (HasUrl) {
        output.WriteString(2, Url);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (HasUrl) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Url);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static IndexEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexEntry ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexEntry ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexEntry prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<IndexEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      IndexEntry result = new IndexEntry();
      
      protected override IndexEntry MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new IndexEntry();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.IndexEntry.Descriptor; }
      }
      
      public override IndexEntry DefaultInstanceForType {
        get { return global::bnet.protocol.IndexEntry.DefaultInstance; }
      }
      
      public override IndexEntry BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        IndexEntry returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexEntry) {
          return MergeFrom((IndexEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexEntry other) {
        if (other == global::bnet.protocol.IndexEntry.DefaultInstance) return this;
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasUrl) {
          Url = other.Url;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Url = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasName {
        get { return result.HasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasUrl {
        get { return result.HasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
    }
    static IndexEntry() {
      object.ReferenceEquals(global::bnet.protocol.Resource.Descriptor, null);
    }
  }
  
  public sealed partial class ResourceIndex : pb::GeneratedMessage<ResourceIndex, ResourceIndex.Builder> {
    private static readonly ResourceIndex defaultInstance = new Builder().BuildPartial();
    public static ResourceIndex DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResourceIndex DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ResourceIndex ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_ResourceIndex__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResourceIndex, ResourceIndex.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.Resource.internal__static_bnet_protocol_ResourceIndex__FieldAccessorTable; }
    }
    
    public const int EntryFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.IndexEntry> entry_ = new pbc::PopsicleList<global::bnet.protocol.IndexEntry>();
    public scg::IList<global::bnet.protocol.IndexEntry> EntryList {
      get { return entry_; }
    }
    public int EntryCount {
      get { return entry_.Count; }
    }
    public global::bnet.protocol.IndexEntry GetEntry(int index) {
      return entry_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.IndexEntry element in EntryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      foreach (global::bnet.protocol.IndexEntry element in EntryList) {
        output.WriteMessage(1, element);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.IndexEntry element in EntryList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ResourceIndex ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResourceIndex ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResourceIndex ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResourceIndex ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResourceIndex ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResourceIndex prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ResourceIndex, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ResourceIndex result = new ResourceIndex();
      
      protected override ResourceIndex MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ResourceIndex();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.ResourceIndex.Descriptor; }
      }
      
      public override ResourceIndex DefaultInstanceForType {
        get { return global::bnet.protocol.ResourceIndex.DefaultInstance; }
      }
      
      public override ResourceIndex BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        result.entry_.MakeReadOnly();
        ResourceIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResourceIndex) {
          return MergeFrom((ResourceIndex) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResourceIndex other) {
        if (other == global::bnet.protocol.ResourceIndex.DefaultInstance) return this;
        if (other.entry_.Count != 0) {
          base.AddRange(other.entry_, result.entry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              global::bnet.protocol.IndexEntry.Builder subBuilder = global::bnet.protocol.IndexEntry.CreateBuilder();
              input.ReadMessage(subBuilder, extensionRegistry);
              AddEntry(subBuilder.BuildPartial());
              break;
            }
          }
        }
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.IndexEntry> EntryList {
        get { return result.entry_; }
      }
      public int EntryCount {
        get { return result.EntryCount; }
      }
      public global::bnet.protocol.IndexEntry GetEntry(int index) {
        return result.GetEntry(index);
      }
      public Builder SetEntry(int index, global::bnet.protocol.IndexEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.entry_[index] = value;
        return this;
      }
      public Builder SetEntry(int index, global::bnet.protocol.IndexEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.entry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntry(global::bnet.protocol.IndexEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.entry_.Add(value);
        return this;
      }
      public Builder AddEntry(global::bnet.protocol.IndexEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        result.entry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntry(scg::IEnumerable<global::bnet.protocol.IndexEntry> values) {
        base.AddRange(values, result.entry_);
        return this;
      }
      public Builder ClearEntry() {
        result.entry_.Clear();
        return this;
      }
    }
    static ResourceIndex() {
      object.ReferenceEquals(global::bnet.protocol.Resource.Descriptor, null);
    }
  }
  
  #endregion
  
}
