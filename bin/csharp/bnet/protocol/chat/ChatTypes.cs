// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.chat {
  
  public static partial class ChatTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      registry.Add(global::bnet.protocol.chat.ChannelState.Chat);
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_chat_ChannelState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.chat.ChannelState, global::bnet.protocol.chat.ChannelState.Builder> internal__static_bnet_protocol_chat_ChannelState__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ChatTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CihzZXJ2aWNlL2NoYXQvZGVmaW5pdGlvbi9jaGF0X3R5cGVzLnByb3RvEhJi" + 
          "bmV0LnByb3RvY29sLmNoYXQaI3NlcnZpY2UvY2hhbm5lbC9jaGFubmVsX3R5" + 
          "cGVzLnByb3RvIpYBCgxDaGFubmVsU3RhdGUSEAoIaWRlbnRpdHkYASABKAkS" + 
          "DwoHcHJvZ3JhbRgCIAEoBxIOCgZsb2NhbGUYAyABKAcyUwoEY2hhdBIjLmJu" + 
          "ZXQucHJvdG9jb2wuY2hhbm5lbC5DaGFubmVsU3RhdGUYZCABKAsyIC5ibmV0" + 
          "LnByb3RvY29sLmNoYXQuQ2hhbm5lbFN0YXRl");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_chat_ChannelState__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_chat_ChannelState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.chat.ChannelState, global::bnet.protocol.chat.ChannelState.Builder>(internal__static_bnet_protocol_chat_ChannelState__Descriptor,
                new string[] { "Identity", "Program", "Locale", });
        global::bnet.protocol.chat.ChannelState.Chat = pb::GeneratedSingleExtension<global::bnet.protocol.chat.ChannelState>.CreateInstance(global::bnet.protocol.chat.ChannelState.Descriptor.Extensions[0]);
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.channel.ChannelTypes.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class ChannelState : pb::GeneratedMessage<ChannelState, ChannelState.Builder> {
    private static readonly ChannelState defaultInstance = new Builder().BuildPartial();
    public static ChannelState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChannelState DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override ChannelState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.chat.ChatTypes.internal__static_bnet_protocol_chat_ChannelState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChannelState, ChannelState.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.chat.ChatTypes.internal__static_bnet_protocol_chat_ChannelState__FieldAccessorTable; }
    }
    
    public const int ChatFieldNumber = 100;
    public static pb::GeneratedExtensionBase<global::bnet.protocol.chat.ChannelState> Chat;
    public const int IdentityFieldNumber = 1;
    private bool hasIdentity;
    private string identity_ = "";
    public bool HasIdentity {
      get { return hasIdentity; }
    }
    public string Identity {
      get { return identity_; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_ = 0;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int LocaleFieldNumber = 3;
    private bool hasLocale;
    private uint locale_ = 0;
    public bool HasLocale {
      get { return hasLocale; }
    }
    public uint Locale {
      get { return locale_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasIdentity) {
        output.WriteString(1, Identity);
      }
      if (HasProgram) {
        output.WriteFixed32(2, Program);
      }
      if (HasLocale) {
        output.WriteFixed32(3, Locale);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasIdentity) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Identity);
        }
        if (HasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Program);
        }
        if (HasLocale) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, Locale);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ChannelState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChannelState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChannelState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChannelState ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChannelState prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<ChannelState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      ChannelState result = new ChannelState();
      
      protected override ChannelState MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new ChannelState();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.chat.ChannelState.Descriptor; }
      }
      
      public override ChannelState DefaultInstanceForType {
        get { return global::bnet.protocol.chat.ChannelState.DefaultInstance; }
      }
      
      public override ChannelState BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        ChannelState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChannelState) {
          return MergeFrom((ChannelState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChannelState other) {
        if (other == global::bnet.protocol.chat.ChannelState.DefaultInstance) return this;
        if (other.HasIdentity) {
          Identity = other.Identity;
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasLocale) {
          Locale = other.Locale;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 10: {
              Identity = input.ReadString();
              break;
            }
            case 21: {
              Program = input.ReadFixed32();
              break;
            }
            case 29: {
              Locale = input.ReadFixed32();
              break;
            }
          }
        }
      }
      
      
      public bool HasIdentity {
        get { return result.HasIdentity; }
      }
      public string Identity {
        get { return result.Identity; }
        set { SetIdentity(value); }
      }
      public Builder SetIdentity(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasIdentity = true;
        result.identity_ = value;
        return this;
      }
      public Builder ClearIdentity() {
        result.hasIdentity = false;
        result.identity_ = "";
        return this;
      }
      
      public bool HasProgram {
        get { return result.HasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasLocale {
        get { return result.HasLocale; }
      }
      public uint Locale {
        get { return result.Locale; }
        set { SetLocale(value); }
      }
      public Builder SetLocale(uint value) {
        result.hasLocale = true;
        result.locale_ = value;
        return this;
      }
      public Builder ClearLocale() {
        result.hasLocale = false;
        result.locale_ = 0;
        return this;
      }
    }
    static ChannelState() {
      object.ReferenceEquals(global::bnet.protocol.chat.ChatTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}
