// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/presence/presence.proto

package bnet.protocol.presence;

public final class Presence {
  private Presence() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SubscribeRequest.newBuilder() to construct.
    private SubscribeRequest() {
      initFields();
    }
    private SubscribeRequest(boolean noInit) {}
    
    private static final SubscribeRequest defaultInstance;
    public static SubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_SubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_SubscribeRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId entity_id = 2;
    public static final int ENTITY_ID_FIELD_NUMBER = 2;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    // required uint64 object_id = 3;
    public static final int OBJECT_ID_FIELD_NUMBER = 3;
    private boolean hasObjectId;
    private long objectId_ = 0L;
    public boolean hasObjectId() { return hasObjectId; }
    public long getObjectId() { return objectId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!hasObjectId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getEntityId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasEntityId()) {
        output.writeMessage(2, getEntityId());
      }
      if (hasObjectId()) {
        output.writeUInt64(3, getObjectId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEntityId());
      }
      if (hasObjectId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getObjectId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.presence.Presence.SubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.presence.Presence.SubscribeRequest result;
      
      // Construct using bnet.protocol.presence.Presence.SubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.presence.Presence.SubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.presence.Presence.SubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.presence.Presence.SubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.presence.Presence.SubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.presence.Presence.SubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.presence.Presence.SubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.presence.Presence.SubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.presence.Presence.SubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.presence.Presence.SubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.presence.Presence.SubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.presence.Presence.SubscribeRequest) {
          return mergeFrom((bnet.protocol.presence.Presence.SubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.presence.Presence.SubscribeRequest other) {
        if (other == bnet.protocol.presence.Presence.SubscribeRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        if (other.hasObjectId()) {
          setObjectId(other.getObjectId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setObjectId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId entity_id = 2;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required uint64 object_id = 3;
      public boolean hasObjectId() {
        return result.hasObjectId();
      }
      public long getObjectId() {
        return result.getObjectId();
      }
      public Builder setObjectId(long value) {
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder clearObjectId() {
        result.hasObjectId = false;
        result.objectId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.presence.SubscribeRequest)
    }
    
    static {
      defaultInstance = new SubscribeRequest(true);
      bnet.protocol.presence.Presence.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.presence.SubscribeRequest)
  }
  
  public static final class UnsubscribeRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnsubscribeRequest.newBuilder() to construct.
    private UnsubscribeRequest() {
      initFields();
    }
    private UnsubscribeRequest(boolean noInit) {}
    
    private static final UnsubscribeRequest defaultInstance;
    public static UnsubscribeRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnsubscribeRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_UnsubscribeRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_UnsubscribeRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId agent_id = 1;
    public static final int AGENT_ID_FIELD_NUMBER = 1;
    private boolean hasAgentId;
    private bnet.protocol.Entity.EntityId agentId_;
    public boolean hasAgentId() { return hasAgentId; }
    public bnet.protocol.Entity.EntityId getAgentId() { return agentId_; }
    
    // required .bnet.protocol.EntityId entity_id = 2;
    public static final int ENTITY_ID_FIELD_NUMBER = 2;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    private void initFields() {
      agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (hasAgentId()) {
        if (!getAgentId().isInitialized()) return false;
      }
      if (!getEntityId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAgentId()) {
        output.writeMessage(1, getAgentId());
      }
      if (hasEntityId()) {
        output.writeMessage(2, getEntityId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAgentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAgentId());
      }
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEntityId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.presence.Presence.UnsubscribeRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.presence.Presence.UnsubscribeRequest result;
      
      // Construct using bnet.protocol.presence.Presence.UnsubscribeRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.presence.Presence.UnsubscribeRequest();
        return builder;
      }
      
      protected bnet.protocol.presence.Presence.UnsubscribeRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.presence.Presence.UnsubscribeRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.presence.Presence.UnsubscribeRequest.getDescriptor();
      }
      
      public bnet.protocol.presence.Presence.UnsubscribeRequest getDefaultInstanceForType() {
        return bnet.protocol.presence.Presence.UnsubscribeRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.presence.Presence.UnsubscribeRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.presence.Presence.UnsubscribeRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.presence.Presence.UnsubscribeRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.presence.Presence.UnsubscribeRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.presence.Presence.UnsubscribeRequest) {
          return mergeFrom((bnet.protocol.presence.Presence.UnsubscribeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.presence.Presence.UnsubscribeRequest other) {
        if (other == bnet.protocol.presence.Presence.UnsubscribeRequest.getDefaultInstance()) return this;
        if (other.hasAgentId()) {
          mergeAgentId(other.getAgentId());
        }
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasAgentId()) {
                subBuilder.mergeFrom(getAgentId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAgentId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId agent_id = 1;
      public boolean hasAgentId() {
        return result.hasAgentId();
      }
      public bnet.protocol.Entity.EntityId getAgentId() {
        return result.getAgentId();
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder setAgentId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasAgentId = true;
        result.agentId_ = builderForValue.build();
        return this;
      }
      public Builder mergeAgentId(bnet.protocol.Entity.EntityId value) {
        if (result.hasAgentId() &&
            result.agentId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.agentId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.agentId_).mergeFrom(value).buildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder clearAgentId() {
        result.hasAgentId = false;
        result.agentId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId entity_id = 2;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.presence.UnsubscribeRequest)
    }
    
    static {
      defaultInstance = new UnsubscribeRequest(true);
      bnet.protocol.presence.Presence.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.presence.UnsubscribeRequest)
  }
  
  public static final class UpdateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UpdateRequest.newBuilder() to construct.
    private UpdateRequest() {
      initFields();
    }
    private UpdateRequest(boolean noInit) {}
    
    private static final UpdateRequest defaultInstance;
    public static UpdateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UpdateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_UpdateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_UpdateRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId entity_id = 1;
    public static final int ENTITY_ID_FIELD_NUMBER = 1;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    // repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
    public static final int FIELD_OPERATION_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.presence.PresenceTypes.FieldOperation> fieldOperation_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.presence.PresenceTypes.FieldOperation> getFieldOperationList() {
      return fieldOperation_;
    }
    public int getFieldOperationCount() { return fieldOperation_.size(); }
    public bnet.protocol.presence.PresenceTypes.FieldOperation getFieldOperation(int index) {
      return fieldOperation_.get(index);
    }
    
    private void initFields() {
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!getEntityId().isInitialized()) return false;
      for (bnet.protocol.presence.PresenceTypes.FieldOperation element : getFieldOperationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntityId()) {
        output.writeMessage(1, getEntityId());
      }
      for (bnet.protocol.presence.PresenceTypes.FieldOperation element : getFieldOperationList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntityId());
      }
      for (bnet.protocol.presence.PresenceTypes.FieldOperation element : getFieldOperationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.presence.Presence.UpdateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.presence.Presence.UpdateRequest result;
      
      // Construct using bnet.protocol.presence.Presence.UpdateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.presence.Presence.UpdateRequest();
        return builder;
      }
      
      protected bnet.protocol.presence.Presence.UpdateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.presence.Presence.UpdateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.presence.Presence.UpdateRequest.getDescriptor();
      }
      
      public bnet.protocol.presence.Presence.UpdateRequest getDefaultInstanceForType() {
        return bnet.protocol.presence.Presence.UpdateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.presence.Presence.UpdateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.presence.Presence.UpdateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.presence.Presence.UpdateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.fieldOperation_ != java.util.Collections.EMPTY_LIST) {
          result.fieldOperation_ =
            java.util.Collections.unmodifiableList(result.fieldOperation_);
        }
        bnet.protocol.presence.Presence.UpdateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.presence.Presence.UpdateRequest) {
          return mergeFrom((bnet.protocol.presence.Presence.UpdateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.presence.Presence.UpdateRequest other) {
        if (other == bnet.protocol.presence.Presence.UpdateRequest.getDefaultInstance()) return this;
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        if (!other.fieldOperation_.isEmpty()) {
          if (result.fieldOperation_.isEmpty()) {
            result.fieldOperation_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldOperation>();
          }
          result.fieldOperation_.addAll(other.fieldOperation_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.presence.PresenceTypes.FieldOperation.Builder subBuilder = bnet.protocol.presence.PresenceTypes.FieldOperation.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldOperation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId entity_id = 1;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.presence.FieldOperation field_operation = 2;
      public java.util.List<bnet.protocol.presence.PresenceTypes.FieldOperation> getFieldOperationList() {
        return java.util.Collections.unmodifiableList(result.fieldOperation_);
      }
      public int getFieldOperationCount() {
        return result.getFieldOperationCount();
      }
      public bnet.protocol.presence.PresenceTypes.FieldOperation getFieldOperation(int index) {
        return result.getFieldOperation(index);
      }
      public Builder setFieldOperation(int index, bnet.protocol.presence.PresenceTypes.FieldOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.fieldOperation_.set(index, value);
        return this;
      }
      public Builder setFieldOperation(int index, bnet.protocol.presence.PresenceTypes.FieldOperation.Builder builderForValue) {
        result.fieldOperation_.set(index, builderForValue.build());
        return this;
      }
      public Builder addFieldOperation(bnet.protocol.presence.PresenceTypes.FieldOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.fieldOperation_.isEmpty()) {
          result.fieldOperation_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldOperation>();
        }
        result.fieldOperation_.add(value);
        return this;
      }
      public Builder addFieldOperation(bnet.protocol.presence.PresenceTypes.FieldOperation.Builder builderForValue) {
        if (result.fieldOperation_.isEmpty()) {
          result.fieldOperation_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldOperation>();
        }
        result.fieldOperation_.add(builderForValue.build());
        return this;
      }
      public Builder addAllFieldOperation(
          java.lang.Iterable<? extends bnet.protocol.presence.PresenceTypes.FieldOperation> values) {
        if (result.fieldOperation_.isEmpty()) {
          result.fieldOperation_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldOperation>();
        }
        super.addAll(values, result.fieldOperation_);
        return this;
      }
      public Builder clearFieldOperation() {
        result.fieldOperation_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.presence.UpdateRequest)
    }
    
    static {
      defaultInstance = new UpdateRequest(true);
      bnet.protocol.presence.Presence.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.presence.UpdateRequest)
  }
  
  public static final class QueryRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use QueryRequest.newBuilder() to construct.
    private QueryRequest() {
      initFields();
    }
    private QueryRequest(boolean noInit) {}
    
    private static final QueryRequest defaultInstance;
    public static QueryRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public QueryRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_QueryRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_QueryRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId entity_id = 1;
    public static final int ENTITY_ID_FIELD_NUMBER = 1;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    // repeated .bnet.protocol.presence.FieldKey key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.presence.PresenceTypes.FieldKey> key_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.presence.PresenceTypes.FieldKey> getKeyList() {
      return key_;
    }
    public int getKeyCount() { return key_.size(); }
    public bnet.protocol.presence.PresenceTypes.FieldKey getKey(int index) {
      return key_.get(index);
    }
    
    private void initFields() {
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!getEntityId().isInitialized()) return false;
      for (bnet.protocol.presence.PresenceTypes.FieldKey element : getKeyList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntityId()) {
        output.writeMessage(1, getEntityId());
      }
      for (bnet.protocol.presence.PresenceTypes.FieldKey element : getKeyList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntityId());
      }
      for (bnet.protocol.presence.PresenceTypes.FieldKey element : getKeyList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.presence.Presence.QueryRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.presence.Presence.QueryRequest result;
      
      // Construct using bnet.protocol.presence.Presence.QueryRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.presence.Presence.QueryRequest();
        return builder;
      }
      
      protected bnet.protocol.presence.Presence.QueryRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.presence.Presence.QueryRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.presence.Presence.QueryRequest.getDescriptor();
      }
      
      public bnet.protocol.presence.Presence.QueryRequest getDefaultInstanceForType() {
        return bnet.protocol.presence.Presence.QueryRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.presence.Presence.QueryRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.presence.Presence.QueryRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.presence.Presence.QueryRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.key_ != java.util.Collections.EMPTY_LIST) {
          result.key_ =
            java.util.Collections.unmodifiableList(result.key_);
        }
        bnet.protocol.presence.Presence.QueryRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.presence.Presence.QueryRequest) {
          return mergeFrom((bnet.protocol.presence.Presence.QueryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.presence.Presence.QueryRequest other) {
        if (other == bnet.protocol.presence.Presence.QueryRequest.getDefaultInstance()) return this;
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        if (!other.key_.isEmpty()) {
          if (result.key_.isEmpty()) {
            result.key_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldKey>();
          }
          result.key_.addAll(other.key_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.presence.PresenceTypes.FieldKey.Builder subBuilder = bnet.protocol.presence.PresenceTypes.FieldKey.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addKey(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId entity_id = 1;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated .bnet.protocol.presence.FieldKey key = 2;
      public java.util.List<bnet.protocol.presence.PresenceTypes.FieldKey> getKeyList() {
        return java.util.Collections.unmodifiableList(result.key_);
      }
      public int getKeyCount() {
        return result.getKeyCount();
      }
      public bnet.protocol.presence.PresenceTypes.FieldKey getKey(int index) {
        return result.getKey(index);
      }
      public Builder setKey(int index, bnet.protocol.presence.PresenceTypes.FieldKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.key_.set(index, value);
        return this;
      }
      public Builder setKey(int index, bnet.protocol.presence.PresenceTypes.FieldKey.Builder builderForValue) {
        result.key_.set(index, builderForValue.build());
        return this;
      }
      public Builder addKey(bnet.protocol.presence.PresenceTypes.FieldKey value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.key_.isEmpty()) {
          result.key_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldKey>();
        }
        result.key_.add(value);
        return this;
      }
      public Builder addKey(bnet.protocol.presence.PresenceTypes.FieldKey.Builder builderForValue) {
        if (result.key_.isEmpty()) {
          result.key_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldKey>();
        }
        result.key_.add(builderForValue.build());
        return this;
      }
      public Builder addAllKey(
          java.lang.Iterable<? extends bnet.protocol.presence.PresenceTypes.FieldKey> values) {
        if (result.key_.isEmpty()) {
          result.key_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.FieldKey>();
        }
        super.addAll(values, result.key_);
        return this;
      }
      public Builder clearKey() {
        result.key_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.presence.QueryRequest)
    }
    
    static {
      defaultInstance = new QueryRequest(true);
      bnet.protocol.presence.Presence.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.presence.QueryRequest)
  }
  
  public static final class QueryResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use QueryResponse.newBuilder() to construct.
    private QueryResponse() {
      initFields();
    }
    private QueryResponse(boolean noInit) {}
    
    private static final QueryResponse defaultInstance;
    public static QueryResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public QueryResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_QueryResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.presence.Presence.internal_static_bnet_protocol_presence_QueryResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.presence.Field field = 2;
    public static final int FIELD_FIELD_NUMBER = 2;
    private java.util.List<bnet.protocol.presence.PresenceTypes.Field> field_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.presence.PresenceTypes.Field> getFieldList() {
      return field_;
    }
    public int getFieldCount() { return field_.size(); }
    public bnet.protocol.presence.PresenceTypes.Field getField(int index) {
      return field_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.presence.PresenceTypes.Field element : getFieldList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.presence.PresenceTypes.Field element : getFieldList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.presence.PresenceTypes.Field element : getFieldList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.presence.Presence.QueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.presence.Presence.QueryResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.presence.Presence.QueryResponse result;
      
      // Construct using bnet.protocol.presence.Presence.QueryResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.presence.Presence.QueryResponse();
        return builder;
      }
      
      protected bnet.protocol.presence.Presence.QueryResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.presence.Presence.QueryResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.presence.Presence.QueryResponse.getDescriptor();
      }
      
      public bnet.protocol.presence.Presence.QueryResponse getDefaultInstanceForType() {
        return bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.presence.Presence.QueryResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.presence.Presence.QueryResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.presence.Presence.QueryResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.field_ != java.util.Collections.EMPTY_LIST) {
          result.field_ =
            java.util.Collections.unmodifiableList(result.field_);
        }
        bnet.protocol.presence.Presence.QueryResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.presence.Presence.QueryResponse) {
          return mergeFrom((bnet.protocol.presence.Presence.QueryResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.presence.Presence.QueryResponse other) {
        if (other == bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance()) return this;
        if (!other.field_.isEmpty()) {
          if (result.field_.isEmpty()) {
            result.field_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.Field>();
          }
          result.field_.addAll(other.field_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              bnet.protocol.presence.PresenceTypes.Field.Builder subBuilder = bnet.protocol.presence.PresenceTypes.Field.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addField(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.presence.Field field = 2;
      public java.util.List<bnet.protocol.presence.PresenceTypes.Field> getFieldList() {
        return java.util.Collections.unmodifiableList(result.field_);
      }
      public int getFieldCount() {
        return result.getFieldCount();
      }
      public bnet.protocol.presence.PresenceTypes.Field getField(int index) {
        return result.getField(index);
      }
      public Builder setField(int index, bnet.protocol.presence.PresenceTypes.Field value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.field_.set(index, value);
        return this;
      }
      public Builder setField(int index, bnet.protocol.presence.PresenceTypes.Field.Builder builderForValue) {
        result.field_.set(index, builderForValue.build());
        return this;
      }
      public Builder addField(bnet.protocol.presence.PresenceTypes.Field value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.field_.isEmpty()) {
          result.field_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.Field>();
        }
        result.field_.add(value);
        return this;
      }
      public Builder addField(bnet.protocol.presence.PresenceTypes.Field.Builder builderForValue) {
        if (result.field_.isEmpty()) {
          result.field_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.Field>();
        }
        result.field_.add(builderForValue.build());
        return this;
      }
      public Builder addAllField(
          java.lang.Iterable<? extends bnet.protocol.presence.PresenceTypes.Field> values) {
        if (result.field_.isEmpty()) {
          result.field_ = new java.util.ArrayList<bnet.protocol.presence.PresenceTypes.Field>();
        }
        super.addAll(values, result.field_);
        return this;
      }
      public Builder clearField() {
        result.field_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.presence.QueryResponse)
    }
    
    static {
      defaultInstance = new QueryResponse(true);
      bnet.protocol.presence.Presence.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.presence.QueryResponse)
  }
  
  public static abstract class PresenceService
      implements com.google.protobuf.Service {
    protected PresenceService() {}
    
    public interface Interface {
      public abstract void subscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.SubscribeRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void unsubscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UnsubscribeRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void update(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UpdateRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void query(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.QueryRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.presence.Presence.QueryResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new PresenceService() {
        @Override
        public  void subscribe(
            com.google.protobuf.RpcController controller,
            bnet.protocol.presence.Presence.SubscribeRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.subscribe(controller, request, done);
        }
        
        @Override
        public  void unsubscribe(
            com.google.protobuf.RpcController controller,
            bnet.protocol.presence.Presence.UnsubscribeRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.unsubscribe(controller, request, done);
        }
        
        @Override
        public  void update(
            com.google.protobuf.RpcController controller,
            bnet.protocol.presence.Presence.UpdateRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.update(controller, request, done);
        }
        
        @Override
        public  void query(
            com.google.protobuf.RpcController controller,
            bnet.protocol.presence.Presence.QueryRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.presence.Presence.QueryResponse> done) {
          impl.query(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.subscribe(controller, (bnet.protocol.presence.Presence.SubscribeRequest)request);
            case 1:
              return impl.unsubscribe(controller, (bnet.protocol.presence.Presence.UnsubscribeRequest)request);
            case 2:
              return impl.update(controller, (bnet.protocol.presence.Presence.UpdateRequest)request);
            case 3:
              return impl.query(controller, (bnet.protocol.presence.Presence.QueryRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.presence.Presence.SubscribeRequest.getDefaultInstance();
            case 1:
              return bnet.protocol.presence.Presence.UnsubscribeRequest.getDefaultInstance();
            case 2:
              return bnet.protocol.presence.Presence.UpdateRequest.getDefaultInstance();
            case 3:
              return bnet.protocol.presence.Presence.QueryRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 1:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 2:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 3:
              return bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void subscribe(
        com.google.protobuf.RpcController controller,
        bnet.protocol.presence.Presence.SubscribeRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void unsubscribe(
        com.google.protobuf.RpcController controller,
        bnet.protocol.presence.Presence.UnsubscribeRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void update(
        com.google.protobuf.RpcController controller,
        bnet.protocol.presence.Presence.UpdateRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void query(
        com.google.protobuf.RpcController controller,
        bnet.protocol.presence.Presence.QueryRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.presence.Presence.QueryResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return bnet.protocol.presence.Presence.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.subscribe(controller, (bnet.protocol.presence.Presence.SubscribeRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 1:
          this.unsubscribe(controller, (bnet.protocol.presence.Presence.UnsubscribeRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 2:
          this.update(controller, (bnet.protocol.presence.Presence.UpdateRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 3:
          this.query(controller, (bnet.protocol.presence.Presence.QueryRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.presence.Presence.QueryResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.presence.Presence.SubscribeRequest.getDefaultInstance();
        case 1:
          return bnet.protocol.presence.Presence.UnsubscribeRequest.getDefaultInstance();
        case 2:
          return bnet.protocol.presence.Presence.UpdateRequest.getDefaultInstance();
        case 3:
          return bnet.protocol.presence.Presence.QueryRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 1:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 2:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 3:
          return bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends bnet.protocol.presence.Presence.PresenceService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void subscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.SubscribeRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void unsubscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UnsubscribeRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void update(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UpdateRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void query(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.QueryRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.presence.Presence.QueryResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.presence.Presence.QueryResponse.class,
            bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public bnet.protocol.Rpc.NoData subscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.SubscribeRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData unsubscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UnsubscribeRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData update(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UpdateRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.presence.Presence.QueryResponse query(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.QueryRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public bnet.protocol.Rpc.NoData subscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.SubscribeRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData unsubscribe(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UnsubscribeRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData update(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.UpdateRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.presence.Presence.QueryResponse query(
          com.google.protobuf.RpcController controller,
          bnet.protocol.presence.Presence.QueryRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.presence.Presence.QueryResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.presence.Presence.QueryResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_presence_SubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_presence_SubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_presence_UnsubscribeRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_presence_UnsubscribeRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_presence_UpdateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_presence_UpdateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_presence_QueryRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_presence_QueryRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_presence_QueryResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_presence_QueryResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037service/presence/presence.proto\022\026bnet." +
      "protocol.presence\032\034lib/protocol/attribut" +
      "e.proto\032\031lib/protocol/entity.proto\032\021lib/" +
      "rpc/rpc.proto\032%service/presence/presence" +
      "_types.proto\"|\n\020SubscribeRequest\022)\n\010agen" +
      "t_id\030\001 \001(\0132\027.bnet.protocol.EntityId\022*\n\te" +
      "ntity_id\030\002 \002(\0132\027.bnet.protocol.EntityId\022" +
      "\021\n\tobject_id\030\003 \002(\004\"k\n\022UnsubscribeRequest" +
      "\022)\n\010agent_id\030\001 \001(\0132\027.bnet.protocol.Entit" +
      "yId\022*\n\tentity_id\030\002 \002(\0132\027.bnet.protocol.E",
      "ntityId\"|\n\rUpdateRequest\022*\n\tentity_id\030\001 " +
      "\002(\0132\027.bnet.protocol.EntityId\022?\n\017field_op" +
      "eration\030\002 \003(\0132&.bnet.protocol.presence.F" +
      "ieldOperation\"i\n\014QueryRequest\022*\n\tentity_" +
      "id\030\001 \002(\0132\027.bnet.protocol.EntityId\022-\n\003key" +
      "\030\002 \003(\0132 .bnet.protocol.presence.FieldKey" +
      "\"=\n\rQueryResponse\022,\n\005field\030\002 \003(\0132\035.bnet." +
      "protocol.presence.Field2\317\002\n\017PresenceServ" +
      "ice\022L\n\tSubscribe\022(.bnet.protocol.presenc" +
      "e.SubscribeRequest\032\025.bnet.protocol.NoDat",
      "a\022P\n\013Unsubscribe\022*.bnet.protocol.presenc" +
      "e.UnsubscribeRequest\032\025.bnet.protocol.NoD" +
      "ata\022F\n\006Update\022%.bnet.protocol.presence.U" +
      "pdateRequest\032\025.bnet.protocol.NoData\022T\n\005Q" +
      "uery\022$.bnet.protocol.presence.QueryReque" +
      "st\032%.bnet.protocol.presence.QueryRespons" +
      "eB\003\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_presence_SubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_presence_SubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_presence_SubscribeRequest_descriptor,
              new java.lang.String[] { "AgentId", "EntityId", "ObjectId", },
              bnet.protocol.presence.Presence.SubscribeRequest.class,
              bnet.protocol.presence.Presence.SubscribeRequest.Builder.class);
          internal_static_bnet_protocol_presence_UnsubscribeRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_presence_UnsubscribeRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_presence_UnsubscribeRequest_descriptor,
              new java.lang.String[] { "AgentId", "EntityId", },
              bnet.protocol.presence.Presence.UnsubscribeRequest.class,
              bnet.protocol.presence.Presence.UnsubscribeRequest.Builder.class);
          internal_static_bnet_protocol_presence_UpdateRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_presence_UpdateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_presence_UpdateRequest_descriptor,
              new java.lang.String[] { "EntityId", "FieldOperation", },
              bnet.protocol.presence.Presence.UpdateRequest.class,
              bnet.protocol.presence.Presence.UpdateRequest.Builder.class);
          internal_static_bnet_protocol_presence_QueryRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_presence_QueryRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_presence_QueryRequest_descriptor,
              new java.lang.String[] { "EntityId", "Key", },
              bnet.protocol.presence.Presence.QueryRequest.class,
              bnet.protocol.presence.Presence.QueryRequest.Builder.class);
          internal_static_bnet_protocol_presence_QueryResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_presence_QueryResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_presence_QueryResponse_descriptor,
              new java.lang.String[] { "Field", },
              bnet.protocol.presence.Presence.QueryResponse.class,
              bnet.protocol.presence.Presence.QueryResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.attribute.CAttribute.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
          bnet.protocol.presence.PresenceTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
