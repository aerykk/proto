// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/game_utilities/game_utilities.proto

package bnet.protocol.game_utilities;

public final class CGameUtilies {
  private CGameUtilies() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ClientRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientRequest.newBuilder() to construct.
    private ClientRequest() {
      initFields();
    }
    private ClientRequest(boolean noInit) {}
    
    private static final ClientRequest defaultInstance;
    public static ClientRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_ClientRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_ClientRequest_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.CAttribute.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional .bnet.protocol.ProcessId host = 2;
    public static final int HOST_FIELD_NUMBER = 2;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    // optional .bnet.protocol.EntityId bnet_account_id = 3;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 3;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // optional .bnet.protocol.EntityId game_account_id = 4;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 4;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // optional .bnet.protocol.EntityId toon_id = 5;
    public static final int TOON_ID_FIELD_NUMBER = 5;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    private void initFields() {
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      if (hasBnetAccountId()) {
        if (!getBnetAccountId().isInitialized()) return false;
      }
      if (hasGameAccountId()) {
        if (!getGameAccountId().isInitialized()) return false;
      }
      if (hasToonId()) {
        if (!getToonId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      if (hasHost()) {
        output.writeMessage(2, getHost());
      }
      if (hasBnetAccountId()) {
        output.writeMessage(3, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(4, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(5, getToonId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHost());
      }
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getToonId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.ClientRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.ClientRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.ClientRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.ClientRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.ClientRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.ClientRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.ClientRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.ClientRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.ClientRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.ClientRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.ClientRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.ClientRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_utilities.CGameUtilies.ClientRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.ClientRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.ClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.ClientRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.ClientRequest.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.CAttribute.Attribute.Builder subBuilder = bnet.protocol.attribute.CAttribute.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.CAttribute.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 2;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId bnet_account_id = 3;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId game_account_id = 4;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId toon_id = 5;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.ClientRequest)
    }
    
    static {
      defaultInstance = new ClientRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.ClientRequest)
  }
  
  public static final class ClientResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientResponse.newBuilder() to construct.
    private ClientResponse() {
      initFields();
    }
    private ClientResponse(boolean noInit) {}
    
    private static final ClientResponse defaultInstance;
    public static ClientResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_ClientResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_ClientResponse_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.CAttribute.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.ClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.ClientResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.ClientResponse result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.ClientResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.ClientResponse();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.ClientResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.ClientResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.ClientResponse getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.ClientResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.ClientResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.ClientResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_utilities.CGameUtilies.ClientResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.ClientResponse) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.ClientResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.ClientResponse other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.CAttribute.Attribute.Builder subBuilder = bnet.protocol.attribute.CAttribute.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.CAttribute.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.ClientResponse)
    }
    
    static {
      defaultInstance = new ClientResponse(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.ClientResponse)
  }
  
  public static final class CreateToonRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateToonRequest.newBuilder() to construct.
    private CreateToonRequest() {
      initFields();
    }
    private CreateToonRequest(boolean noInit) {}
    
    private static final CreateToonRequest defaultInstance;
    public static CreateToonRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateToonRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_CreateToonRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_CreateToonRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId bnet_account_id = 1;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 1;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // required .bnet.protocol.EntityId game_account_id = 2;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // required .bnet.protocol.EntityId toon_id = 3;
    public static final int TOON_ID_FIELD_NUMBER = 3;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // required string name = 4;
    public static final int NAME_FIELD_NUMBER = 4;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 5;
    public static final int ATTRIBUTE_FIELD_NUMBER = 5;
    private java.util.List<bnet.protocol.attribute.CAttribute.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // optional .bnet.protocol.ProcessId host = 6;
    public static final int HOST_FIELD_NUMBER = 6;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasBnetAccountId) return false;
      if (!hasGameAccountId) return false;
      if (!hasToonId) return false;
      if (!hasName) return false;
      if (!getBnetAccountId().isInitialized()) return false;
      if (!getGameAccountId().isInitialized()) return false;
      if (!getToonId().isInitialized()) return false;
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBnetAccountId()) {
        output.writeMessage(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(2, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(3, getToonId());
      }
      if (hasName()) {
        output.writeString(4, getName());
      }
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        output.writeMessage(5, element);
      }
      if (hasHost()) {
        output.writeMessage(6, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToonId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getName());
      }
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.getDefaultInstance()) return this;
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setName(input.readString());
              break;
            }
            case 42: {
              bnet.protocol.attribute.CAttribute.Attribute.Builder subBuilder = bnet.protocol.attribute.CAttribute.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId bnet_account_id = 1;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId game_account_id = 2;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId toon_id = 3;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required string name = 4;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 5;
      public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.CAttribute.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 6;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.CreateToonRequest)
    }
    
    static {
      defaultInstance = new CreateToonRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.CreateToonRequest)
  }
  
  public static final class CreateToonResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateToonResponse.newBuilder() to construct.
    private CreateToonResponse() {
      initFields();
    }
    private CreateToonResponse(boolean noInit) {}
    
    private static final CreateToonResponse defaultInstance;
    public static CreateToonResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateToonResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_CreateToonResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_CreateToonResponse_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.CreateToonResponse)
    }
    
    static {
      defaultInstance = new CreateToonResponse(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.CreateToonResponse)
  }
  
  public static final class DeleteToonRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use DeleteToonRequest.newBuilder() to construct.
    private DeleteToonRequest() {
      initFields();
    }
    private DeleteToonRequest(boolean noInit) {}
    
    private static final DeleteToonRequest defaultInstance;
    public static DeleteToonRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeleteToonRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_DeleteToonRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_DeleteToonRequest_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId bnet_account_id = 1;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 1;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // optional .bnet.protocol.EntityId game_account_id = 2;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // required .bnet.protocol.EntityId toon_id = 3;
    public static final int TOON_ID_FIELD_NUMBER = 3;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // optional .bnet.protocol.ProcessId host = 4;
    public static final int HOST_FIELD_NUMBER = 4;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasToonId) return false;
      if (hasBnetAccountId()) {
        if (!getBnetAccountId().isInitialized()) return false;
      }
      if (hasGameAccountId()) {
        if (!getGameAccountId().isInitialized()) return false;
      }
      if (!getToonId().isInitialized()) return false;
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBnetAccountId()) {
        output.writeMessage(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(2, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(3, getToonId());
      }
      if (hasHost()) {
        output.writeMessage(4, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToonId());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.getDefaultInstance()) return this;
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId bnet_account_id = 1;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId game_account_id = 2;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId toon_id = 3;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 4;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.DeleteToonRequest)
    }
    
    static {
      defaultInstance = new DeleteToonRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.DeleteToonRequest)
  }
  
  public static final class TransferToonRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TransferToonRequest.newBuilder() to construct.
    private TransferToonRequest() {
      initFields();
    }
    private TransferToonRequest(boolean noInit) {}
    
    private static final TransferToonRequest defaultInstance;
    public static TransferToonRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransferToonRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_TransferToonRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_TransferToonRequest_fieldAccessorTable;
    }
    
    public static final class Account extends
        com.google.protobuf.GeneratedMessage {
      // Use Account.newBuilder() to construct.
      private Account() {
        initFields();
      }
      private Account(boolean noInit) {}
      
      private static final Account defaultInstance;
      public static Account getDefaultInstance() {
        return defaultInstance;
      }
      
      public Account getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_fieldAccessorTable;
      }
      
      // required .bnet.protocol.EntityId bnet_account_id = 1;
      public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 1;
      private boolean hasBnetAccountId;
      private bnet.protocol.Entity.EntityId bnetAccountId_;
      public boolean hasBnetAccountId() { return hasBnetAccountId; }
      public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
      
      // required .bnet.protocol.EntityId game_account_id = 2;
      public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
      private boolean hasGameAccountId;
      private bnet.protocol.Entity.EntityId gameAccountId_;
      public boolean hasGameAccountId() { return hasGameAccountId; }
      public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
      
      private void initFields() {
        bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (!hasBnetAccountId) return false;
        if (!hasGameAccountId) return false;
        if (!getBnetAccountId().isInitialized()) return false;
        if (!getGameAccountId().isInitialized()) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasBnetAccountId()) {
          output.writeMessage(1, getBnetAccountId());
        }
        if (hasGameAccountId()) {
          output.writeMessage(2, getGameAccountId());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasBnetAccountId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getBnetAccountId());
        }
        if (hasGameAccountId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getGameAccountId());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account result;
        
        // Construct using bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account();
          return builder;
        }
        
        protected bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDescriptor();
        }
        
        public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account getDefaultInstanceForType() {
          return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account) {
            return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account other) {
          if (other == bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance()) return this;
          if (other.hasBnetAccountId()) {
            mergeBnetAccountId(other.getBnetAccountId());
          }
          if (other.hasGameAccountId()) {
            mergeGameAccountId(other.getGameAccountId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
                if (hasBnetAccountId()) {
                  subBuilder.mergeFrom(getBnetAccountId());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setBnetAccountId(subBuilder.buildPartial());
                break;
              }
              case 18: {
                bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
                if (hasGameAccountId()) {
                  subBuilder.mergeFrom(getGameAccountId());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setGameAccountId(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required .bnet.protocol.EntityId bnet_account_id = 1;
        public boolean hasBnetAccountId() {
          return result.hasBnetAccountId();
        }
        public bnet.protocol.Entity.EntityId getBnetAccountId() {
          return result.getBnetAccountId();
        }
        public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasBnetAccountId = true;
          result.bnetAccountId_ = value;
          return this;
        }
        public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
          result.hasBnetAccountId = true;
          result.bnetAccountId_ = builderForValue.build();
          return this;
        }
        public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
          if (result.hasBnetAccountId() &&
              result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
            result.bnetAccountId_ =
              bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
          } else {
            result.bnetAccountId_ = value;
          }
          result.hasBnetAccountId = true;
          return this;
        }
        public Builder clearBnetAccountId() {
          result.hasBnetAccountId = false;
          result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
          return this;
        }
        
        // required .bnet.protocol.EntityId game_account_id = 2;
        public boolean hasGameAccountId() {
          return result.hasGameAccountId();
        }
        public bnet.protocol.Entity.EntityId getGameAccountId() {
          return result.getGameAccountId();
        }
        public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasGameAccountId = true;
          result.gameAccountId_ = value;
          return this;
        }
        public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
          result.hasGameAccountId = true;
          result.gameAccountId_ = builderForValue.build();
          return this;
        }
        public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
          if (result.hasGameAccountId() &&
              result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
            result.gameAccountId_ =
              bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
          } else {
            result.gameAccountId_ = value;
          }
          result.hasGameAccountId = true;
          return this;
        }
        public Builder clearGameAccountId() {
          result.hasGameAccountId = false;
          result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.TransferToonRequest.Account)
      }
      
      static {
        defaultInstance = new Account(true);
        bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.TransferToonRequest.Account)
    }
    
    // required .bnet.protocol.EntityId toon_id = 1;
    public static final int TOON_ID_FIELD_NUMBER = 1;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // optional .bnet.protocol.game_utilities.TransferToonRequest.Account source = 2;
    public static final int SOURCE_FIELD_NUMBER = 2;
    private boolean hasSource;
    private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account source_;
    public boolean hasSource() { return hasSource; }
    public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account getSource() { return source_; }
    
    // optional .bnet.protocol.game_utilities.TransferToonRequest.Account target = 3;
    public static final int TARGET_FIELD_NUMBER = 3;
    private boolean hasTarget;
    private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account target_;
    public boolean hasTarget() { return hasTarget; }
    public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account getTarget() { return target_; }
    
    // optional .bnet.protocol.ProcessId host = 4;
    public static final int HOST_FIELD_NUMBER = 4;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      source_ = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance();
      target_ = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasToonId) return false;
      if (!getToonId().isInitialized()) return false;
      if (hasSource()) {
        if (!getSource().isInitialized()) return false;
      }
      if (hasTarget()) {
        if (!getTarget().isInitialized()) return false;
      }
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToonId()) {
        output.writeMessage(1, getToonId());
      }
      if (hasSource()) {
        output.writeMessage(2, getSource());
      }
      if (hasTarget()) {
        output.writeMessage(3, getTarget());
      }
      if (hasHost()) {
        output.writeMessage(4, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getToonId());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSource());
      }
      if (hasTarget()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTarget());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.getDefaultInstance()) return this;
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.Builder subBuilder = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.newBuilder();
              if (hasSource()) {
                subBuilder.mergeFrom(getSource());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSource(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.Builder subBuilder = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.newBuilder();
              if (hasTarget()) {
                subBuilder.mergeFrom(getTarget());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTarget(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId toon_id = 1;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.game_utilities.TransferToonRequest.Account source = 2;
      public boolean hasSource() {
        return result.hasSource();
      }
      public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account getSource() {
        return result.getSource();
      }
      public Builder setSource(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder setSource(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.Builder builderForValue) {
        result.hasSource = true;
        result.source_ = builderForValue.build();
        return this;
      }
      public Builder mergeSource(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account value) {
        if (result.hasSource() &&
            result.source_ != bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance()) {
          result.source_ =
            bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.newBuilder(result.source_).mergeFrom(value).buildPartial();
        } else {
          result.source_ = value;
        }
        result.hasSource = true;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.game_utilities.TransferToonRequest.Account target = 3;
      public boolean hasTarget() {
        return result.hasTarget();
      }
      public bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account getTarget() {
        return result.getTarget();
      }
      public Builder setTarget(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder setTarget(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.Builder builderForValue) {
        result.hasTarget = true;
        result.target_ = builderForValue.build();
        return this;
      }
      public Builder mergeTarget(bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account value) {
        if (result.hasTarget() &&
            result.target_ != bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance()) {
          result.target_ =
            bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.newBuilder(result.target_).mergeFrom(value).buildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder clearTarget() {
        result.hasTarget = false;
        result.target_ = bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 4;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.TransferToonRequest)
    }
    
    static {
      defaultInstance = new TransferToonRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.TransferToonRequest)
  }
  
  public static final class SelectToonRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SelectToonRequest.newBuilder() to construct.
    private SelectToonRequest() {
      initFields();
    }
    private SelectToonRequest(boolean noInit) {}
    
    private static final SelectToonRequest defaultInstance;
    public static SelectToonRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SelectToonRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_SelectToonRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_SelectToonRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId bnet_account_id = 1;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 1;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // required .bnet.protocol.EntityId game_account_id = 2;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // required .bnet.protocol.EntityId toon_id = 3;
    public static final int TOON_ID_FIELD_NUMBER = 3;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // optional .bnet.protocol.ProcessId host = 4;
    public static final int HOST_FIELD_NUMBER = 4;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasBnetAccountId) return false;
      if (!hasGameAccountId) return false;
      if (!hasToonId) return false;
      if (!getBnetAccountId().isInitialized()) return false;
      if (!getGameAccountId().isInitialized()) return false;
      if (!getToonId().isInitialized()) return false;
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBnetAccountId()) {
        output.writeMessage(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(2, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(3, getToonId());
      }
      if (hasHost()) {
        output.writeMessage(4, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToonId());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.getDefaultInstance()) return this;
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId bnet_account_id = 1;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId game_account_id = 2;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId toon_id = 3;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 4;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.SelectToonRequest)
    }
    
    static {
      defaultInstance = new SelectToonRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.SelectToonRequest)
  }
  
  public static final class PresenceChannelCreatedRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use PresenceChannelCreatedRequest.newBuilder() to construct.
    private PresenceChannelCreatedRequest() {
      initFields();
    }
    private PresenceChannelCreatedRequest(boolean noInit) {}
    
    private static final PresenceChannelCreatedRequest defaultInstance;
    public static PresenceChannelCreatedRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public PresenceChannelCreatedRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private bnet.protocol.Entity.EntityId id_;
    public boolean hasId() { return hasId; }
    public bnet.protocol.Entity.EntityId getId() { return id_; }
    
    // optional .bnet.protocol.EntityId toon_id = 2;
    public static final int TOON_ID_FIELD_NUMBER = 2;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // optional .bnet.protocol.EntityId game_account_id = 3;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 3;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // optional .bnet.protocol.EntityId bnet_account_id = 4;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 4;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // optional .bnet.protocol.ProcessId host = 5;
    public static final int HOST_FIELD_NUMBER = 5;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      id_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!getId().isInitialized()) return false;
      if (hasToonId()) {
        if (!getToonId().isInitialized()) return false;
      }
      if (hasGameAccountId()) {
        if (!getGameAccountId().isInitialized()) return false;
      }
      if (hasBnetAccountId()) {
        if (!getBnetAccountId().isInitialized()) return false;
      }
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeMessage(1, getId());
      }
      if (hasToonId()) {
        output.writeMessage(2, getToonId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(3, getGameAccountId());
      }
      if (hasBnetAccountId()) {
        output.writeMessage(4, getBnetAccountId());
      }
      if (hasHost()) {
        output.writeMessage(5, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToonId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGameAccountId());
      }
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBnetAccountId());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasId()) {
                subBuilder.mergeFrom(getId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public bnet.protocol.Entity.EntityId getId() {
        return result.getId();
      }
      public Builder setId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder setId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasId = true;
        result.id_ = builderForValue.build();
        return this;
      }
      public Builder mergeId(bnet.protocol.Entity.EntityId value) {
        if (result.hasId() &&
            result.id_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.id_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.id_).mergeFrom(value).buildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId toon_id = 2;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId game_account_id = 3;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId bnet_account_id = 4;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 5;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.PresenceChannelCreatedRequest)
    }
    
    static {
      defaultInstance = new PresenceChannelCreatedRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.PresenceChannelCreatedRequest)
  }
  
  public static final class PlayerVariablesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use PlayerVariablesRequest.newBuilder() to construct.
    private PlayerVariablesRequest() {
      initFields();
    }
    private PlayerVariablesRequest(boolean noInit) {}
    
    private static final PlayerVariablesRequest defaultInstance;
    public static PlayerVariablesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlayerVariablesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId bnet_account_id = 1;
    public static final int BNET_ACCOUNT_ID_FIELD_NUMBER = 1;
    private boolean hasBnetAccountId;
    private bnet.protocol.Entity.EntityId bnetAccountId_;
    public boolean hasBnetAccountId() { return hasBnetAccountId; }
    public bnet.protocol.Entity.EntityId getBnetAccountId() { return bnetAccountId_; }
    
    // required .bnet.protocol.EntityId game_account_id = 2;
    public static final int GAME_ACCOUNT_ID_FIELD_NUMBER = 2;
    private boolean hasGameAccountId;
    private bnet.protocol.Entity.EntityId gameAccountId_;
    public boolean hasGameAccountId() { return hasGameAccountId; }
    public bnet.protocol.Entity.EntityId getGameAccountId() { return gameAccountId_; }
    
    // required .bnet.protocol.EntityId toon_id = 3;
    public static final int TOON_ID_FIELD_NUMBER = 3;
    private boolean hasToonId;
    private bnet.protocol.Entity.EntityId toonId_;
    public boolean hasToonId() { return hasToonId; }
    public bnet.protocol.Entity.EntityId getToonId() { return toonId_; }
    
    // repeated string variable = 4;
    public static final int VARIABLE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> variable_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getVariableList() {
      return variable_;
    }
    public int getVariableCount() { return variable_.size(); }
    public java.lang.String getVariable(int index) {
      return variable_.get(index);
    }
    
    // optional .bnet.protocol.ProcessId host = 5;
    public static final int HOST_FIELD_NUMBER = 5;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasBnetAccountId) return false;
      if (!hasGameAccountId) return false;
      if (!hasToonId) return false;
      if (!getBnetAccountId().isInitialized()) return false;
      if (!getGameAccountId().isInitialized()) return false;
      if (!getToonId().isInitialized()) return false;
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBnetAccountId()) {
        output.writeMessage(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        output.writeMessage(2, getGameAccountId());
      }
      if (hasToonId()) {
        output.writeMessage(3, getToonId());
      }
      for (java.lang.String element : getVariableList()) {
        output.writeString(4, element);
      }
      if (hasHost()) {
        output.writeMessage(5, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBnetAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBnetAccountId());
      }
      if (hasGameAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameAccountId());
      }
      if (hasToonId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToonId());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getVariableList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getVariableList().size();
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.variable_ != java.util.Collections.EMPTY_LIST) {
          result.variable_ =
            java.util.Collections.unmodifiableList(result.variable_);
        }
        bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.getDefaultInstance()) return this;
        if (other.hasBnetAccountId()) {
          mergeBnetAccountId(other.getBnetAccountId());
        }
        if (other.hasGameAccountId()) {
          mergeGameAccountId(other.getGameAccountId());
        }
        if (other.hasToonId()) {
          mergeToonId(other.getToonId());
        }
        if (!other.variable_.isEmpty()) {
          if (result.variable_.isEmpty()) {
            result.variable_ = new java.util.ArrayList<java.lang.String>();
          }
          result.variable_.addAll(other.variable_);
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasBnetAccountId()) {
                subBuilder.mergeFrom(getBnetAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBnetAccountId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasGameAccountId()) {
                subBuilder.mergeFrom(getGameAccountId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameAccountId(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasToonId()) {
                subBuilder.mergeFrom(getToonId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setToonId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              addVariable(input.readString());
              break;
            }
            case 42: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId bnet_account_id = 1;
      public boolean hasBnetAccountId() {
        return result.hasBnetAccountId();
      }
      public bnet.protocol.Entity.EntityId getBnetAccountId() {
        return result.getBnetAccountId();
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = value;
        return this;
      }
      public Builder setBnetAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasBnetAccountId = true;
        result.bnetAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeBnetAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasBnetAccountId() &&
            result.bnetAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.bnetAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.bnetAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.bnetAccountId_ = value;
        }
        result.hasBnetAccountId = true;
        return this;
      }
      public Builder clearBnetAccountId() {
        result.hasBnetAccountId = false;
        result.bnetAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId game_account_id = 2;
      public boolean hasGameAccountId() {
        return result.hasGameAccountId();
      }
      public bnet.protocol.Entity.EntityId getGameAccountId() {
        return result.getGameAccountId();
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder setGameAccountId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameAccountId(bnet.protocol.Entity.EntityId value) {
        if (result.hasGameAccountId() &&
            result.gameAccountId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.gameAccountId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.gameAccountId_).mergeFrom(value).buildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder clearGameAccountId() {
        result.hasGameAccountId = false;
        result.gameAccountId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId toon_id = 3;
      public boolean hasToonId() {
        return result.hasToonId();
      }
      public bnet.protocol.Entity.EntityId getToonId() {
        return result.getToonId();
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasToonId = true;
        result.toonId_ = value;
        return this;
      }
      public Builder setToonId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasToonId = true;
        result.toonId_ = builderForValue.build();
        return this;
      }
      public Builder mergeToonId(bnet.protocol.Entity.EntityId value) {
        if (result.hasToonId() &&
            result.toonId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.toonId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.toonId_).mergeFrom(value).buildPartial();
        } else {
          result.toonId_ = value;
        }
        result.hasToonId = true;
        return this;
      }
      public Builder clearToonId() {
        result.hasToonId = false;
        result.toonId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // repeated string variable = 4;
      public java.util.List<java.lang.String> getVariableList() {
        return java.util.Collections.unmodifiableList(result.variable_);
      }
      public int getVariableCount() {
        return result.getVariableCount();
      }
      public java.lang.String getVariable(int index) {
        return result.getVariable(index);
      }
      public Builder setVariable(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.variable_.set(index, value);
        return this;
      }
      public Builder addVariable(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.variable_.isEmpty()) {
          result.variable_ = new java.util.ArrayList<java.lang.String>();
        }
        result.variable_.add(value);
        return this;
      }
      public Builder addAllVariable(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.variable_.isEmpty()) {
          result.variable_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.variable_);
        return this;
      }
      public Builder clearVariable() {
        result.variable_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 5;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.PlayerVariablesRequest)
    }
    
    static {
      defaultInstance = new PlayerVariablesRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.PlayerVariablesRequest)
  }
  
  public static final class GameVariablesRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GameVariablesRequest.newBuilder() to construct.
    private GameVariablesRequest() {
      initFields();
    }
    private GameVariablesRequest(boolean noInit) {}
    
    private static final GameVariablesRequest defaultInstance;
    public static GameVariablesRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameVariablesRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_GameVariablesRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_GameVariablesRequest_fieldAccessorTable;
    }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 1;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private java.util.List<bnet.protocol.attribute.CAttribute.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    // repeated string variable = 2;
    public static final int VARIABLE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> variable_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getVariableList() {
      return variable_;
    }
    public int getVariableCount() { return variable_.size(); }
    public java.lang.String getVariable(int index) {
      return variable_.get(index);
    }
    
    // optional .bnet.protocol.ProcessId host = 3;
    public static final int HOST_FIELD_NUMBER = 3;
    private boolean hasHost;
    private bnet.protocol.Rpc.ProcessId host_;
    public boolean hasHost() { return hasHost; }
    public bnet.protocol.Rpc.ProcessId getHost() { return host_; }
    
    private void initFields() {
      host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasHost()) {
        if (!getHost().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        output.writeMessage(1, element);
      }
      for (java.lang.String element : getVariableList()) {
        output.writeString(2, element);
      }
      if (hasHost()) {
        output.writeMessage(3, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getVariableList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getVariableList().size();
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        if (result.variable_ != java.util.Collections.EMPTY_LIST) {
          result.variable_ =
            java.util.Collections.unmodifiableList(result.variable_);
        }
        bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.getDefaultInstance()) return this;
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        if (!other.variable_.isEmpty()) {
          if (result.variable_.isEmpty()) {
            result.variable_ = new java.util.ArrayList<java.lang.String>();
          }
          result.variable_.addAll(other.variable_);
        }
        if (other.hasHost()) {
          mergeHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.attribute.CAttribute.Attribute.Builder subBuilder = bnet.protocol.attribute.CAttribute.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
            case 18: {
              addVariable(input.readString());
              break;
            }
            case 26: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasHost()) {
                subBuilder.mergeFrom(getHost());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 1;
      public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.CAttribute.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string variable = 2;
      public java.util.List<java.lang.String> getVariableList() {
        return java.util.Collections.unmodifiableList(result.variable_);
      }
      public int getVariableCount() {
        return result.getVariableCount();
      }
      public java.lang.String getVariable(int index) {
        return result.getVariable(index);
      }
      public Builder setVariable(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.variable_.set(index, value);
        return this;
      }
      public Builder addVariable(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.variable_.isEmpty()) {
          result.variable_ = new java.util.ArrayList<java.lang.String>();
        }
        result.variable_.add(value);
        return this;
      }
      public Builder addAllVariable(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.variable_.isEmpty()) {
          result.variable_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.variable_);
        return this;
      }
      public Builder clearVariable() {
        result.variable_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .bnet.protocol.ProcessId host = 3;
      public boolean hasHost() {
        return result.hasHost();
      }
      public bnet.protocol.Rpc.ProcessId getHost() {
        return result.getHost();
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder setHost(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasHost = true;
        result.host_ = builderForValue.build();
        return this;
      }
      public Builder mergeHost(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasHost() &&
            result.host_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.host_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.host_).mergeFrom(value).buildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.GameVariablesRequest)
    }
    
    static {
      defaultInstance = new GameVariablesRequest(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.GameVariablesRequest)
  }
  
  public static final class VariablesResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use VariablesResponse.newBuilder() to construct.
    private VariablesResponse() {
      initFields();
    }
    private VariablesResponse(boolean noInit) {}
    
    private static final VariablesResponse defaultInstance;
    public static VariablesResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public VariablesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_VariablesResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.game_utilities.CGameUtilies.internal_static_bnet_protocol_game_utilities_VariablesResponse_fieldAccessorTable;
    }
    
    // repeated float value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Float> value_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Float> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public float getValue(int index) {
      return value_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (float element : getValueList()) {
        output.writeFloat(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getValueList().size();
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.game_utilities.CGameUtilies.VariablesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.game_utilities.CGameUtilies.VariablesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.game_utilities.CGameUtilies.VariablesResponse result;
      
      // Construct using bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.game_utilities.CGameUtilies.VariablesResponse();
        return builder;
      }
      
      protected bnet.protocol.game_utilities.CGameUtilies.VariablesResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.game_utilities.CGameUtilies.VariablesResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDescriptor();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse getDefaultInstanceForType() {
        return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.game_utilities.CGameUtilies.VariablesResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        bnet.protocol.game_utilities.CGameUtilies.VariablesResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.game_utilities.CGameUtilies.VariablesResponse) {
          return mergeFrom((bnet.protocol.game_utilities.CGameUtilies.VariablesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.game_utilities.CGameUtilies.VariablesResponse other) {
        if (other == bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<java.lang.Float>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 13: {
              addValue(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValue(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated float value = 1;
      public java.util.List<java.lang.Float> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public float getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, float value) {
        result.value_.set(index, value);
        return this;
      }
      public Builder addValue(float value) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<java.lang.Float>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<java.lang.Float>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.game_utilities.VariablesResponse)
    }
    
    static {
      defaultInstance = new VariablesResponse(true);
      bnet.protocol.game_utilities.CGameUtilies.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.game_utilities.VariablesResponse)
  }
  
  public static abstract class GameUtilities
      implements com.google.protobuf.Service {
    protected GameUtilities() {}
    
    public interface Interface {
      public abstract void processClientRequest(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.ClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.ClientResponse> done);
      
      public abstract void createToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse> done);
      
      public abstract void deleteToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void transferToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void selectToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void presenceChannelCreated(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void getPlayerVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done);
      
      public abstract void getGameVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done);
      
      public abstract void getLoad(
          com.google.protobuf.RpcController controller,
          bnet.protocol.server_pool.ServerPool.GetLoadRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.server_pool.ServerPool.ServerState> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new GameUtilities() {
        @Override
        public  void processClientRequest(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.ClientRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.ClientResponse> done) {
          impl.processClientRequest(controller, request, done);
        }
        
        @Override
        public  void createToon(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse> done) {
          impl.createToon(controller, request, done);
        }
        
        @Override
        public  void deleteToon(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.deleteToon(controller, request, done);
        }
        
        @Override
        public  void transferToon(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.transferToon(controller, request, done);
        }
        
        @Override
        public  void selectToon(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.selectToon(controller, request, done);
        }
        
        @Override
        public  void presenceChannelCreated(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.presenceChannelCreated(controller, request, done);
        }
        
        @Override
        public  void getPlayerVariables(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done) {
          impl.getPlayerVariables(controller, request, done);
        }
        
        @Override
        public  void getGameVariables(
            com.google.protobuf.RpcController controller,
            bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done) {
          impl.getGameVariables(controller, request, done);
        }
        
        @Override
        public  void getLoad(
            com.google.protobuf.RpcController controller,
            bnet.protocol.server_pool.ServerPool.GetLoadRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.server_pool.ServerPool.ServerState> done) {
          impl.getLoad(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.processClientRequest(controller, (bnet.protocol.game_utilities.CGameUtilies.ClientRequest)request);
            case 1:
              return impl.createToon(controller, (bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest)request);
            case 2:
              return impl.deleteToon(controller, (bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest)request);
            case 3:
              return impl.transferToon(controller, (bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest)request);
            case 4:
              return impl.selectToon(controller, (bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest)request);
            case 5:
              return impl.presenceChannelCreated(controller, (bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest)request);
            case 6:
              return impl.getPlayerVariables(controller, (bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest)request);
            case 7:
              return impl.getGameVariables(controller, (bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest)request);
            case 8:
              return impl.getLoad(controller, (bnet.protocol.server_pool.ServerPool.GetLoadRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.game_utilities.CGameUtilies.ClientRequest.getDefaultInstance();
            case 1:
              return bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.getDefaultInstance();
            case 2:
              return bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.getDefaultInstance();
            case 3:
              return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.getDefaultInstance();
            case 4:
              return bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.getDefaultInstance();
            case 5:
              return bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.getDefaultInstance();
            case 6:
              return bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.getDefaultInstance();
            case 7:
              return bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.getDefaultInstance();
            case 8:
              return bnet.protocol.server_pool.ServerPool.GetLoadRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance();
            case 1:
              return bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance();
            case 2:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 3:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 4:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 5:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 6:
              return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance();
            case 7:
              return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance();
            case 8:
              return bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void processClientRequest(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.ClientRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.ClientResponse> done);
    
    public abstract void createToon(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse> done);
    
    public abstract void deleteToon(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void transferToon(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void selectToon(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void presenceChannelCreated(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void getPlayerVariables(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done);
    
    public abstract void getGameVariables(
        com.google.protobuf.RpcController controller,
        bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done);
    
    public abstract void getLoad(
        com.google.protobuf.RpcController controller,
        bnet.protocol.server_pool.ServerPool.GetLoadRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.server_pool.ServerPool.ServerState> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return bnet.protocol.game_utilities.CGameUtilies.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.processClientRequest(controller, (bnet.protocol.game_utilities.CGameUtilies.ClientRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.game_utilities.CGameUtilies.ClientResponse>specializeCallback(
              done));
          return;
        case 1:
          this.createToon(controller, (bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse>specializeCallback(
              done));
          return;
        case 2:
          this.deleteToon(controller, (bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 3:
          this.transferToon(controller, (bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 4:
          this.selectToon(controller, (bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 5:
          this.presenceChannelCreated(controller, (bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 6:
          this.getPlayerVariables(controller, (bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse>specializeCallback(
              done));
          return;
        case 7:
          this.getGameVariables(controller, (bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse>specializeCallback(
              done));
          return;
        case 8:
          this.getLoad(controller, (bnet.protocol.server_pool.ServerPool.GetLoadRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.server_pool.ServerPool.ServerState>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.game_utilities.CGameUtilies.ClientRequest.getDefaultInstance();
        case 1:
          return bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.getDefaultInstance();
        case 2:
          return bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.getDefaultInstance();
        case 3:
          return bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.getDefaultInstance();
        case 4:
          return bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.getDefaultInstance();
        case 5:
          return bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.getDefaultInstance();
        case 6:
          return bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.getDefaultInstance();
        case 7:
          return bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.getDefaultInstance();
        case 8:
          return bnet.protocol.server_pool.ServerPool.GetLoadRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance();
        case 1:
          return bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance();
        case 2:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 3:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 4:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 5:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 6:
          return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance();
        case 7:
          return bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance();
        case 8:
          return bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends bnet.protocol.game_utilities.CGameUtilies.GameUtilities implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void processClientRequest(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.ClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.ClientResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.game_utilities.CGameUtilies.ClientResponse.class,
            bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance()));
      }
      
      public  void createToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.class,
            bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance()));
      }
      
      public  void deleteToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void transferToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void selectToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void presenceChannelCreated(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void getPlayerVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.class,
            bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance()));
      }
      
      public  void getGameVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.game_utilities.CGameUtilies.VariablesResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.class,
            bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance()));
      }
      
      public  void getLoad(
          com.google.protobuf.RpcController controller,
          bnet.protocol.server_pool.ServerPool.GetLoadRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.server_pool.ServerPool.ServerState> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.server_pool.ServerPool.ServerState.class,
            bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public bnet.protocol.game_utilities.CGameUtilies.ClientResponse processClientRequest(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.ClientRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse createToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData deleteToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData transferToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData selectToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData presenceChannelCreated(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse getPlayerVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse getGameVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.server_pool.ServerPool.ServerState getLoad(
          com.google.protobuf.RpcController controller,
          bnet.protocol.server_pool.ServerPool.GetLoadRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public bnet.protocol.game_utilities.CGameUtilies.ClientResponse processClientRequest(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.ClientRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.game_utilities.CGameUtilies.ClientResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.ClientResponse.getDefaultInstance());
      }
      
      
      public bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse createToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData deleteToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData transferToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData selectToon(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData presenceChannelCreated(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse getPlayerVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.game_utilities.CGameUtilies.VariablesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance());
      }
      
      
      public bnet.protocol.game_utilities.CGameUtilies.VariablesResponse getGameVariables(
          com.google.protobuf.RpcController controller,
          bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.game_utilities.CGameUtilies.VariablesResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.getDefaultInstance());
      }
      
      
      public bnet.protocol.server_pool.ServerPool.ServerState getLoad(
          com.google.protobuf.RpcController controller,
          bnet.protocol.server_pool.ServerPool.GetLoadRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.server_pool.ServerPool.ServerState) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          bnet.protocol.server_pool.ServerPool.ServerState.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_ClientRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_ClientRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_ClientResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_ClientResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_CreateToonRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_CreateToonRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_CreateToonResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_CreateToonResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_DeleteToonRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_DeleteToonRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_TransferToonRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_TransferToonRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_SelectToonRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_SelectToonRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_GameVariablesRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_GameVariablesRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_game_utilities_VariablesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_game_utilities_VariablesResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+service/game_utilities/game_utilities." +
      "proto\022\034bnet.protocol.game_utilities\032%ser" +
      "vice/game_master/game_master.proto\032%serv" +
      "ice/server_pool/server_pool.proto\032\034lib/p" +
      "rotocol/attribute.proto\032\031lib/protocol/en" +
      "tity.proto\032\021lib/rpc/rpc.proto\"\374\001\n\rClient" +
      "Request\0225\n\tattribute\030\001 \003(\0132\".bnet.protoc" +
      "ol.attribute.Attribute\022&\n\004host\030\002 \001(\0132\030.b" +
      "net.protocol.ProcessId\0220\n\017bnet_account_i" +
      "d\030\003 \001(\0132\027.bnet.protocol.EntityId\0220\n\017game",
      "_account_id\030\004 \001(\0132\027.bnet.protocol.Entity" +
      "Id\022(\n\007toon_id\030\005 \001(\0132\027.bnet.protocol.Enti" +
      "tyId\"G\n\016ClientResponse\0225\n\tattribute\030\001 \003(" +
      "\0132\".bnet.protocol.attribute.Attribute\"\216\002" +
      "\n\021CreateToonRequest\0220\n\017bnet_account_id\030\001" +
      " \002(\0132\027.bnet.protocol.EntityId\0220\n\017game_ac" +
      "count_id\030\002 \002(\0132\027.bnet.protocol.EntityId\022" +
      "(\n\007toon_id\030\003 \002(\0132\027.bnet.protocol.EntityI" +
      "d\022\014\n\004name\030\004 \002(\t\0225\n\tattribute\030\005 \003(\0132\".bne" +
      "t.protocol.attribute.Attribute\022&\n\004host\030\006",
      " \001(\0132\030.bnet.protocol.ProcessId\"\"\n\022Create" +
      "ToonResponse\022\014\n\004name\030\001 \001(\t\"\311\001\n\021DeleteToo" +
      "nRequest\0220\n\017bnet_account_id\030\001 \001(\0132\027.bnet" +
      ".protocol.EntityId\0220\n\017game_account_id\030\002 " +
      "\001(\0132\027.bnet.protocol.EntityId\022(\n\007toon_id\030" +
      "\003 \002(\0132\027.bnet.protocol.EntityId\022&\n\004host\030\004" +
      " \001(\0132\030.bnet.protocol.ProcessId\"\354\002\n\023Trans" +
      "ferToonRequest\022(\n\007toon_id\030\001 \002(\0132\027.bnet.p" +
      "rotocol.EntityId\022I\n\006source\030\002 \001(\01329.bnet." +
      "protocol.game_utilities.TransferToonRequ",
      "est.Account\022I\n\006target\030\003 \001(\01329.bnet.proto" +
      "col.game_utilities.TransferToonRequest.A" +
      "ccount\022&\n\004host\030\004 \001(\0132\030.bnet.protocol.Pro" +
      "cessId\032m\n\007Account\0220\n\017bnet_account_id\030\001 \002" +
      "(\0132\027.bnet.protocol.EntityId\0220\n\017game_acco" +
      "unt_id\030\002 \002(\0132\027.bnet.protocol.EntityId\"\311\001" +
      "\n\021SelectToonRequest\0220\n\017bnet_account_id\030\001" +
      " \002(\0132\027.bnet.protocol.EntityId\0220\n\017game_ac" +
      "count_id\030\002 \002(\0132\027.bnet.protocol.EntityId\022" +
      "(\n\007toon_id\030\003 \002(\0132\027.bnet.protocol.EntityI",
      "d\022&\n\004host\030\004 \001(\0132\030.bnet.protocol.ProcessI" +
      "d\"\372\001\n\035PresenceChannelCreatedRequest\022#\n\002i" +
      "d\030\001 \002(\0132\027.bnet.protocol.EntityId\022(\n\007toon" +
      "_id\030\002 \001(\0132\027.bnet.protocol.EntityId\0220\n\017ga" +
      "me_account_id\030\003 \001(\0132\027.bnet.protocol.Enti" +
      "tyId\0220\n\017bnet_account_id\030\004 \001(\0132\027.bnet.pro" +
      "tocol.EntityId\022&\n\004host\030\005 \001(\0132\030.bnet.prot" +
      "ocol.ProcessId\"\340\001\n\026PlayerVariablesReques" +
      "t\0220\n\017bnet_account_id\030\001 \002(\0132\027.bnet.protoc" +
      "ol.EntityId\0220\n\017game_account_id\030\002 \002(\0132\027.b",
      "net.protocol.EntityId\022(\n\007toon_id\030\003 \002(\0132\027" +
      ".bnet.protocol.EntityId\022\020\n\010variable\030\004 \003(" +
      "\t\022&\n\004host\030\005 \001(\0132\030.bnet.protocol.ProcessI" +
      "d\"\207\001\n\024GameVariablesRequest\0225\n\tattribute\030" +
      "\001 \003(\0132\".bnet.protocol.attribute.Attribut" +
      "e\022\020\n\010variable\030\002 \003(\t\022&\n\004host\030\003 \001(\0132\030.bnet" +
      ".protocol.ProcessId\"\"\n\021VariablesResponse" +
      "\022\r\n\005value\030\001 \003(\0022\273\007\n\rGameUtilities\022q\n\024Pro" +
      "cessClientRequest\022+.bnet.protocol.game_u" +
      "tilities.ClientRequest\032,.bnet.protocol.g",
      "ame_utilities.ClientResponse\022o\n\nCreateTo" +
      "on\022/.bnet.protocol.game_utilities.Create" +
      "ToonRequest\0320.bnet.protocol.game_utiliti" +
      "es.CreateToonResponse\022T\n\nDeleteToon\022/.bn" +
      "et.protocol.game_utilities.DeleteToonReq" +
      "uest\032\025.bnet.protocol.NoData\022X\n\014TransferT" +
      "oon\0221.bnet.protocol.game_utilities.Trans" +
      "ferToonRequest\032\025.bnet.protocol.NoData\022T\n" +
      "\nSelectToon\022/.bnet.protocol.game_utiliti" +
      "es.SelectToonRequest\032\025.bnet.protocol.NoD",
      "ata\022l\n\026PresenceChannelCreated\022;.bnet.pro" +
      "tocol.game_utilities.PresenceChannelCrea" +
      "tedRequest\032\025.bnet.protocol.NoData\022{\n\022Get" +
      "PlayerVariables\0224.bnet.protocol.game_uti" +
      "lities.PlayerVariablesRequest\032/.bnet.pro" +
      "tocol.game_utilities.VariablesResponse\022w" +
      "\n\020GetGameVariables\0222.bnet.protocol.game_" +
      "utilities.GameVariablesRequest\032/.bnet.pr" +
      "otocol.game_utilities.VariablesResponse\022" +
      "\\\n\007GetLoad\022).bnet.protocol.server_pool.G",
      "etLoadRequest\032&.bnet.protocol.server_poo" +
      "l.ServerStateB\021B\014CGameUtilies\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_game_utilities_ClientRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_game_utilities_ClientRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_ClientRequest_descriptor,
              new java.lang.String[] { "Attribute", "Host", "BnetAccountId", "GameAccountId", "ToonId", },
              bnet.protocol.game_utilities.CGameUtilies.ClientRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.ClientRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_ClientResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_game_utilities_ClientResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_ClientResponse_descriptor,
              new java.lang.String[] { "Attribute", },
              bnet.protocol.game_utilities.CGameUtilies.ClientResponse.class,
              bnet.protocol.game_utilities.CGameUtilies.ClientResponse.Builder.class);
          internal_static_bnet_protocol_game_utilities_CreateToonRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_game_utilities_CreateToonRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_CreateToonRequest_descriptor,
              new java.lang.String[] { "BnetAccountId", "GameAccountId", "ToonId", "Name", "Attribute", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.CreateToonRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_CreateToonResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_game_utilities_CreateToonResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_CreateToonResponse_descriptor,
              new java.lang.String[] { "Name", },
              bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.class,
              bnet.protocol.game_utilities.CGameUtilies.CreateToonResponse.Builder.class);
          internal_static_bnet_protocol_game_utilities_DeleteToonRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_game_utilities_DeleteToonRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_DeleteToonRequest_descriptor,
              new java.lang.String[] { "BnetAccountId", "GameAccountId", "ToonId", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.DeleteToonRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_TransferToonRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_bnet_protocol_game_utilities_TransferToonRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_TransferToonRequest_descriptor,
              new java.lang.String[] { "ToonId", "Source", "Target", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_descriptor =
            internal_static_bnet_protocol_game_utilities_TransferToonRequest_descriptor.getNestedTypes().get(0);
          internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_TransferToonRequest_Account_descriptor,
              new java.lang.String[] { "BnetAccountId", "GameAccountId", },
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.class,
              bnet.protocol.game_utilities.CGameUtilies.TransferToonRequest.Account.Builder.class);
          internal_static_bnet_protocol_game_utilities_SelectToonRequest_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_bnet_protocol_game_utilities_SelectToonRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_SelectToonRequest_descriptor,
              new java.lang.String[] { "BnetAccountId", "GameAccountId", "ToonId", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.SelectToonRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_PresenceChannelCreatedRequest_descriptor,
              new java.lang.String[] { "Id", "ToonId", "GameAccountId", "BnetAccountId", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.PresenceChannelCreatedRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_PlayerVariablesRequest_descriptor,
              new java.lang.String[] { "BnetAccountId", "GameAccountId", "ToonId", "Variable", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.PlayerVariablesRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_GameVariablesRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_bnet_protocol_game_utilities_GameVariablesRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_GameVariablesRequest_descriptor,
              new java.lang.String[] { "Attribute", "Variable", "Host", },
              bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.class,
              bnet.protocol.game_utilities.CGameUtilies.GameVariablesRequest.Builder.class);
          internal_static_bnet_protocol_game_utilities_VariablesResponse_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_bnet_protocol_game_utilities_VariablesResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_game_utilities_VariablesResponse_descriptor,
              new java.lang.String[] { "Value", },
              bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.class,
              bnet.protocol.game_utilities.CGameUtilies.VariablesResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.game_master.CGameMaster.getDescriptor(),
          bnet.protocol.server_pool.ServerPool.getDescriptor(),
          bnet.protocol.attribute.CAttribute.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
