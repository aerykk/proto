// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/notification/notification.proto

package bnet.protocol.notification;

public final class CNotification {
  private CNotification() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Notification extends
      com.google.protobuf.GeneratedMessage {
    // Use Notification.newBuilder() to construct.
    private Notification() {
      initFields();
    }
    private Notification(boolean noInit) {}
    
    private static final Notification defaultInstance;
    public static Notification getDefaultInstance() {
      return defaultInstance;
    }
    
    public Notification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_Notification_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_Notification_fieldAccessorTable;
    }
    
    // optional .bnet.protocol.EntityId sender_id = 1;
    public static final int SENDER_ID_FIELD_NUMBER = 1;
    private boolean hasSenderId;
    private bnet.protocol.Entity.EntityId senderId_;
    public boolean hasSenderId() { return hasSenderId; }
    public bnet.protocol.Entity.EntityId getSenderId() { return senderId_; }
    
    // optional .bnet.protocol.EntityId sender_game_account = 2;
    public static final int SENDER_GAME_ACCOUNT_FIELD_NUMBER = 2;
    private boolean hasSenderGameAccount;
    private bnet.protocol.Entity.EntityId senderGameAccount_;
    public boolean hasSenderGameAccount() { return hasSenderGameAccount; }
    public bnet.protocol.Entity.EntityId getSenderGameAccount() { return senderGameAccount_; }
    
    // required .bnet.protocol.EntityId target_id = 3;
    public static final int TARGET_ID_FIELD_NUMBER = 3;
    private boolean hasTargetId;
    private bnet.protocol.Entity.EntityId targetId_;
    public boolean hasTargetId() { return hasTargetId; }
    public bnet.protocol.Entity.EntityId getTargetId() { return targetId_; }
    
    // required string type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // repeated .bnet.protocol.attribute.Attribute attribute = 5;
    public static final int ATTRIBUTE_FIELD_NUMBER = 5;
    private java.util.List<bnet.protocol.attribute.CAttribute.Attribute> attribute_ =
      java.util.Collections.emptyList();
    public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
      return attribute_;
    }
    public int getAttributeCount() { return attribute_.size(); }
    public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
      return attribute_.get(index);
    }
    
    private void initFields() {
      senderId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      senderGameAccount_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
      targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTargetId) return false;
      if (!hasType) return false;
      if (hasSenderId()) {
        if (!getSenderId().isInitialized()) return false;
      }
      if (hasSenderGameAccount()) {
        if (!getSenderGameAccount().isInitialized()) return false;
      }
      if (!getTargetId().isInitialized()) return false;
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSenderId()) {
        output.writeMessage(1, getSenderId());
      }
      if (hasSenderGameAccount()) {
        output.writeMessage(2, getSenderGameAccount());
      }
      if (hasTargetId()) {
        output.writeMessage(3, getTargetId());
      }
      if (hasType()) {
        output.writeString(4, getType());
      }
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSenderId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSenderId());
      }
      if (hasSenderGameAccount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSenderGameAccount());
      }
      if (hasTargetId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTargetId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getType());
      }
      for (bnet.protocol.attribute.CAttribute.Attribute element : getAttributeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.notification.CNotification.Notification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.notification.CNotification.Notification result;
      
      // Construct using bnet.protocol.notification.CNotification.Notification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.notification.CNotification.Notification();
        return builder;
      }
      
      protected bnet.protocol.notification.CNotification.Notification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.notification.CNotification.Notification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.notification.CNotification.Notification.getDescriptor();
      }
      
      public bnet.protocol.notification.CNotification.Notification getDefaultInstanceForType() {
        return bnet.protocol.notification.CNotification.Notification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.notification.CNotification.Notification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.notification.CNotification.Notification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.notification.CNotification.Notification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.attribute_ != java.util.Collections.EMPTY_LIST) {
          result.attribute_ =
            java.util.Collections.unmodifiableList(result.attribute_);
        }
        bnet.protocol.notification.CNotification.Notification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.notification.CNotification.Notification) {
          return mergeFrom((bnet.protocol.notification.CNotification.Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.notification.CNotification.Notification other) {
        if (other == bnet.protocol.notification.CNotification.Notification.getDefaultInstance()) return this;
        if (other.hasSenderId()) {
          mergeSenderId(other.getSenderId());
        }
        if (other.hasSenderGameAccount()) {
          mergeSenderGameAccount(other.getSenderGameAccount());
        }
        if (other.hasTargetId()) {
          mergeTargetId(other.getTargetId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.attribute_.isEmpty()) {
          if (result.attribute_.isEmpty()) {
            result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
          }
          result.attribute_.addAll(other.attribute_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasSenderId()) {
                subBuilder.mergeFrom(getSenderId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSenderId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasSenderGameAccount()) {
                subBuilder.mergeFrom(getSenderGameAccount());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSenderGameAccount(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasTargetId()) {
                subBuilder.mergeFrom(getTargetId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTargetId(subBuilder.buildPartial());
              break;
            }
            case 34: {
              setType(input.readString());
              break;
            }
            case 42: {
              bnet.protocol.attribute.CAttribute.Attribute.Builder subBuilder = bnet.protocol.attribute.CAttribute.Attribute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttribute(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .bnet.protocol.EntityId sender_id = 1;
      public boolean hasSenderId() {
        return result.hasSenderId();
      }
      public bnet.protocol.Entity.EntityId getSenderId() {
        return result.getSenderId();
      }
      public Builder setSenderId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder setSenderId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasSenderId = true;
        result.senderId_ = builderForValue.build();
        return this;
      }
      public Builder mergeSenderId(bnet.protocol.Entity.EntityId value) {
        if (result.hasSenderId() &&
            result.senderId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.senderId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.senderId_).mergeFrom(value).buildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder clearSenderId() {
        result.hasSenderId = false;
        result.senderId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // optional .bnet.protocol.EntityId sender_game_account = 2;
      public boolean hasSenderGameAccount() {
        return result.hasSenderGameAccount();
      }
      public bnet.protocol.Entity.EntityId getSenderGameAccount() {
        return result.getSenderGameAccount();
      }
      public Builder setSenderGameAccount(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSenderGameAccount = true;
        result.senderGameAccount_ = value;
        return this;
      }
      public Builder setSenderGameAccount(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasSenderGameAccount = true;
        result.senderGameAccount_ = builderForValue.build();
        return this;
      }
      public Builder mergeSenderGameAccount(bnet.protocol.Entity.EntityId value) {
        if (result.hasSenderGameAccount() &&
            result.senderGameAccount_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.senderGameAccount_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.senderGameAccount_).mergeFrom(value).buildPartial();
        } else {
          result.senderGameAccount_ = value;
        }
        result.hasSenderGameAccount = true;
        return this;
      }
      public Builder clearSenderGameAccount() {
        result.hasSenderGameAccount = false;
        result.senderGameAccount_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required .bnet.protocol.EntityId target_id = 3;
      public boolean hasTargetId() {
        return result.hasTargetId();
      }
      public bnet.protocol.Entity.EntityId getTargetId() {
        return result.getTargetId();
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder setTargetId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasTargetId = true;
        result.targetId_ = builderForValue.build();
        return this;
      }
      public Builder mergeTargetId(bnet.protocol.Entity.EntityId value) {
        if (result.hasTargetId() &&
            result.targetId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.targetId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.targetId_).mergeFrom(value).buildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder clearTargetId() {
        result.hasTargetId = false;
        result.targetId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // required string type = 4;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // repeated .bnet.protocol.attribute.Attribute attribute = 5;
      public java.util.List<bnet.protocol.attribute.CAttribute.Attribute> getAttributeList() {
        return java.util.Collections.unmodifiableList(result.attribute_);
      }
      public int getAttributeCount() {
        return result.getAttributeCount();
      }
      public bnet.protocol.attribute.CAttribute.Attribute getAttribute(int index) {
        return result.getAttribute(index);
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attribute_.set(index, value);
        return this;
      }
      public Builder setAttribute(int index, bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        result.attribute_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(value);
        return this;
      }
      public Builder addAttribute(bnet.protocol.attribute.CAttribute.Attribute.Builder builderForValue) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        result.attribute_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttribute(
          java.lang.Iterable<? extends bnet.protocol.attribute.CAttribute.Attribute> values) {
        if (result.attribute_.isEmpty()) {
          result.attribute_ = new java.util.ArrayList<bnet.protocol.attribute.CAttribute.Attribute>();
        }
        super.addAll(values, result.attribute_);
        return this;
      }
      public Builder clearAttribute() {
        result.attribute_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.notification.Notification)
    }
    
    static {
      defaultInstance = new Notification(true);
      bnet.protocol.notification.CNotification.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.notification.Notification)
  }
  
  public static final class FindClientRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use FindClientRequest.newBuilder() to construct.
    private FindClientRequest() {
      initFields();
    }
    private FindClientRequest(boolean noInit) {}
    
    private static final FindClientRequest defaultInstance;
    public static FindClientRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindClientRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_FindClientRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_FindClientRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId entity_id = 1;
    public static final int ENTITY_ID_FIELD_NUMBER = 1;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    private void initFields() {
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!getEntityId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntityId()) {
        output.writeMessage(1, getEntityId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntityId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.notification.CNotification.FindClientRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.notification.CNotification.FindClientRequest result;
      
      // Construct using bnet.protocol.notification.CNotification.FindClientRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.notification.CNotification.FindClientRequest();
        return builder;
      }
      
      protected bnet.protocol.notification.CNotification.FindClientRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.notification.CNotification.FindClientRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.notification.CNotification.FindClientRequest.getDescriptor();
      }
      
      public bnet.protocol.notification.CNotification.FindClientRequest getDefaultInstanceForType() {
        return bnet.protocol.notification.CNotification.FindClientRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.notification.CNotification.FindClientRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.notification.CNotification.FindClientRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.notification.CNotification.FindClientRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.notification.CNotification.FindClientRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.notification.CNotification.FindClientRequest) {
          return mergeFrom((bnet.protocol.notification.CNotification.FindClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.notification.CNotification.FindClientRequest other) {
        if (other == bnet.protocol.notification.CNotification.FindClientRequest.getDefaultInstance()) return this;
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId entity_id = 1;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.notification.FindClientRequest)
    }
    
    static {
      defaultInstance = new FindClientRequest(true);
      bnet.protocol.notification.CNotification.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.notification.FindClientRequest)
  }
  
  public static final class FindClientResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use FindClientResponse.newBuilder() to construct.
    private FindClientResponse() {
      initFields();
    }
    private FindClientResponse(boolean noInit) {}
    
    private static final FindClientResponse defaultInstance;
    public static FindClientResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindClientResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_FindClientResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_FindClientResponse_fieldAccessorTable;
    }
    
    // required uint32 label = 1;
    public static final int LABEL_FIELD_NUMBER = 1;
    private boolean hasLabel;
    private int label_ = 0;
    public boolean hasLabel() { return hasLabel; }
    public int getLabel() { return label_; }
    
    // optional .bnet.protocol.ProcessId client_process_id = 2;
    public static final int CLIENT_PROCESS_ID_FIELD_NUMBER = 2;
    private boolean hasClientProcessId;
    private bnet.protocol.Rpc.ProcessId clientProcessId_;
    public boolean hasClientProcessId() { return hasClientProcessId; }
    public bnet.protocol.Rpc.ProcessId getClientProcessId() { return clientProcessId_; }
    
    private void initFields() {
      clientProcessId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasLabel) return false;
      if (hasClientProcessId()) {
        if (!getClientProcessId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLabel()) {
        output.writeUInt32(1, getLabel());
      }
      if (hasClientProcessId()) {
        output.writeMessage(2, getClientProcessId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLabel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getLabel());
      }
      if (hasClientProcessId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getClientProcessId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.FindClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.notification.CNotification.FindClientResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.notification.CNotification.FindClientResponse result;
      
      // Construct using bnet.protocol.notification.CNotification.FindClientResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.notification.CNotification.FindClientResponse();
        return builder;
      }
      
      protected bnet.protocol.notification.CNotification.FindClientResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.notification.CNotification.FindClientResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.notification.CNotification.FindClientResponse.getDescriptor();
      }
      
      public bnet.protocol.notification.CNotification.FindClientResponse getDefaultInstanceForType() {
        return bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.notification.CNotification.FindClientResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.notification.CNotification.FindClientResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.notification.CNotification.FindClientResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.notification.CNotification.FindClientResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.notification.CNotification.FindClientResponse) {
          return mergeFrom((bnet.protocol.notification.CNotification.FindClientResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.notification.CNotification.FindClientResponse other) {
        if (other == bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance()) return this;
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (other.hasClientProcessId()) {
          mergeClientProcessId(other.getClientProcessId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setLabel(input.readUInt32());
              break;
            }
            case 18: {
              bnet.protocol.Rpc.ProcessId.Builder subBuilder = bnet.protocol.Rpc.ProcessId.newBuilder();
              if (hasClientProcessId()) {
                subBuilder.mergeFrom(getClientProcessId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClientProcessId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 label = 1;
      public boolean hasLabel() {
        return result.hasLabel();
      }
      public int getLabel() {
        return result.getLabel();
      }
      public Builder setLabel(int value) {
        result.hasLabel = true;
        result.label_ = value;
        return this;
      }
      public Builder clearLabel() {
        result.hasLabel = false;
        result.label_ = 0;
        return this;
      }
      
      // optional .bnet.protocol.ProcessId client_process_id = 2;
      public boolean hasClientProcessId() {
        return result.hasClientProcessId();
      }
      public bnet.protocol.Rpc.ProcessId getClientProcessId() {
        return result.getClientProcessId();
      }
      public Builder setClientProcessId(bnet.protocol.Rpc.ProcessId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClientProcessId = true;
        result.clientProcessId_ = value;
        return this;
      }
      public Builder setClientProcessId(bnet.protocol.Rpc.ProcessId.Builder builderForValue) {
        result.hasClientProcessId = true;
        result.clientProcessId_ = builderForValue.build();
        return this;
      }
      public Builder mergeClientProcessId(bnet.protocol.Rpc.ProcessId value) {
        if (result.hasClientProcessId() &&
            result.clientProcessId_ != bnet.protocol.Rpc.ProcessId.getDefaultInstance()) {
          result.clientProcessId_ =
            bnet.protocol.Rpc.ProcessId.newBuilder(result.clientProcessId_).mergeFrom(value).buildPartial();
        } else {
          result.clientProcessId_ = value;
        }
        result.hasClientProcessId = true;
        return this;
      }
      public Builder clearClientProcessId() {
        result.hasClientProcessId = false;
        result.clientProcessId_ = bnet.protocol.Rpc.ProcessId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.notification.FindClientResponse)
    }
    
    static {
      defaultInstance = new FindClientResponse(true);
      bnet.protocol.notification.CNotification.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.notification.FindClientResponse)
  }
  
  public static final class RegisterClientRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterClientRequest.newBuilder() to construct.
    private RegisterClientRequest() {
      initFields();
    }
    private RegisterClientRequest(boolean noInit) {}
    
    private static final RegisterClientRequest defaultInstance;
    public static RegisterClientRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterClientRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_RegisterClientRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_RegisterClientRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId entity_id = 1;
    public static final int ENTITY_ID_FIELD_NUMBER = 1;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    private void initFields() {
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!getEntityId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntityId()) {
        output.writeMessage(1, getEntityId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntityId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.RegisterClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.notification.CNotification.RegisterClientRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.notification.CNotification.RegisterClientRequest result;
      
      // Construct using bnet.protocol.notification.CNotification.RegisterClientRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.notification.CNotification.RegisterClientRequest();
        return builder;
      }
      
      protected bnet.protocol.notification.CNotification.RegisterClientRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.notification.CNotification.RegisterClientRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.notification.CNotification.RegisterClientRequest.getDescriptor();
      }
      
      public bnet.protocol.notification.CNotification.RegisterClientRequest getDefaultInstanceForType() {
        return bnet.protocol.notification.CNotification.RegisterClientRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.notification.CNotification.RegisterClientRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.notification.CNotification.RegisterClientRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.notification.CNotification.RegisterClientRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.notification.CNotification.RegisterClientRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.notification.CNotification.RegisterClientRequest) {
          return mergeFrom((bnet.protocol.notification.CNotification.RegisterClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.notification.CNotification.RegisterClientRequest other) {
        if (other == bnet.protocol.notification.CNotification.RegisterClientRequest.getDefaultInstance()) return this;
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId entity_id = 1;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.notification.RegisterClientRequest)
    }
    
    static {
      defaultInstance = new RegisterClientRequest(true);
      bnet.protocol.notification.CNotification.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.notification.RegisterClientRequest)
  }
  
  public static final class UnregisterClientRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UnregisterClientRequest.newBuilder() to construct.
    private UnregisterClientRequest() {
      initFields();
    }
    private UnregisterClientRequest(boolean noInit) {}
    
    private static final UnregisterClientRequest defaultInstance;
    public static UnregisterClientRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UnregisterClientRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_UnregisterClientRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bnet.protocol.notification.CNotification.internal_static_bnet_protocol_notification_UnregisterClientRequest_fieldAccessorTable;
    }
    
    // required .bnet.protocol.EntityId entity_id = 1;
    public static final int ENTITY_ID_FIELD_NUMBER = 1;
    private boolean hasEntityId;
    private bnet.protocol.Entity.EntityId entityId_;
    public boolean hasEntityId() { return hasEntityId; }
    public bnet.protocol.Entity.EntityId getEntityId() { return entityId_; }
    
    private void initFields() {
      entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasEntityId) return false;
      if (!getEntityId().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntityId()) {
        output.writeMessage(1, getEntityId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntityId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntityId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static bnet.protocol.notification.CNotification.UnregisterClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bnet.protocol.notification.CNotification.UnregisterClientRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private bnet.protocol.notification.CNotification.UnregisterClientRequest result;
      
      // Construct using bnet.protocol.notification.CNotification.UnregisterClientRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new bnet.protocol.notification.CNotification.UnregisterClientRequest();
        return builder;
      }
      
      protected bnet.protocol.notification.CNotification.UnregisterClientRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new bnet.protocol.notification.CNotification.UnregisterClientRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bnet.protocol.notification.CNotification.UnregisterClientRequest.getDescriptor();
      }
      
      public bnet.protocol.notification.CNotification.UnregisterClientRequest getDefaultInstanceForType() {
        return bnet.protocol.notification.CNotification.UnregisterClientRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public bnet.protocol.notification.CNotification.UnregisterClientRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private bnet.protocol.notification.CNotification.UnregisterClientRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public bnet.protocol.notification.CNotification.UnregisterClientRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        bnet.protocol.notification.CNotification.UnregisterClientRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bnet.protocol.notification.CNotification.UnregisterClientRequest) {
          return mergeFrom((bnet.protocol.notification.CNotification.UnregisterClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(bnet.protocol.notification.CNotification.UnregisterClientRequest other) {
        if (other == bnet.protocol.notification.CNotification.UnregisterClientRequest.getDefaultInstance()) return this;
        if (other.hasEntityId()) {
          mergeEntityId(other.getEntityId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              bnet.protocol.Entity.EntityId.Builder subBuilder = bnet.protocol.Entity.EntityId.newBuilder();
              if (hasEntityId()) {
                subBuilder.mergeFrom(getEntityId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntityId(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .bnet.protocol.EntityId entity_id = 1;
      public boolean hasEntityId() {
        return result.hasEntityId();
      }
      public bnet.protocol.Entity.EntityId getEntityId() {
        return result.getEntityId();
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntityId = true;
        result.entityId_ = value;
        return this;
      }
      public Builder setEntityId(bnet.protocol.Entity.EntityId.Builder builderForValue) {
        result.hasEntityId = true;
        result.entityId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntityId(bnet.protocol.Entity.EntityId value) {
        if (result.hasEntityId() &&
            result.entityId_ != bnet.protocol.Entity.EntityId.getDefaultInstance()) {
          result.entityId_ =
            bnet.protocol.Entity.EntityId.newBuilder(result.entityId_).mergeFrom(value).buildPartial();
        } else {
          result.entityId_ = value;
        }
        result.hasEntityId = true;
        return this;
      }
      public Builder clearEntityId() {
        result.hasEntityId = false;
        result.entityId_ = bnet.protocol.Entity.EntityId.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:bnet.protocol.notification.UnregisterClientRequest)
    }
    
    static {
      defaultInstance = new UnregisterClientRequest(true);
      bnet.protocol.notification.CNotification.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:bnet.protocol.notification.UnregisterClientRequest)
  }
  
  public static abstract class NotificationService
      implements com.google.protobuf.Service {
    protected NotificationService() {}
    
    public interface Interface {
      public abstract void sendNotification(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void registerClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.RegisterClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void unregisterClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.UnregisterClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
      
      public abstract void findClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.FindClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.notification.CNotification.FindClientResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new NotificationService() {
        @Override
        public  void sendNotification(
            com.google.protobuf.RpcController controller,
            bnet.protocol.notification.CNotification.Notification request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.sendNotification(controller, request, done);
        }
        
        @Override
        public  void registerClient(
            com.google.protobuf.RpcController controller,
            bnet.protocol.notification.CNotification.RegisterClientRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.registerClient(controller, request, done);
        }
        
        @Override
        public  void unregisterClient(
            com.google.protobuf.RpcController controller,
            bnet.protocol.notification.CNotification.UnregisterClientRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
          impl.unregisterClient(controller, request, done);
        }
        
        @Override
        public  void findClient(
            com.google.protobuf.RpcController controller,
            bnet.protocol.notification.CNotification.FindClientRequest request,
            com.google.protobuf.RpcCallback<bnet.protocol.notification.CNotification.FindClientResponse> done) {
          impl.findClient(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.sendNotification(controller, (bnet.protocol.notification.CNotification.Notification)request);
            case 1:
              return impl.registerClient(controller, (bnet.protocol.notification.CNotification.RegisterClientRequest)request);
            case 2:
              return impl.unregisterClient(controller, (bnet.protocol.notification.CNotification.UnregisterClientRequest)request);
            case 3:
              return impl.findClient(controller, (bnet.protocol.notification.CNotification.FindClientRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.notification.CNotification.Notification.getDefaultInstance();
            case 1:
              return bnet.protocol.notification.CNotification.RegisterClientRequest.getDefaultInstance();
            case 2:
              return bnet.protocol.notification.CNotification.UnregisterClientRequest.getDefaultInstance();
            case 3:
              return bnet.protocol.notification.CNotification.FindClientRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 1:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 2:
              return bnet.protocol.Rpc.NoData.getDefaultInstance();
            case 3:
              return bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void sendNotification(
        com.google.protobuf.RpcController controller,
        bnet.protocol.notification.CNotification.Notification request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void registerClient(
        com.google.protobuf.RpcController controller,
        bnet.protocol.notification.CNotification.RegisterClientRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void unregisterClient(
        com.google.protobuf.RpcController controller,
        bnet.protocol.notification.CNotification.UnregisterClientRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done);
    
    public abstract void findClient(
        com.google.protobuf.RpcController controller,
        bnet.protocol.notification.CNotification.FindClientRequest request,
        com.google.protobuf.RpcCallback<bnet.protocol.notification.CNotification.FindClientResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.sendNotification(controller, (bnet.protocol.notification.CNotification.Notification)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 1:
          this.registerClient(controller, (bnet.protocol.notification.CNotification.RegisterClientRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 2:
          this.unregisterClient(controller, (bnet.protocol.notification.CNotification.UnregisterClientRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NoData>specializeCallback(
              done));
          return;
        case 3:
          this.findClient(controller, (bnet.protocol.notification.CNotification.FindClientRequest)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.notification.CNotification.FindClientResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.notification.CNotification.Notification.getDefaultInstance();
        case 1:
          return bnet.protocol.notification.CNotification.RegisterClientRequest.getDefaultInstance();
        case 2:
          return bnet.protocol.notification.CNotification.UnregisterClientRequest.getDefaultInstance();
        case 3:
          return bnet.protocol.notification.CNotification.FindClientRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 1:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 2:
          return bnet.protocol.Rpc.NoData.getDefaultInstance();
        case 3:
          return bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends bnet.protocol.notification.CNotification.NotificationService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void sendNotification(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void registerClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.RegisterClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void unregisterClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.UnregisterClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NoData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NoData.class,
            bnet.protocol.Rpc.NoData.getDefaultInstance()));
      }
      
      public  void findClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.FindClientRequest request,
          com.google.protobuf.RpcCallback<bnet.protocol.notification.CNotification.FindClientResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.notification.CNotification.FindClientResponse.class,
            bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public bnet.protocol.Rpc.NoData sendNotification(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData registerClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.RegisterClientRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.Rpc.NoData unregisterClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.UnregisterClientRequest request)
          throws com.google.protobuf.ServiceException;
      
      public bnet.protocol.notification.CNotification.FindClientResponse findClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.FindClientRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public bnet.protocol.Rpc.NoData sendNotification(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData registerClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.RegisterClientRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.Rpc.NoData unregisterClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.UnregisterClientRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NoData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          bnet.protocol.Rpc.NoData.getDefaultInstance());
      }
      
      
      public bnet.protocol.notification.CNotification.FindClientResponse findClient(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.FindClientRequest request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.notification.CNotification.FindClientResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          bnet.protocol.notification.CNotification.FindClientResponse.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class NotificationListener
      implements com.google.protobuf.Service {
    protected NotificationListener() {}
    
    public interface Interface {
      public abstract void onNotificationReceived(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NO_RESPONSE> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new NotificationListener() {
        @Override
        public  void onNotificationReceived(
            com.google.protobuf.RpcController controller,
            bnet.protocol.notification.CNotification.Notification request,
            com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NO_RESPONSE> done) {
          impl.onNotificationReceived(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.onNotificationReceived(controller, (bnet.protocol.notification.CNotification.Notification)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.notification.CNotification.Notification.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void onNotificationReceived(
        com.google.protobuf.RpcController controller,
        bnet.protocol.notification.CNotification.Notification request,
        com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NO_RESPONSE> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return bnet.protocol.notification.CNotification.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.onNotificationReceived(controller, (bnet.protocol.notification.CNotification.Notification)request,
            com.google.protobuf.RpcUtil.<bnet.protocol.Rpc.NO_RESPONSE>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.notification.CNotification.Notification.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends bnet.protocol.notification.CNotification.NotificationListener implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void onNotificationReceived(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request,
          com.google.protobuf.RpcCallback<bnet.protocol.Rpc.NO_RESPONSE> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            bnet.protocol.Rpc.NO_RESPONSE.class,
            bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public bnet.protocol.Rpc.NO_RESPONSE onNotificationReceived(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public bnet.protocol.Rpc.NO_RESPONSE onNotificationReceived(
          com.google.protobuf.RpcController controller,
          bnet.protocol.notification.CNotification.Notification request)
          throws com.google.protobuf.ServiceException {
        return (bnet.protocol.Rpc.NO_RESPONSE) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          bnet.protocol.Rpc.NO_RESPONSE.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_notification_Notification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_notification_Notification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_notification_FindClientRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_notification_FindClientRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_notification_FindClientResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_notification_FindClientResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_notification_RegisterClientRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_notification_RegisterClientRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bnet_protocol_notification_UnregisterClientRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bnet_protocol_notification_UnregisterClientRequest_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'service/notification/notification.prot" +
      "o\022\032bnet.protocol.notification\032\034lib/proto" +
      "col/attribute.proto\032\031lib/protocol/entity" +
      ".proto\032\021lib/rpc/rpc.proto\"\341\001\n\014Notificati" +
      "on\022*\n\tsender_id\030\001 \001(\0132\027.bnet.protocol.En" +
      "tityId\0224\n\023sender_game_account\030\002 \001(\0132\027.bn" +
      "et.protocol.EntityId\022*\n\ttarget_id\030\003 \002(\0132" +
      "\027.bnet.protocol.EntityId\022\014\n\004type\030\004 \002(\t\0225" +
      "\n\tattribute\030\005 \003(\0132\".bnet.protocol.attrib" +
      "ute.Attribute\"?\n\021FindClientRequest\022*\n\ten",
      "tity_id\030\001 \002(\0132\027.bnet.protocol.EntityId\"X" +
      "\n\022FindClientResponse\022\r\n\005label\030\001 \002(\r\0223\n\021c" +
      "lient_process_id\030\002 \001(\0132\030.bnet.protocol.P" +
      "rocessId\"C\n\025RegisterClientRequest\022*\n\tent" +
      "ity_id\030\001 \002(\0132\027.bnet.protocol.EntityId\"E\n" +
      "\027UnregisterClientRequest\022*\n\tentity_id\030\001 " +
      "\002(\0132\027.bnet.protocol.EntityId2\223\003\n\023Notific" +
      "ationService\022S\n\020SendNotification\022(.bnet." +
      "protocol.notification.Notification\032\025.bne" +
      "t.protocol.NoData\022Z\n\016RegisterClient\0221.bn",
      "et.protocol.notification.RegisterClientR" +
      "equest\032\025.bnet.protocol.NoData\022^\n\020Unregis" +
      "terClient\0223.bnet.protocol.notification.U" +
      "nregisterClientRequest\032\025.bnet.protocol.N" +
      "oData\022k\n\nFindClient\022-.bnet.protocol.noti" +
      "fication.FindClientRequest\032..bnet.protoc" +
      "ol.notification.FindClientResponse2v\n\024No" +
      "tificationListener\022^\n\026OnNotificationRece" +
      "ived\022(.bnet.protocol.notification.Notifi" +
      "cation\032\032.bnet.protocol.NO_RESPONSEB\022B\rCN",
      "otification\200\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bnet_protocol_notification_Notification_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bnet_protocol_notification_Notification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_notification_Notification_descriptor,
              new java.lang.String[] { "SenderId", "SenderGameAccount", "TargetId", "Type", "Attribute", },
              bnet.protocol.notification.CNotification.Notification.class,
              bnet.protocol.notification.CNotification.Notification.Builder.class);
          internal_static_bnet_protocol_notification_FindClientRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bnet_protocol_notification_FindClientRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_notification_FindClientRequest_descriptor,
              new java.lang.String[] { "EntityId", },
              bnet.protocol.notification.CNotification.FindClientRequest.class,
              bnet.protocol.notification.CNotification.FindClientRequest.Builder.class);
          internal_static_bnet_protocol_notification_FindClientResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bnet_protocol_notification_FindClientResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_notification_FindClientResponse_descriptor,
              new java.lang.String[] { "Label", "ClientProcessId", },
              bnet.protocol.notification.CNotification.FindClientResponse.class,
              bnet.protocol.notification.CNotification.FindClientResponse.Builder.class);
          internal_static_bnet_protocol_notification_RegisterClientRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bnet_protocol_notification_RegisterClientRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_notification_RegisterClientRequest_descriptor,
              new java.lang.String[] { "EntityId", },
              bnet.protocol.notification.CNotification.RegisterClientRequest.class,
              bnet.protocol.notification.CNotification.RegisterClientRequest.Builder.class);
          internal_static_bnet_protocol_notification_UnregisterClientRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_bnet_protocol_notification_UnregisterClientRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bnet_protocol_notification_UnregisterClientRequest_descriptor,
              new java.lang.String[] { "EntityId", },
              bnet.protocol.notification.CNotification.UnregisterClientRequest.class,
              bnet.protocol.notification.CNotification.UnregisterClientRequest.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          bnet.protocol.attribute.CAttribute.getDescriptor(),
          bnet.protocol.Entity.getDescriptor(),
          bnet.protocol.Rpc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
